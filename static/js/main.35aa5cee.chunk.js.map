{"version":3,"sources":["../../connections-table/utils/statusFilter.js","../../streams-table/definitions/streamsColumns.js","../../streams-table/utils/statusSorter.js","../../data/lib/binary.js","../../proto/index.js","../../proto/lib/introspection_pb.js","../../proto/lib/fnv1a.js","../../data/lib/enums.js","../../data/lib/helpers.js","../../samples/samples/index.js","../../samples/samples/sample-1min.mock","components/ContextWrappers.js","../../shell/components/Timeline/utils.js","../../shell/components/Timeline/DataTicks.js","../../shell/components/Timeline/TimeTicks.js","../../shell/components/Timeline/TimelinePaths.js","../../shell/components/Timeline/TimeSlider.js","../../shell/components/Timeline/Timeline.js","../../shell/components/DataPanel/DataTypeControl.js","../../shell/components/DataPanel/DataPanel.js","../../shell/components/ControlPanel.js","../../shell/components/DemoShell.js","definitions/utils.js","../../connections-table/components/ConnectionsTableRow.js","../../connections-table/components/ConnectionsTable.js","../../connections-table/description.md","../../connections-table/index.js","../../streams-table/components/StreamsTable.js","../../streams-table/description.md","../../streams-table/index.js","definitions/approvedWidgets.js","components/CatalogueItem.js","components/HeaderTabs.js","components/SelectedWidget.js","components/Page.js","App.js","serviceWorker.js","index.js","../../connections-table/components/StatusChip.js","../../connections-table/components/cellContent.js","../../sdk/components/context/DataProvider.js","../../sdk/components/context/RootNodeProvider.js","../../sdk/theme/fontFaces.js","../../sdk/theme/theme.js","../../sdk/components/context/ThemeSetter.js","../../sdk/theme/icons.js","../../sdk/theme/icons/Asc.js","../../sdk/theme/icons/Desc.js","../../sdk/theme/icons/Sort.js","../../sdk/theme/icons/Cancel.js","../../sdk/theme/icons/Check.js","../../sdk/theme/icons/Uncheck.js","../../sdk/theme/icons/Filter.js","../../sdk/theme/icons/Back.js","../../sdk/theme/icons/Forward.js","../../sdk/theme/icons/Doc.js","../../sdk/theme/icons/Cloud.js","../../sdk/theme/icons/Closed.js","../../sdk/theme/icons/Closing.js","../../sdk/theme/icons/Opening.js","../../sdk/theme/icons/Marker.js","../../sdk/theme/icons/Expand.js","../../sdk/components/Icon.js","../../sdk/components/input/fields/CheckboxList.js","../../sdk/components/Tooltip.js","../../sdk/components/input/fields/Slider.js","../../sdk/components/input/StyledButton.js","../../sdk/utils/helpers.js","../../sdk/utils/files.js","../../sdk/utils/formats.js","../../sdk/components/input/SampleDataButton.js","../../sdk/components/input/UploadDataButton.js","../../sdk/components/DataTable/styledTable.js","../../sdk/components/DataTable/DataTableRow.js","../../sdk/components/input/FilterButton.js","../../sdk/components/DataTable/DataTableHead.js","../../sdk/components/DataTable/DataTable.js","../../sdk/components/DataTable/numberFields.js","../../sdk/components/PeerId/PeerIdAvatar.js","../../sdk/components/PeerId/utils.js","../../sdk/components/PeerId/PeerIdTooltip.js","../../sdk/components/PeerId/PeerIdTruncated.js","../../sdk/components/PeerId/PeerIdChip.js","../../sdk/components/AccordionControl.js","../../sdk/components/Bubble.js","../../sdk/hooks/useFilter.js","../../sdk/hooks/useSorter.js","../../sdk/hooks/useStackedData.js","../../sdk/hooks/useTabularData.js","../../sdk/hooks/useAreaChart.js","../../sdk/filters/getListFilter.js","../../sdk/filters/getRangeFilter.js","../../sdk/sorters/getNumericSorter.js","../../sdk/sorters/getStringSorter.js","../../sdk/index.js","../../streams-table/components/cellContent.js","../../samples/index.js","../../data/index.js","../../connections-table/screenshot.png","../../streams-table/screenshot.png","../../sdk/theme/fonts/Nexa-Light.otf","../../sdk/theme/fonts/Nexa-Bold.otf","../../sdk/theme/fonts/IBMPlexSans-ExtraLight.otf","../../sdk/theme/fonts/IBMPlexSans-Light.otf","../../sdk/theme/fonts/IBMPlexSans-Regular.otf","../../sdk/theme/fonts/IBMPlexSans-Text.otf","../../sdk/theme/fonts/IBMPlexSans-Medium.otf","../../sdk/theme/fonts/IBMPlexSans-SemiBold.otf","../../sdk/theme/fonts/IBMPlexSans-Bold.otf","../../sdk/theme/fonts/IBMPlexMono-Light.otf","../../sdk/theme/fonts/IBMPlexMono-Text.otf","../../sdk/theme/fonts/IBMPlexMono-SemiBold.otf","../../connections-table/definitions/connectionsColumns.js","../../connections-table/utils/statusSorter.js"],"names":["statusNamesList","Object","values","statusNames","statusFilter","getListFilter","name","options","stringSorter","getSorter","getStringSorter","defaultDirection","numericSorter","getNumericSorter","peerIdCol","header","getProps","value","connection","getPeerId","renderContent","PeerIdContent","sort","transportCol","transportIdBin","getTransportId","transportIdInt","Buffer","from","readUIntLE","length","transportNames","dataInCol","_","metadata","stream","getStreamTraffic","maxValue","maxTraffic","colorKey","BytesContent","dataOutCol","columns","AgeContent","getProtocol","getStatus","statusSorter","directionOptions","openFirstOrder","closedFirstOrder","direction","a","b","statusOrder","indexOf","_require","deserializeBinary","fnv1a","parseBuffer","buf","byteLength","bytesParsed","messages","states","runtime","messageChecksum","messageStart","messageEnd","messageBin","slice","addMessageContent","console","error","concat","message","runtimeContent","getRuntime","stateContent","getState","push","parseArrayBuffer","arrayBuf","parseBase64","dataString","module","exports","parseImport","rawData","ArrayBuffer","String","proto","ProtocolDataPacket","jspb","goog","global","Function","google_protobuf_timestamp_pb","object","extend","exportSymbol","introspection","Version","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","ResultCounter","SlidingCounter","DataGauge","Runtime","EndpointPair","Traffic","StreamList","repeatedFields_","Connection","oneofGroups_","Timeline","Attributes","Stream","ConnectionRef","DHT","Params","Query","Subsystems","State","ClientSignal","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","version","getFieldWithDefault","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readUint32","setVersion","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","f","getVersion","writeUint32","setProto3IntField","total","ok","err","setTotal","setOk","setErr","undefined","getTotal","getOk","getErr","over1m","over5m","over15m","over30m","over1hr","over2hr","over4hr","over8hr","over12hr","over24hr","setOver1m","setOver5m","setOver15m","setOver30m","setOver1hr","setOver2hr","setOver4hr","setOver8hr","setOver12hr","setOver24hr","getOver1m","getOver5m","getOver15m","getOver30m","getOver1hr","getOver2hr","getOver4hr","getOver8hr","getOver12hr","getOver24hr","cumBytes","cumPackets","instBw","readUint64","setCumBytes","setCumPackets","setInstBw","getCumBytes","writeUint64","getCumPackets","getInstBw","implementation","platform","peerId","readString","setImplementation","setPlatform","setPeerId","getImplementation","writeString","getPlatform","setProto3StringField","srcMultiaddr","dstMultiaddr","setSrcMultiaddr","setDstMultiaddr","getSrcMultiaddr","getDstMultiaddr","trafficIn","getTrafficIn","trafficOut","getTrafficOut","readMessage","setTrafficIn","setTrafficOut","writeMessage","getWrapperField","setWrapperField","clearTrafficIn","hasTrafficIn","getField","clearTrafficOut","hasTrafficOut","streamIdsList","getStreamIdsList_asB64","streamsList","toObjectList","getStreamsList","readBytes","addStreamIds","addStreams","getStreamIdsList_asU8","writeRepeatedBytes","writeRepeatedMessage","getStreamIdsList","getRepeatedField","bytesListAsB64","bytesListAsU8","setStreamIdsList","setField","opt_index","addToRepeatedField","clearStreamIdsList","getRepeatedWrapperField","setStreamsList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearStreamsList","RelayedOverCase","RELAYED_OVER_NOT_SET","CONN_ID","CONN","getRelayedOverCase","computeOneofCase","id","getId_asB64","status","transportId","getTransportId_asB64","endpoints","getEndpoints","timeline","getTimeline","role","traffic","getTraffic","attribs","getAttribs","latencyNs","streams","getStreams","connId","getConnId_asB64","conn","getConn","userProvidedTagsList","setId","readEnum","setStatus","setTransportId","setEndpoints","setTimeline","setRole","setTraffic","setAttribs","setLatencyNs","setStreams","setConnId","setConn","addUserProvidedTags","getId_asU8","writeBytes","writeEnum","getTransportId_asU8","getRole","getLatencyNs","getUserProvidedTagsList","writeRepeatedString","openTs","getOpenTs","Timestamp","upgradedTs","getUpgradedTs","closeTs","getCloseTs","setOpenTs","setUpgradedTs","setCloseTs","clearOpenTs","hasOpenTs","clearUpgradedTs","hasUpgradedTs","clearCloseTs","hasCloseTs","multiplexer","encryption","setMultiplexer","setEncryption","getMultiplexer","getEncryption","getId","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3EnumField","clearEndpoints","hasEndpoints","clearTimeline","hasTimeline","clearTraffic","hasTraffic","clearAttribs","hasAttribs","clearStreams","hasStreams","getConnId","getConnId_asU8","setOneofField","clearConnId","hasConnId","setOneofWrapperField","clearConn","hasConn","setUserProvidedTagsList","clearUserProvidedTagsList","protocol","setProtocol","ConnectionCase","CONNECTION_NOT_SET","getConnectionCase","enabled","getBooleanFieldWithDefault","startTs","getStartTs","params","getParams","queryList","getQueryList","readBool","setEnabled","setStartTs","setParams","addQuery","getEnabled","writeBool","k","alpha","disjointPaths","setK","setAlpha","setDisjointPaths","getK","getAlpha","getDisjointPaths","targetPeerId","totalTimeMs","totalSteps","peerIdsList","trigger","type","result","sentTs","getSentTs","setTargetPeerId","setTotalTimeMs","setTotalSteps","addPeerIds","setTrigger","setType","setResult","setSentTs","getTargetPeerId","getTotalTimeMs","getTotalSteps","getPeerIdsList","getTrigger","getType","getResult","Trigger","API","DISCOVERY","Type","CONTENT","PROVIDER","VALUE","Result","SUCCESS","ERROR","TIMEOUT","PENDING","setPeerIdsList","clearPeerIdsList","clearSentTs","hasSentTs","setProto3BooleanField","clearStartTs","hasStartTs","clearParams","hasParams","setQueryList","clearQueryList","connectionsList","getConnectionsList","dht","getDht","addConnections","setDht","setConnectionsList","clearConnectionsList","clearDht","hasDht","subsystems","getSubsystems","instantTs","getInstantTs","snapshotDurationMs","setSubsystems","setInstantTs","setSnapshotDurationMs","getSnapshotDurationMs","clearSubsystems","hasSubsystems","clearInstantTs","hasInstantTs","MessageCase","MESSAGE_NOT_SET","STATE","RUNTIME","getMessageCase","state","setState","setRuntime","clearVersion","hasVersion","clearState","hasState","clearRuntime","hasRuntime","signal","dataSource","setSignal","setDataSource","getSignal","getDataSource","Signal","SEND_DATA","START_PUSH_EMITTER","STOP_PUSH_EMITTER","PAUSE_PUSH_EMITTER","UNPAUSE_PUSH_EMITTER","DataSource","Status","ACTIVE","CLOSED","OPENING","CLOSING","Role","INITIATOR","RESPONDER","OFFSET_BASIS_32","input","hash","i","fnv1aBuffer","string","charCodeAt","fnv1aString","Error","0","1","2","3","4","roleNames","_slicedToArray","_toConsumableArray","getConnections","timepoint","getTime","format","timestamp","getSeconds","_getAge","_getTraffic","byDirection","byType","getAllConnections","timepoints","_ref","arguments","filter","_ref$latest","latest","reduce","previousConns","newConns","testConn","testConnection","some","existingConn","toString","getAllStreamsAtTime","map","getEnumByName","entry","entries","find","_ref2","_ref3","join","parseInt","getLatestTimepoint","getTimeIndex","time","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","getConnectionAge","getStreamAge","getConnectionTraffic","ContextWrappers","children","getTickOffsets","ticks","scale","tickGap","firstTickGap","domain","lastTickGap","totalGapValues","firstTickOffset","tickOffset","Array","fill","getTrafficChangesByPeer","dataset","keys","previousTimepointIndex","connectionsById","trafficByPeer","previousTimepoint","previousConn","validateNumbers","getTotalTraffic","dataIn","dataOut","getPeerIds","sorter","applyFilters","filteredConnections","TicksContainer","styled","div","height","width","TickLabel","label","theme","spacing","fromSide","color","text","TickValue","span","TickUnit","AxisLabel","nbsp","DataTicks","dataDirection","topTick","tickOffsets","lowestTickUnitPair","Infinity","ticksFormatted","tickValue","formatDataSize","formattedValue","unit","tickIndex","style","key","TimeTicks","Math","round","tick","left","formatTime","Container","StyledSvg","svg","StyledPath","path","opacity","isHighlighted","TimelinePaths","xScale","yScale","stackedData","leftGutter","globalPeerId","useContext","PeerContext","SetterContext","flip","pathDefs","useAreaChart","pathDef","d","onMouseEnter","onMouseLeave","FormWrapper","FirstSection","Control","InactiveSection","NumberFieldsWrapper","TooltipContent","TooltipPositioner","withTheme","override","containerRef","useRef","DataContext","TimeContext","setTimepoint","timeIndex","controlWidth","sliderOverrides","assign","initialValues","tooltipProps","fixOn","Content","Positioner","tolerance","content","ref","onSubmit","stepIndex","setFieldValue","submitForm","onChange","max","TimelineInner","BarWrapper","onClick","PathsContainer","withResizeDetector","useStackedData","keyData","getKeys","mapSorter","yScaleIn","stackedDataOut","yScaleOut","nice","Bar","forwardRef","propTypes","T","number","isRequired","func","node","IconButton","button","ButtonText","DataTypeControl","useState","setHighlighted","iconType","sample","upload","DataPanelItem","isFixed","boxShadow","IconContainer","DataPanel","RuntimeContext","Target","DataPanelSection","TimePanelSection","ControlPanel","validateWidgetFields","widget","Component","description","tags","screenshot","isArray","ConnectionsTableRow","rowContentProps","columnDefs","peerIdRow","row","columnName","highlighted","ConnectionsTable","useMemo","maxValues","timeMax","maxAge","age","getMaxValues","useTabularData","connectionsColumnDefs","data","defaultSort","contentProps","sortColumn","setSortColumn","sortDirection","setSortDirection","DataTableRow","StreamsTable","streamsData","streamsColumnDefs","approvedWidgets","connectionsTable","streamsTable","CatalogueCard","isSelected","CardContent","Tag","li","TagList","ul","StyledImg","img","StyledHeader","h3","StyledHeaderInner","CatalogueItem","handleSelect","src","source","tag","TabsWrapper","SelectedTab","UnselectedTab","ButtonWrapper","HeaderTabs","selectedTab","setSelectedTab","dispatchDataset","changeTab","tabIndex","action","SampleDataTab","title","samplePath","samples","UploadDataTab","ConnectWebsocketTab","article","size","Header","WidgetContainer","section","Title","h1","CloseButton","Description","transition","SelectedWidget","setSelected","descriptionOpen","setDescriptionOpen","isOpen","setIsOpen","side","as","Main","CatalogueBkg","Page","selected","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","getColor","ChipText","StatusChip","chipMap","icon","colorIndex","Nowrap","StatusContent","inline","ageSeconds","formatDuration","createContext","updateData","oldData","newData","appendToDataSet","DataProvider","initialData","initialTime","useReducer","dataSetters","includes","latestTimepoint","Provider","current","RootNodeContext","RootNodeProvider","rootNodeRef","refState","setRefState","useEffect","getFontFace","font","file","weight","nexa_light","nexa_bold","plexSans_extraLight","plexSans_light","plexSans_regular","plexSans_text","plexSans_medium","plexSans_semiBold","plexSans_bold","plexMono_light","plexMono_text","plexMono_semiBold","palette","background","contrast","primary","secondary","tertiary","highlight","col","val","rgb","returnNum","num","typography","default","body","small","medium","large","heading","elem","tableCell","shadowColor","target","duration","easing","styles","ThemeSetter","ThemeProvider","GlobalFontFaceStyles","createGlobalStyle","fontFaces","GlobalDefaults","asc","props","viewBox","strokeLinejoin","strokeMiterlimit","desc","cancel","className","check","data-name","stroke","strokeWidth","uncheck","back","forward","doc","cloud","closed","closing","opening","marker","cx","cy","r","expand","active","disabled","offset","Icon","IconSvg","icons","areAllChecked","every","StyledList","StyledListItem","StyledToggleButton","checked","CheckboxList","fieldNames","async","newValue","Promise","all","toggleAll","toggleField","getInvertedDirection","top","bottom","right","getPosition","mainPosition","isVertical","centredSide","centredAxis","clickToFix","tickSize","offsets","Tick","invertedDirection","getTickBorderColor","getTickPosition","sideOptions","fixOnOptions","Tooltip","alwaysFix","setIsFixed","isShowing","setIsShowing","positionerRef","tickRef","useLayoutEffect","elemRect","getBoundingClientRect","boundsRect","marginLeft","marginTop","currentLeft","parseFloat","currentTop","min","updateOffset","e","stopPropagation","CONTROL_WIDTH","WIDTH","ActiveSection","BAR_HEIGHT","isLower","isUpper","NumberInput","isDefault","NumberLabelWrapper","NumberLabel","getMouseX","event","nativeEvent","clientX","getMousePosition","mouseX","getStepPosition","steps","stepIndexWithinMin","getStepIndex","position","getNearestFieldName","mousePosition","upperPosition","abs","Slider","stepInterval","isRange","ceil","lowerInputRef","upperInputRef","fieldIsSliding","setFieldSliding","lowerNumberInput","setLowerNumberInput","upperNumberInput","setUpperNumberInput","lowerStepIndex","upperStepIndex","lowerPosition","slideStart","fieldName","slideEnd","handleMouseMove","handleChange","handleNumberInput","isNaN","updateNumberInput","getValidatedIndex","wasValid","updateFieldValue","numberInputRef","activeElement","belowPercent","abovePercent","controlOffset","upperControlOffset","onMouseUp","onMouseMove","onMouseDown","step","onBlur","StyledButton","isActive","errors","uploadDataFile","onUploadStart","onDataLoaded","FileReader","onload","processUploadedData","currentTarget","readAsArrayBuffer","applySampleData","fetch","response","statusText","url","arrayBuffer","padZero","toLocaleString","minimumIntegerDigits","formatNumber","units","sigFigures","divider","irregularPlural","toPrecision","ms","_formatNumberRecursion","maxRecursions","rounding","unitsFloat","perUnit","unitsInt","segment","str","pluralize","nextSegment","Date","hr","getHours","getMinutes","sec","SampleDataButton","isLoading","setIsLoading","handleUploadStart","handleDataLoaded","isSample","buttonText","FileButton","NativeFileInput","RelativeSpan","UploadDataButton","fileName","setFileName","fileInputRef","getButtonText","click","files","Table","table","TableRow","tr","TableHead","th","TableCell","td","align","THead","thead","THeadRow","TBody","tbody","rowProps","prerenderedCells","cellIndex","cellProps","AccordionContent","FilterButton","addFilter","removeFilter","FilterUi","initialFieldValues","filterUiProps","mapValues","toggleOpen","fromEntries","newValues","setSubmitting","isEqual","enableReinitialize","dirty","ButtonsTray","DataTableHead","columnDef","isSortable","isSorted","isFilterable","sortIconType","getSortType","sortable","filterable","defaultSortDirection","sortIconAction","DataTable","DefaultDataTableRow","DefaultDataTableHead","rowIndex","NumWrapper","Unit","FormatedNumber","TimeNumber","DataNumber","colorHash","ColorHash","SvgContainer","PeerIdAvatar","colors","quarter","floor","half","hex","getColors","getTruncatedPeerId","SegmentedPeerId","LastSegment","getPeerSegment","segmentText","isLast","truncated","mainSegment","PeerIdTooltip","isCopied","setIsCopied","segmentsLength","peerIdSegments","copyButtonText","clipboard","writeText","setTimeout","TextStyle","PeerIdTruncated","truncatedId","NoWrap","PeerIdChip","colorTransition","css","AccordionButton","AccordionIcon","AccordionControl","overrides","BubbleShape","percentOfSize","Bubble","sqrt","updateFilters","filters","doFilter","mapFilter","updateValues","newFilter","filterName","filterIndex","findIndex","splice","existingFilter","useFilter","initialFilters","dispatchFilters","useCallback","datum","arrayOf","shape","any","noopSorter","defaultOptions","useSorter","directionOptionKeys","option","validateDirection","makeSorter","array","bool","stackData","keyedData","stack","dataStacker","maxY","maxOverall","timeDatum","maxHere","upperAreaPoint","getMaxAreaPeak","scaleTime","minX","maxX","scaleLinear","getKeyedData","mapSorterToColumn","colName","sortColumnIndex","DefaultRenderer","defaultFilter","columnsWithDefaults","column","applyColumnDefaults","rawContentProps","columnIndex","getContentProps","calculate","columnProps","calculated","doCalc","applyCalculations","sortDef","getInitialSortDef","forEach","filteredContentProps","required","elementType","instanceOf","Map","filterUi","areaMaker","range","area","x","y0","y1","scaleAreaChart","getPathDefs","targetValue","DefaultUi","defaultValue","getRangeFilter","caselessSorter","Intl","Collator","compare","sortNum","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","binary","enums","helpers","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","getMaxValue","ageCol","streamsCol"],"mappings":"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","file":"static/js/main.35aa5cee.chunk.js","sourcesContent":["import { getListFilter } from '@libp2p-observer/sdk'\nimport { statusNames } from '@libp2p-observer/data'\n\nconst statusNamesList = Object.values(statusNames)\n\nconst statusFilter = getListFilter({\n  name: 'Filter by status',\n  options: statusNamesList,\n})\n\nexport default statusFilter\n","import {\n  getStreamAge,\n  getStreamTraffic,\n  statusNames,\n  transportNames,\n} from '@libp2p-observer/data'\nimport { getStringSorter, getNumericSorter } from '@libp2p-observer/sdk'\n\nimport {\n  AgeContent,\n  BytesContent,\n  PeerIdContent,\n} from '../components/cellContent'\n\nimport * as statusSorter from '../utils/statusSorter'\n\nconst stringSorter = {\n  getSorter: getStringSorter,\n  defaultDirection: 'asc',\n}\n\nconst numericSorter = {\n  getSorter: getNumericSorter,\n  defaultDirection: 'desc',\n}\n\nconst peerIdCol = {\n  name: 'peerId',\n  header: 'Peer ID',\n  getProps: ({ connection }) => ({ value: connection.getPeerId() }),\n  renderContent: PeerIdContent,\n  sort: stringSorter,\n}\n\nconst transportCol = {\n  name: 'transport',\n  getProps: ({ connection }) => {\n    const transportIdBin = connection.getTransportId()\n    const transportIdInt = Buffer.from(transportIdBin).readUIntLE(\n      0,\n      transportIdBin.length\n    )\n    return { value: transportNames[transportIdInt] }\n  },\n  sort: stringSorter,\n}\n\nconst dataInCol = {\n  name: 'data-in',\n  header: 'Data in',\n  getProps: ({ stream }, _, metadata) => ({\n    value: getStreamTraffic(stream, 'in', 'bytes'),\n    maxValue: metadata.maxTraffic,\n    colorKey: 'primary',\n  }),\n  renderContent: BytesContent,\n  sort: numericSorter,\n}\n\nconst dataOutCol = {\n  name: 'data-out',\n  header: 'Data out',\n  getProps: ({ stream }, _, metadata) => ({\n    value: getStreamTraffic(stream, 'in', 'bytes'),\n    maxValue: metadata.maxTraffic,\n    colorKey: 'secondary',\n  }),\n  renderContent: BytesContent,\n  sort: numericSorter,\n}\n\n// TODO: fix this, calculation incorrect for mock streams\n/* eslint-disable no-unused-vars */\nconst ageCol = {\n  name: 'age',\n  header: 'Time open',\n  getProps: ({ stream }, timepoint) => {\n    const time = timepoint.getInstantTs()\n    const openTs = stream.getTimeline().getOpenTs()\n    const closeTs = stream.getTimeline().getCloseTs()\n    const age = getStreamAge(stream, timepoint)\n    return { value: age }\n  },\n  renderContent: AgeContent,\n  sort: numericSorter,\n}\n/* eslint-enable no-unused-vars */\n\nconst protocolCol = {\n  name: 'protocol',\n  getProps: ({ stream }) => ({ value: stream.getProtocol() }),\n  sort: stringSorter,\n}\n\nconst streamStatusCol = {\n  name: 'stream-status',\n  header: 'status',\n  getProps: ({ stream }) => ({ value: statusNames[stream.getStatus()] }),\n  sort: statusSorter,\n}\n\n// Define column order\nconst columns = [\n  peerIdCol,\n  transportCol,\n  dataInCol,\n  dataOutCol,\n  // ageCol,\n  protocolCol,\n  streamStatusCol,\n]\n\nexport default columns\n","const defaultDirection = 'asc'\n\nconst directionOptions = [\n  ['asc', 'Open first'],\n  ['desc', 'Closed first'],\n]\n\nconst openFirstOrder = ['ACTIVE', 'OPENING', 'CLOSING', 'CLOSED', 'ERROR']\nconst closedFirstOrder = ['CLOSED', 'CLOSING', 'ERROR', 'ACTIVE', 'OPENING']\n\nfunction getSorter(direction) {\n  const statusSorter = (a, b) => {\n    if (a === b) return 0\n    const statusOrder = direction === 'asc' ? openFirstOrder : closedFirstOrder\n    const sortNum = statusOrder.indexOf(a) > statusOrder.indexOf(b) ? 1 : -1\n    return sortNum\n  }\n  return statusSorter\n}\n\nexport { defaultDirection, directionOptions, getSorter }\n","'use strict';\n\nvar _require = require('@libp2p-observer/proto'),\n    deserializeBinary = _require.deserializeBinary,\n    fnv1a = _require.fnv1a;\n\nfunction parseBuffer(buf) {\n  // Expects a binary file with this structure:\n  // - 4-byte version number\n  // - The following is repeated\n  // - 4-byte checksum of following message\n  // - 4-byte length of following message\n  // - message (typically state)\n  var byteLength = Buffer.byteLength(buf);\n  var bytesParsed = 0;\n  var messages = {\n    states: [],\n    runtime: null\n  };\n  var versionNumberLength = 4;\n  var messageChecksumLength = 4;\n  var messageSizeLength = 4; // Skip version number\n\n  bytesParsed += versionNumberLength; // TODO - add async variant\n\n  while (bytesParsed < byteLength) {\n    var messageChecksum = buf.readUIntLE(bytesParsed, messageChecksumLength);\n    bytesParsed += messageChecksumLength;\n    var messageSize = buf.readUIntLE(bytesParsed, messageSizeLength);\n    var messageStart = bytesParsed + messageSizeLength;\n    var messageEnd = messageStart + messageSize;\n    var messageBin = buf.slice(messageStart, messageEnd);\n    var validChecksum = messageChecksum === fnv1a(messageBin); // TODO: bubble an error message for an invalid checksum\n\n    if (validChecksum) {\n      addMessageContent(messageBin, messages);\n    } else {\n      console.error(\"Skipped bytes from \".concat(messageStart, \" to \").concat(messageEnd, \" due to checksum mismatch\"));\n    }\n\n    bytesParsed = messageEnd;\n  }\n\n  return messages;\n}\n\nfunction addMessageContent(messageBin, messages) {\n  var message = deserializeBinary(messageBin);\n  var runtimeContent = message.getRuntime();\n  var stateContent = message.getState();\n\n  if (stateContent) {\n    messages.states.push(stateContent);\n  }\n\n  if (runtimeContent) {\n    // By current proto def, runtime data can't reasonably change during a session, so,\n    // Runtime has no timestamp. If this changes, make `runtime` an array and push here.\n    messages.runtime = runtimeContent;\n  }\n}\n\nfunction parseArrayBuffer(arrayBuf) {\n  return parseBuffer(Buffer.from(arrayBuf));\n}\n\nfunction parseBase64(dataString) {\n  return parseBuffer(Buffer.from(dataString, 'base64'));\n}\n\nfunction parseImport(rawData) {\n  if (rawData instanceof Buffer) return parseBuffer(rawData);\n  if (rawData instanceof ArrayBuffer) return parseArrayBuffer(rawData);\n  if (rawData instanceof String) return parseBase64(rawData);\n}\n\nmodule.exports = {\n  parseArrayBuffer: parseArrayBuffer,\n  parseBase64: parseBase64,\n  parseBuffer: parseBuffer,\n  parseImport: parseImport\n};","'use strict';\n\nvar proto = require('./lib/introspection_pb');\n\nvar fnv1a = require('./lib/fnv1a');\n\nmodule.exports = {\n  deserializeBinary: proto.ProtocolDataPacket.deserializeBinary,\n  fnv1a: fnv1a,\n  proto: proto\n};","/* eslint-disable */\n// source: protobuf/introspection.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.introspection.ClientSignal', null, global);\ngoog.exportSymbol('proto.introspection.ClientSignal.DataSource', null, global);\ngoog.exportSymbol('proto.introspection.ClientSignal.Signal', null, global);\ngoog.exportSymbol('proto.introspection.Connection', null, global);\ngoog.exportSymbol('proto.introspection.Connection.Attributes', null, global);\ngoog.exportSymbol('proto.introspection.Connection.RelayedOverCase', null, global);\ngoog.exportSymbol('proto.introspection.Connection.Timeline', null, global);\ngoog.exportSymbol('proto.introspection.DHT', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Params', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query.Result', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query.Trigger', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query.Type', null, global);\ngoog.exportSymbol('proto.introspection.DataGauge', null, global);\ngoog.exportSymbol('proto.introspection.EndpointPair', null, global);\ngoog.exportSymbol('proto.introspection.ProtocolDataPacket', null, global);\ngoog.exportSymbol('proto.introspection.ProtocolDataPacket.MessageCase', null, global);\ngoog.exportSymbol('proto.introspection.ResultCounter', null, global);\ngoog.exportSymbol('proto.introspection.Role', null, global);\ngoog.exportSymbol('proto.introspection.Runtime', null, global);\ngoog.exportSymbol('proto.introspection.SlidingCounter', null, global);\ngoog.exportSymbol('proto.introspection.State', null, global);\ngoog.exportSymbol('proto.introspection.Status', null, global);\ngoog.exportSymbol('proto.introspection.Stream', null, global);\ngoog.exportSymbol('proto.introspection.Stream.ConnectionRef', null, global);\ngoog.exportSymbol('proto.introspection.Stream.ConnectionRef.ConnectionCase', null, global);\ngoog.exportSymbol('proto.introspection.Stream.Timeline', null, global);\ngoog.exportSymbol('proto.introspection.StreamList', null, global);\ngoog.exportSymbol('proto.introspection.Subsystems', null, global);\ngoog.exportSymbol('proto.introspection.Traffic', null, global);\ngoog.exportSymbol('proto.introspection.Version', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.introspection.Version = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Version, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Version.displayName = 'proto.introspection.Version';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.ResultCounter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.ResultCounter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.ResultCounter.displayName = 'proto.introspection.ResultCounter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.SlidingCounter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.SlidingCounter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.SlidingCounter.displayName = 'proto.introspection.SlidingCounter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DataGauge = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.DataGauge, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DataGauge.displayName = 'proto.introspection.DataGauge';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Runtime = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Runtime, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Runtime.displayName = 'proto.introspection.Runtime';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.EndpointPair = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.EndpointPair, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.EndpointPair.displayName = 'proto.introspection.EndpointPair';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Traffic = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Traffic, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Traffic.displayName = 'proto.introspection.Traffic';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.StreamList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.StreamList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.StreamList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.StreamList.displayName = 'proto.introspection.StreamList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Connection = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.Connection.repeatedFields_, proto.introspection.Connection.oneofGroups_);\n};\n\ngoog.inherits(proto.introspection.Connection, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Connection.displayName = 'proto.introspection.Connection';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Connection.Timeline = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Connection.Timeline, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Connection.Timeline.displayName = 'proto.introspection.Connection.Timeline';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Connection.Attributes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Connection.Attributes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Connection.Attributes.displayName = 'proto.introspection.Connection.Attributes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Stream = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.Stream.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.Stream, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Stream.displayName = 'proto.introspection.Stream';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Stream.ConnectionRef = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.introspection.Stream.ConnectionRef.oneofGroups_);\n};\n\ngoog.inherits(proto.introspection.Stream.ConnectionRef, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Stream.ConnectionRef.displayName = 'proto.introspection.Stream.ConnectionRef';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Stream.Timeline = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Stream.Timeline, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Stream.Timeline.displayName = 'proto.introspection.Stream.Timeline';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DHT = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.DHT.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.DHT, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DHT.displayName = 'proto.introspection.DHT';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DHT.Params = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.DHT.Params, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DHT.Params.displayName = 'proto.introspection.DHT.Params';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DHT.Query = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.DHT.Query.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.DHT.Query, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DHT.Query.displayName = 'proto.introspection.DHT.Query';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Subsystems = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.Subsystems.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.Subsystems, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Subsystems.displayName = 'proto.introspection.Subsystems';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.State = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.State, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.State.displayName = 'proto.introspection.State';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.ProtocolDataPacket = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.introspection.ProtocolDataPacket.oneofGroups_);\n};\n\ngoog.inherits(proto.introspection.ProtocolDataPacket, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.ProtocolDataPacket.displayName = 'proto.introspection.ProtocolDataPacket';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.ClientSignal = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.ClientSignal, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.ClientSignal.displayName = 'proto.introspection.ClientSignal';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Version.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Version.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Version} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Version.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Version}\n */\n\n\nproto.introspection.Version.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Version();\n  return proto.introspection.Version.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Version} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Version}\n */\n\n\nproto.introspection.Version.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setVersion(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Version.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Version.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Version} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Version.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n};\n/**\n * optional uint32 version = 1;\n * @return {number}\n */\n\n\nproto.introspection.Version.prototype.getVersion = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.Version.prototype.setVersion = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.ResultCounter.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.ResultCounter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.ResultCounter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.ResultCounter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      total: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      ok: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      err: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.ResultCounter}\n */\n\n\nproto.introspection.ResultCounter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.ResultCounter();\n  return proto.introspection.ResultCounter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.ResultCounter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.ResultCounter}\n */\n\n\nproto.introspection.ResultCounter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setTotal(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOk(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setErr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.ResultCounter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.ResultCounter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.ResultCounter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.ResultCounter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getOk();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n\n  f = message.getErr();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * optional uint32 total = 1;\n * @return {number}\n */\n\n\nproto.introspection.ResultCounter.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.ResultCounter.prototype.setTotal = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 ok = 2;\n * @return {number}\n */\n\n\nproto.introspection.ResultCounter.prototype.getOk = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.ResultCounter.prototype.setOk = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint32 err = 3;\n * @return {number}\n */\n\n\nproto.introspection.ResultCounter.prototype.getErr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.ResultCounter.prototype.setErr = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.SlidingCounter.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.SlidingCounter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.SlidingCounter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.SlidingCounter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      over1m: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      over5m: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      over15m: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      over30m: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      over1hr: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      over2hr: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      over4hr: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      over8hr: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      over12hr: jspb.Message.getFieldWithDefault(msg, 9, 0),\n      over24hr: jspb.Message.getFieldWithDefault(msg, 10, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.SlidingCounter}\n */\n\n\nproto.introspection.SlidingCounter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.SlidingCounter();\n  return proto.introspection.SlidingCounter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.SlidingCounter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.SlidingCounter}\n */\n\n\nproto.introspection.SlidingCounter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver1m(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver5m(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver15m(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver30m(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver1hr(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver2hr(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver4hr(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver8hr(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver12hr(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver24hr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.SlidingCounter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.SlidingCounter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.SlidingCounter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.SlidingCounter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOver1m();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getOver5m();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n\n  f = message.getOver15m();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n\n  f = message.getOver30m();\n\n  if (f !== 0) {\n    writer.writeUint32(4, f);\n  }\n\n  f = message.getOver1hr();\n\n  if (f !== 0) {\n    writer.writeUint32(5, f);\n  }\n\n  f = message.getOver2hr();\n\n  if (f !== 0) {\n    writer.writeUint32(6, f);\n  }\n\n  f = message.getOver4hr();\n\n  if (f !== 0) {\n    writer.writeUint32(7, f);\n  }\n\n  f = message.getOver8hr();\n\n  if (f !== 0) {\n    writer.writeUint32(8, f);\n  }\n\n  f = message.getOver12hr();\n\n  if (f !== 0) {\n    writer.writeUint32(9, f);\n  }\n\n  f = message.getOver24hr();\n\n  if (f !== 0) {\n    writer.writeUint32(10, f);\n  }\n};\n/**\n * optional uint32 over_1m = 1;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver1m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver1m = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 over_5m = 2;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver5m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver5m = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint32 over_15m = 3;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver15m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver15m = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint32 over_30m = 4;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver30m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver30m = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint32 over_1hr = 5;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver1hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver1hr = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional uint32 over_2hr = 6;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver2hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver2hr = function (value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional uint32 over_4hr = 7;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver4hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver4hr = function (value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional uint32 over_8hr = 8;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver8hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver8hr = function (value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional uint32 over_12hr = 9;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver12hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 9, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver12hr = function (value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n/**\n * optional uint32 over_24hr = 10;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver24hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver24hr = function (value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DataGauge.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DataGauge.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DataGauge} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DataGauge.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cumBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      cumPackets: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      instBw: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DataGauge}\n */\n\n\nproto.introspection.DataGauge.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DataGauge();\n  return proto.introspection.DataGauge.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DataGauge} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DataGauge}\n */\n\n\nproto.introspection.DataGauge.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCumBytes(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCumPackets(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setInstBw(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DataGauge.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DataGauge.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DataGauge} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DataGauge.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCumBytes();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCumPackets();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getInstBw();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 cum_bytes = 1;\n * @return {number}\n */\n\n\nproto.introspection.DataGauge.prototype.getCumBytes = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DataGauge.prototype.setCumBytes = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 cum_packets = 2;\n * @return {number}\n */\n\n\nproto.introspection.DataGauge.prototype.getCumPackets = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DataGauge.prototype.setCumPackets = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 inst_bw = 3;\n * @return {number}\n */\n\n\nproto.introspection.DataGauge.prototype.getInstBw = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DataGauge.prototype.setInstBw = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Runtime.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Runtime.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Runtime} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Runtime.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      implementation: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      version: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      platform: jspb.Message.getFieldWithDefault(msg, 3, ''),\n      peerId: jspb.Message.getFieldWithDefault(msg, 4, '')\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Runtime}\n */\n\n\nproto.introspection.Runtime.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Runtime();\n  return proto.introspection.Runtime.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Runtime} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Runtime}\n */\n\n\nproto.introspection.Runtime.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setImplementation(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVersion(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPlatform(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Runtime.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Runtime.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Runtime} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Runtime.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getImplementation();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getVersion();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPlatform();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional string implementation = 1;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getImplementation = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setImplementation = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string version = 2;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getVersion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setVersion = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string platform = 3;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getPlatform = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setPlatform = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string peer_id = 4;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setPeerId = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.EndpointPair.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.EndpointPair.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.EndpointPair} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.EndpointPair.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      srcMultiaddr: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      dstMultiaddr: jspb.Message.getFieldWithDefault(msg, 2, '')\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.EndpointPair}\n */\n\n\nproto.introspection.EndpointPair.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.EndpointPair();\n  return proto.introspection.EndpointPair.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.EndpointPair} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.EndpointPair}\n */\n\n\nproto.introspection.EndpointPair.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSrcMultiaddr(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDstMultiaddr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.EndpointPair.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.EndpointPair.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.EndpointPair} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.EndpointPair.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSrcMultiaddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getDstMultiaddr();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string src_multiaddr = 1;\n * @return {string}\n */\n\n\nproto.introspection.EndpointPair.prototype.getSrcMultiaddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.EndpointPair.prototype.setSrcMultiaddr = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string dst_multiaddr = 2;\n * @return {string}\n */\n\n\nproto.introspection.EndpointPair.prototype.getDstMultiaddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.EndpointPair.prototype.setDstMultiaddr = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Traffic.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Traffic.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Traffic} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Traffic.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      trafficIn: (f = msg.getTrafficIn()) && proto.introspection.DataGauge.toObject(includeInstance, f),\n      trafficOut: (f = msg.getTrafficOut()) && proto.introspection.DataGauge.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Traffic}\n */\n\n\nproto.introspection.Traffic.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Traffic();\n  return proto.introspection.Traffic.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Traffic} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Traffic}\n */\n\n\nproto.introspection.Traffic.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.DataGauge();\n        reader.readMessage(value, proto.introspection.DataGauge.deserializeBinaryFromReader);\n        msg.setTrafficIn(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.DataGauge();\n        reader.readMessage(value, proto.introspection.DataGauge.deserializeBinaryFromReader);\n        msg.setTrafficOut(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Traffic.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Traffic.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Traffic} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Traffic.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTrafficIn();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.DataGauge.serializeBinaryToWriter);\n  }\n\n  f = message.getTrafficOut();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.DataGauge.serializeBinaryToWriter);\n  }\n};\n/**\n * optional DataGauge traffic_in = 1;\n * @return {?proto.introspection.DataGauge}\n */\n\n\nproto.introspection.Traffic.prototype.getTrafficIn = function () {\n  return (\n    /** @type{?proto.introspection.DataGauge} */\n    jspb.Message.getWrapperField(this, proto.introspection.DataGauge, 1)\n  );\n};\n/** @param {?proto.introspection.DataGauge|undefined} value */\n\n\nproto.introspection.Traffic.prototype.setTrafficIn = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Traffic.prototype.clearTrafficIn = function () {\n  this.setTrafficIn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Traffic.prototype.hasTrafficIn = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional DataGauge traffic_out = 2;\n * @return {?proto.introspection.DataGauge}\n */\n\n\nproto.introspection.Traffic.prototype.getTrafficOut = function () {\n  return (\n    /** @type{?proto.introspection.DataGauge} */\n    jspb.Message.getWrapperField(this, proto.introspection.DataGauge, 2)\n  );\n};\n/** @param {?proto.introspection.DataGauge|undefined} value */\n\n\nproto.introspection.Traffic.prototype.setTrafficOut = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Traffic.prototype.clearTrafficOut = function () {\n  this.setTrafficOut(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Traffic.prototype.hasTrafficOut = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.StreamList.repeatedFields_ = [1, 2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.StreamList.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.StreamList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.StreamList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.StreamList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      streamIdsList: msg.getStreamIdsList_asB64(),\n      streamsList: jspb.Message.toObjectList(msg.getStreamsList(), proto.introspection.Stream.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.StreamList}\n */\n\n\nproto.introspection.StreamList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.StreamList();\n  return proto.introspection.StreamList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.StreamList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.StreamList}\n */\n\n\nproto.introspection.StreamList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addStreamIds(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.Stream();\n        reader.readMessage(value, proto.introspection.Stream.deserializeBinaryFromReader);\n        msg.addStreams(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.StreamList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.StreamList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.StreamList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.StreamList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStreamIdsList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(1, f);\n  }\n\n  f = message.getStreamsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.introspection.Stream.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated bytes stream_ids = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamIdsList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * repeated bytes stream_ids = 1;\n * This is a type-conversion wrapper around `getStreamIdsList()`\n * @return {!Array<string>}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamIdsList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getStreamIdsList())\n  );\n};\n/**\n * repeated bytes stream_ids = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStreamIdsList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamIdsList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getStreamIdsList())\n  );\n};\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\n\n\nproto.introspection.StreamList.prototype.setStreamIdsList = function (value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.StreamList.prototype.addStreamIds = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.StreamList.prototype.clearStreamIdsList = function () {\n  this.setStreamIdsList([]);\n};\n/**\n * repeated Stream streams = 2;\n * @return {!Array<!proto.introspection.Stream>}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamsList = function () {\n  return (\n    /** @type{!Array<!proto.introspection.Stream>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.introspection.Stream, 2)\n  );\n};\n/** @param {!Array<!proto.introspection.Stream>} value */\n\n\nproto.introspection.StreamList.prototype.setStreamsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.introspection.Stream=} opt_value\n * @param {number=} opt_index\n * @return {!proto.introspection.Stream}\n */\n\n\nproto.introspection.StreamList.prototype.addStreams = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.introspection.Stream, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.StreamList.prototype.clearStreamsList = function () {\n  this.setStreamsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.Connection.repeatedFields_ = [99];\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\nproto.introspection.Connection.oneofGroups_ = [[16, 17]];\n/**\n * @enum {number}\n */\n\nproto.introspection.Connection.RelayedOverCase = {\n  RELAYED_OVER_NOT_SET: 0,\n  CONN_ID: 16,\n  CONN: 17\n};\n/**\n * @return {proto.introspection.Connection.RelayedOverCase}\n */\n\nproto.introspection.Connection.prototype.getRelayedOverCase = function () {\n  return (\n    /** @type {proto.introspection.Connection.RelayedOverCase} */\n    jspb.Message.computeOneofCase(this, proto.introspection.Connection.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Connection.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Connection.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Connection} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Connection.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      peerId: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      status: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      transportId: msg.getTransportId_asB64(),\n      endpoints: (f = msg.getEndpoints()) && proto.introspection.EndpointPair.toObject(includeInstance, f),\n      timeline: (f = msg.getTimeline()) && proto.introspection.Connection.Timeline.toObject(includeInstance, f),\n      role: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      traffic: (f = msg.getTraffic()) && proto.introspection.Traffic.toObject(includeInstance, f),\n      attribs: (f = msg.getAttribs()) && proto.introspection.Connection.Attributes.toObject(includeInstance, f),\n      latencyNs: jspb.Message.getFieldWithDefault(msg, 10, 0),\n      streams: (f = msg.getStreams()) && proto.introspection.StreamList.toObject(includeInstance, f),\n      connId: msg.getConnId_asB64(),\n      conn: (f = msg.getConn()) && proto.introspection.Connection.toObject(includeInstance, f),\n      userProvidedTagsList: (f = jspb.Message.getRepeatedField(msg, 99)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Connection}\n */\n\n\nproto.introspection.Connection.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Connection();\n  return proto.introspection.Connection.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Connection} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Connection}\n */\n\n\nproto.introspection.Connection.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.introspection.Status} */\n        reader.readEnum();\n        msg.setStatus(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setTransportId(value);\n        break;\n\n      case 5:\n        var value = new proto.introspection.EndpointPair();\n        reader.readMessage(value, proto.introspection.EndpointPair.deserializeBinaryFromReader);\n        msg.setEndpoints(value);\n        break;\n\n      case 6:\n        var value = new proto.introspection.Connection.Timeline();\n        reader.readMessage(value, proto.introspection.Connection.Timeline.deserializeBinaryFromReader);\n        msg.setTimeline(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!proto.introspection.Role} */\n        reader.readEnum();\n        msg.setRole(value);\n        break;\n\n      case 8:\n        var value = new proto.introspection.Traffic();\n        reader.readMessage(value, proto.introspection.Traffic.deserializeBinaryFromReader);\n        msg.setTraffic(value);\n        break;\n\n      case 9:\n        var value = new proto.introspection.Connection.Attributes();\n        reader.readMessage(value, proto.introspection.Connection.Attributes.deserializeBinaryFromReader);\n        msg.setAttribs(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setLatencyNs(value);\n        break;\n\n      case 11:\n        var value = new proto.introspection.StreamList();\n        reader.readMessage(value, proto.introspection.StreamList.deserializeBinaryFromReader);\n        msg.setStreams(value);\n        break;\n\n      case 16:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setConnId(value);\n        break;\n\n      case 17:\n        var value = new proto.introspection.Connection();\n        reader.readMessage(value, proto.introspection.Connection.deserializeBinaryFromReader);\n        msg.setConn(value);\n        break;\n\n      case 99:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addUserProvidedTags(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Connection.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Connection} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Connection.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n\n  f = message.getTransportId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getEndpoints();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.introspection.EndpointPair.serializeBinaryToWriter);\n  }\n\n  f = message.getTimeline();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.introspection.Connection.Timeline.serializeBinaryToWriter);\n  }\n\n  f = message.getRole();\n\n  if (f !== 0.0) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getTraffic();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.introspection.Traffic.serializeBinaryToWriter);\n  }\n\n  f = message.getAttribs();\n\n  if (f != null) {\n    writer.writeMessage(9, f, proto.introspection.Connection.Attributes.serializeBinaryToWriter);\n  }\n\n  f = message.getLatencyNs();\n\n  if (f !== 0) {\n    writer.writeUint64(10, f);\n  }\n\n  f = message.getStreams();\n\n  if (f != null) {\n    writer.writeMessage(11, f, proto.introspection.StreamList.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 16);\n\n  if (f != null) {\n    writer.writeBytes(16, f);\n  }\n\n  f = message.getConn();\n\n  if (f != null) {\n    writer.writeMessage(17, f, proto.introspection.Connection.serializeBinaryToWriter);\n  }\n\n  f = message.getUserProvidedTagsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(99, f);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Connection.Timeline.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Connection.Timeline.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Connection.Timeline} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Connection.Timeline.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      openTs: (f = msg.getOpenTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      upgradedTs: (f = msg.getUpgradedTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      closeTs: (f = msg.getCloseTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Connection.Timeline}\n */\n\n\nproto.introspection.Connection.Timeline.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Connection.Timeline();\n  return proto.introspection.Connection.Timeline.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Connection.Timeline} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Connection.Timeline}\n */\n\n\nproto.introspection.Connection.Timeline.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setOpenTs(value);\n        break;\n\n      case 2:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setUpgradedTs(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setCloseTs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Connection.Timeline.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Connection.Timeline} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Connection.Timeline.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOpenTs();\n\n  if (f != null) {\n    writer.writeMessage(1, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getUpgradedTs();\n\n  if (f != null) {\n    writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getCloseTs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional google.protobuf.Timestamp open_ts = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.getOpenTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Connection.Timeline.prototype.setOpenTs = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.Timeline.prototype.clearOpenTs = function () {\n  this.setOpenTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.hasOpenTs = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional google.protobuf.Timestamp upgraded_ts = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.getUpgradedTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Connection.Timeline.prototype.setUpgradedTs = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.Timeline.prototype.clearUpgradedTs = function () {\n  this.setUpgradedTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.hasUpgradedTs = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional google.protobuf.Timestamp close_ts = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.getCloseTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Connection.Timeline.prototype.setCloseTs = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.Timeline.prototype.clearCloseTs = function () {\n  this.setCloseTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.hasCloseTs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Connection.Attributes.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Connection.Attributes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Connection.Attributes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Connection.Attributes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      multiplexer: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      encryption: jspb.Message.getFieldWithDefault(msg, 2, '')\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Connection.Attributes}\n */\n\n\nproto.introspection.Connection.Attributes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Connection.Attributes();\n  return proto.introspection.Connection.Attributes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Connection.Attributes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Connection.Attributes}\n */\n\n\nproto.introspection.Connection.Attributes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMultiplexer(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEncryption(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.Attributes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Connection.Attributes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Connection.Attributes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Connection.Attributes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMultiplexer();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getEncryption();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string multiplexer = 1;\n * @return {string}\n */\n\n\nproto.introspection.Connection.Attributes.prototype.getMultiplexer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Connection.Attributes.prototype.setMultiplexer = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string encryption = 2;\n * @return {string}\n */\n\n\nproto.introspection.Connection.Attributes.prototype.getEncryption = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Connection.Attributes.prototype.setEncryption = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes id = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Connection.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/**\n * optional bytes id = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Connection.prototype.setId = function (value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string peer_id = 2;\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Connection.prototype.setPeerId = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Status status = 3;\n * @return {!proto.introspection.Status}\n */\n\n\nproto.introspection.Connection.prototype.getStatus = function () {\n  return (\n    /** @type {!proto.introspection.Status} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {!proto.introspection.Status} value */\n\n\nproto.introspection.Connection.prototype.setStatus = function (value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * optional bytes transport_id = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Connection.prototype.getTransportId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 4, '')\n  );\n};\n/**\n * optional bytes transport_id = 4;\n * This is a type-conversion wrapper around `getTransportId()`\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getTransportId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getTransportId())\n  );\n};\n/**\n * optional bytes transport_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTransportId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.getTransportId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getTransportId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Connection.prototype.setTransportId = function (value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional EndpointPair endpoints = 5;\n * @return {?proto.introspection.EndpointPair}\n */\n\n\nproto.introspection.Connection.prototype.getEndpoints = function () {\n  return (\n    /** @type{?proto.introspection.EndpointPair} */\n    jspb.Message.getWrapperField(this, proto.introspection.EndpointPair, 5)\n  );\n};\n/** @param {?proto.introspection.EndpointPair|undefined} value */\n\n\nproto.introspection.Connection.prototype.setEndpoints = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearEndpoints = function () {\n  this.setEndpoints(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasEndpoints = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional Timeline timeline = 6;\n * @return {?proto.introspection.Connection.Timeline}\n */\n\n\nproto.introspection.Connection.prototype.getTimeline = function () {\n  return (\n    /** @type{?proto.introspection.Connection.Timeline} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection.Timeline, 6)\n  );\n};\n/** @param {?proto.introspection.Connection.Timeline|undefined} value */\n\n\nproto.introspection.Connection.prototype.setTimeline = function (value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearTimeline = function () {\n  this.setTimeline(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasTimeline = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional Role role = 7;\n * @return {!proto.introspection.Role}\n */\n\n\nproto.introspection.Connection.prototype.getRole = function () {\n  return (\n    /** @type {!proto.introspection.Role} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {!proto.introspection.Role} value */\n\n\nproto.introspection.Connection.prototype.setRole = function (value) {\n  jspb.Message.setProto3EnumField(this, 7, value);\n};\n/**\n * optional Traffic traffic = 8;\n * @return {?proto.introspection.Traffic}\n */\n\n\nproto.introspection.Connection.prototype.getTraffic = function () {\n  return (\n    /** @type{?proto.introspection.Traffic} */\n    jspb.Message.getWrapperField(this, proto.introspection.Traffic, 8)\n  );\n};\n/** @param {?proto.introspection.Traffic|undefined} value */\n\n\nproto.introspection.Connection.prototype.setTraffic = function (value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearTraffic = function () {\n  this.setTraffic(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasTraffic = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional Attributes attribs = 9;\n * @return {?proto.introspection.Connection.Attributes}\n */\n\n\nproto.introspection.Connection.prototype.getAttribs = function () {\n  return (\n    /** @type{?proto.introspection.Connection.Attributes} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection.Attributes, 9)\n  );\n};\n/** @param {?proto.introspection.Connection.Attributes|undefined} value */\n\n\nproto.introspection.Connection.prototype.setAttribs = function (value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearAttribs = function () {\n  this.setAttribs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasAttribs = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint64 latency_ns = 10;\n * @return {number}\n */\n\n\nproto.introspection.Connection.prototype.getLatencyNs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.Connection.prototype.setLatencyNs = function (value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n/**\n * optional StreamList streams = 11;\n * @return {?proto.introspection.StreamList}\n */\n\n\nproto.introspection.Connection.prototype.getStreams = function () {\n  return (\n    /** @type{?proto.introspection.StreamList} */\n    jspb.Message.getWrapperField(this, proto.introspection.StreamList, 11)\n  );\n};\n/** @param {?proto.introspection.StreamList|undefined} value */\n\n\nproto.introspection.Connection.prototype.setStreams = function (value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearStreams = function () {\n  this.setStreams(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasStreams = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * optional bytes conn_id = 16;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Connection.prototype.getConnId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 16, '')\n  );\n};\n/**\n * optional bytes conn_id = 16;\n * This is a type-conversion wrapper around `getConnId()`\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getConnId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getConnId())\n  );\n};\n/**\n * optional bytes conn_id = 16;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getConnId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.getConnId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getConnId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Connection.prototype.setConnId = function (value) {\n  jspb.Message.setOneofField(this, 16, proto.introspection.Connection.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearConnId = function () {\n  jspb.Message.setOneofField(this, 16, proto.introspection.Connection.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasConnId = function () {\n  return jspb.Message.getField(this, 16) != null;\n};\n/**\n * optional Connection conn = 17;\n * @return {?proto.introspection.Connection}\n */\n\n\nproto.introspection.Connection.prototype.getConn = function () {\n  return (\n    /** @type{?proto.introspection.Connection} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection, 17)\n  );\n};\n/** @param {?proto.introspection.Connection|undefined} value */\n\n\nproto.introspection.Connection.prototype.setConn = function (value) {\n  jspb.Message.setOneofWrapperField(this, 17, proto.introspection.Connection.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearConn = function () {\n  this.setConn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasConn = function () {\n  return jspb.Message.getField(this, 17) != null;\n};\n/**\n * repeated string user_provided_tags = 99;\n * @return {!Array<string>}\n */\n\n\nproto.introspection.Connection.prototype.getUserProvidedTagsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 99)\n  );\n};\n/** @param {!Array<string>} value */\n\n\nproto.introspection.Connection.prototype.setUserProvidedTagsList = function (value) {\n  jspb.Message.setField(this, 99, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.Connection.prototype.addUserProvidedTags = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 99, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.Connection.prototype.clearUserProvidedTagsList = function () {\n  this.setUserProvidedTagsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.Stream.repeatedFields_ = [99];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Stream.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Stream.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Stream} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Stream.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      protocol: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      role: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      traffic: (f = msg.getTraffic()) && proto.introspection.Traffic.toObject(includeInstance, f),\n      conn: (f = msg.getConn()) && proto.introspection.Stream.ConnectionRef.toObject(includeInstance, f),\n      timeline: (f = msg.getTimeline()) && proto.introspection.Stream.Timeline.toObject(includeInstance, f),\n      status: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      latencyNs: jspb.Message.getFieldWithDefault(msg, 16, 0),\n      userProvidedTagsList: (f = jspb.Message.getRepeatedField(msg, 99)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Stream}\n */\n\n\nproto.introspection.Stream.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Stream();\n  return proto.introspection.Stream.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Stream} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Stream}\n */\n\n\nproto.introspection.Stream.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProtocol(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.introspection.Role} */\n        reader.readEnum();\n        msg.setRole(value);\n        break;\n\n      case 4:\n        var value = new proto.introspection.Traffic();\n        reader.readMessage(value, proto.introspection.Traffic.deserializeBinaryFromReader);\n        msg.setTraffic(value);\n        break;\n\n      case 5:\n        var value = new proto.introspection.Stream.ConnectionRef();\n        reader.readMessage(value, proto.introspection.Stream.ConnectionRef.deserializeBinaryFromReader);\n        msg.setConn(value);\n        break;\n\n      case 6:\n        var value = new proto.introspection.Stream.Timeline();\n        reader.readMessage(value, proto.introspection.Stream.Timeline.deserializeBinaryFromReader);\n        msg.setTimeline(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!proto.introspection.Status} */\n        reader.readEnum();\n        msg.setStatus(value);\n        break;\n\n      case 16:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setLatencyNs(value);\n        break;\n\n      case 99:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addUserProvidedTags(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Stream.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Stream} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Stream.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getProtocol();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getRole();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n\n  f = message.getTraffic();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.introspection.Traffic.serializeBinaryToWriter);\n  }\n\n  f = message.getConn();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.introspection.Stream.ConnectionRef.serializeBinaryToWriter);\n  }\n\n  f = message.getTimeline();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.introspection.Stream.Timeline.serializeBinaryToWriter);\n  }\n\n  f = message.getStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getLatencyNs();\n\n  if (f !== 0) {\n    writer.writeUint64(16, f);\n  }\n\n  f = message.getUserProvidedTagsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(99, f);\n  }\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.introspection.Stream.ConnectionRef.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.introspection.Stream.ConnectionRef.ConnectionCase = {\n  CONNECTION_NOT_SET: 0,\n  CONN: 1,\n  CONN_ID: 2\n};\n/**\n * @return {proto.introspection.Stream.ConnectionRef.ConnectionCase}\n */\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnectionCase = function () {\n  return (\n    /** @type {proto.introspection.Stream.ConnectionRef.ConnectionCase} */\n    jspb.Message.computeOneofCase(this, proto.introspection.Stream.ConnectionRef.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Stream.ConnectionRef.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Stream.ConnectionRef.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Stream.ConnectionRef} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Stream.ConnectionRef.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      conn: (f = msg.getConn()) && proto.introspection.Connection.toObject(includeInstance, f),\n      connId: msg.getConnId_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Stream.ConnectionRef}\n */\n\n\nproto.introspection.Stream.ConnectionRef.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Stream.ConnectionRef();\n  return proto.introspection.Stream.ConnectionRef.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Stream.ConnectionRef} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Stream.ConnectionRef}\n */\n\n\nproto.introspection.Stream.ConnectionRef.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Connection();\n        reader.readMessage(value, proto.introspection.Connection.deserializeBinaryFromReader);\n        msg.setConn(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setConnId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Stream.ConnectionRef.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Stream.ConnectionRef} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Stream.ConnectionRef.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConn();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Connection.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional Connection conn = 1;\n * @return {?proto.introspection.Connection}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConn = function () {\n  return (\n    /** @type{?proto.introspection.Connection} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection, 1)\n  );\n};\n/** @param {?proto.introspection.Connection|undefined} value */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.setConn = function (value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.introspection.Stream.ConnectionRef.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.clearConn = function () {\n  this.setConn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.hasConn = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes conn_id = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/**\n * optional bytes conn_id = 2;\n * This is a type-conversion wrapper around `getConnId()`\n * @return {string}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getConnId())\n  );\n};\n/**\n * optional bytes conn_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getConnId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getConnId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.setConnId = function (value) {\n  jspb.Message.setOneofField(this, 2, proto.introspection.Stream.ConnectionRef.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.clearConnId = function () {\n  jspb.Message.setOneofField(this, 2, proto.introspection.Stream.ConnectionRef.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.hasConnId = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Stream.Timeline.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Stream.Timeline.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Stream.Timeline} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Stream.Timeline.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      openTs: (f = msg.getOpenTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      closeTs: (f = msg.getCloseTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Stream.Timeline}\n */\n\n\nproto.introspection.Stream.Timeline.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Stream.Timeline();\n  return proto.introspection.Stream.Timeline.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Stream.Timeline} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Stream.Timeline}\n */\n\n\nproto.introspection.Stream.Timeline.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setOpenTs(value);\n        break;\n\n      case 2:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setCloseTs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Stream.Timeline.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Stream.Timeline} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Stream.Timeline.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOpenTs();\n\n  if (f != null) {\n    writer.writeMessage(1, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getCloseTs();\n\n  if (f != null) {\n    writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional google.protobuf.Timestamp open_ts = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.getOpenTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Stream.Timeline.prototype.setOpenTs = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.Timeline.prototype.clearOpenTs = function () {\n  this.setOpenTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.hasOpenTs = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional google.protobuf.Timestamp close_ts = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.getCloseTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Stream.Timeline.prototype.setCloseTs = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.Timeline.prototype.clearCloseTs = function () {\n  this.setCloseTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.hasCloseTs = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes id = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Stream.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/**\n * optional bytes id = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.introspection.Stream.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Stream.prototype.setId = function (value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string protocol = 2;\n * @return {string}\n */\n\n\nproto.introspection.Stream.prototype.getProtocol = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Stream.prototype.setProtocol = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Role role = 3;\n * @return {!proto.introspection.Role}\n */\n\n\nproto.introspection.Stream.prototype.getRole = function () {\n  return (\n    /** @type {!proto.introspection.Role} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {!proto.introspection.Role} value */\n\n\nproto.introspection.Stream.prototype.setRole = function (value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * optional Traffic traffic = 4;\n * @return {?proto.introspection.Traffic}\n */\n\n\nproto.introspection.Stream.prototype.getTraffic = function () {\n  return (\n    /** @type{?proto.introspection.Traffic} */\n    jspb.Message.getWrapperField(this, proto.introspection.Traffic, 4)\n  );\n};\n/** @param {?proto.introspection.Traffic|undefined} value */\n\n\nproto.introspection.Stream.prototype.setTraffic = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.prototype.clearTraffic = function () {\n  this.setTraffic(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.prototype.hasTraffic = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional ConnectionRef conn = 5;\n * @return {?proto.introspection.Stream.ConnectionRef}\n */\n\n\nproto.introspection.Stream.prototype.getConn = function () {\n  return (\n    /** @type{?proto.introspection.Stream.ConnectionRef} */\n    jspb.Message.getWrapperField(this, proto.introspection.Stream.ConnectionRef, 5)\n  );\n};\n/** @param {?proto.introspection.Stream.ConnectionRef|undefined} value */\n\n\nproto.introspection.Stream.prototype.setConn = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.prototype.clearConn = function () {\n  this.setConn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.prototype.hasConn = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional Timeline timeline = 6;\n * @return {?proto.introspection.Stream.Timeline}\n */\n\n\nproto.introspection.Stream.prototype.getTimeline = function () {\n  return (\n    /** @type{?proto.introspection.Stream.Timeline} */\n    jspb.Message.getWrapperField(this, proto.introspection.Stream.Timeline, 6)\n  );\n};\n/** @param {?proto.introspection.Stream.Timeline|undefined} value */\n\n\nproto.introspection.Stream.prototype.setTimeline = function (value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.prototype.clearTimeline = function () {\n  this.setTimeline(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.prototype.hasTimeline = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional Status status = 7;\n * @return {!proto.introspection.Status}\n */\n\n\nproto.introspection.Stream.prototype.getStatus = function () {\n  return (\n    /** @type {!proto.introspection.Status} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {!proto.introspection.Status} value */\n\n\nproto.introspection.Stream.prototype.setStatus = function (value) {\n  jspb.Message.setProto3EnumField(this, 7, value);\n};\n/**\n * optional uint64 latency_ns = 16;\n * @return {number}\n */\n\n\nproto.introspection.Stream.prototype.getLatencyNs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 16, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.Stream.prototype.setLatencyNs = function (value) {\n  jspb.Message.setProto3IntField(this, 16, value);\n};\n/**\n * repeated string user_provided_tags = 99;\n * @return {!Array<string>}\n */\n\n\nproto.introspection.Stream.prototype.getUserProvidedTagsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 99)\n  );\n};\n/** @param {!Array<string>} value */\n\n\nproto.introspection.Stream.prototype.setUserProvidedTagsList = function (value) {\n  jspb.Message.setField(this, 99, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.Stream.prototype.addUserProvidedTags = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 99, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.Stream.prototype.clearUserProvidedTagsList = function () {\n  this.setUserProvidedTagsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.DHT.repeatedFields_ = [5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DHT.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DHT.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DHT} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DHT.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      protocol: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n      startTs: (f = msg.getStartTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      params: (f = msg.getParams()) && proto.introspection.DHT.Params.toObject(includeInstance, f),\n      queryList: jspb.Message.toObjectList(msg.getQueryList(), proto.introspection.DHT.Query.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DHT}\n */\n\n\nproto.introspection.DHT.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DHT();\n  return proto.introspection.DHT.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DHT} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DHT}\n */\n\n\nproto.introspection.DHT.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProtocol(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setStartTs(value);\n        break;\n\n      case 4:\n        var value = new proto.introspection.DHT.Params();\n        reader.readMessage(value, proto.introspection.DHT.Params.deserializeBinaryFromReader);\n        msg.setParams(value);\n        break;\n\n      case 5:\n        var value = new proto.introspection.DHT.Query();\n        reader.readMessage(value, proto.introspection.DHT.Query.deserializeBinaryFromReader);\n        msg.addQuery(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DHT.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DHT} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DHT.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProtocol();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n\n  f = message.getStartTs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getParams();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.introspection.DHT.Params.serializeBinaryToWriter);\n  }\n\n  f = message.getQueryList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(5, f, proto.introspection.DHT.Query.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DHT.Params.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DHT.Params.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DHT.Params} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DHT.Params.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      k: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      alpha: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      disjointPaths: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DHT.Params}\n */\n\n\nproto.introspection.DHT.Params.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DHT.Params();\n  return proto.introspection.DHT.Params.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DHT.Params} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DHT.Params}\n */\n\n\nproto.introspection.DHT.Params.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setK(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAlpha(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setDisjointPaths(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.Params.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DHT.Params.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DHT.Params} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DHT.Params.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getK();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getAlpha();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getDisjointPaths();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 k = 1;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Params.prototype.getK = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Params.prototype.setK = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 alpha = 2;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Params.prototype.getAlpha = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Params.prototype.setAlpha = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 disjoint_paths = 3;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Params.prototype.getDisjointPaths = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Params.prototype.setDisjointPaths = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.DHT.Query.repeatedFields_ = [5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DHT.Query.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DHT.Query.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DHT.Query} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DHT.Query.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      targetPeerId: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      totalTimeMs: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      totalSteps: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      peerIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,\n      trigger: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      type: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      result: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      sentTs: (f = msg.getSentTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DHT.Query}\n */\n\n\nproto.introspection.DHT.Query.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DHT.Query();\n  return proto.introspection.DHT.Query.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DHT.Query} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DHT.Query}\n */\n\n\nproto.introspection.DHT.Query.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTargetPeerId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotalTimeMs(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotalSteps(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addPeerIds(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!proto.introspection.DHT.Query.Trigger} */\n        reader.readEnum();\n        msg.setTrigger(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!proto.introspection.DHT.Query.Type} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {!proto.introspection.DHT.Query.Result} */\n        reader.readEnum();\n        msg.setResult(value);\n        break;\n\n      case 9:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setSentTs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.Query.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DHT.Query.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DHT.Query} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DHT.Query.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getTargetPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTotalTimeMs();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getTotalSteps();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getPeerIdsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(5, f);\n  }\n\n  f = message.getTrigger();\n\n  if (f !== 0.0) {\n    writer.writeEnum(6, f);\n  }\n\n  f = message.getType();\n\n  if (f !== 0.0) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getResult();\n\n  if (f !== 0.0) {\n    writer.writeEnum(8, f);\n  }\n\n  f = message.getSentTs();\n\n  if (f != null) {\n    writer.writeMessage(9, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.introspection.DHT.Query.Trigger = {\n  API: 0,\n  DISCOVERY: 1\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.DHT.Query.Type = {\n  CONTENT: 0,\n  PROVIDER: 1,\n  VALUE: 2\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.DHT.Query.Result = {\n  SUCCESS: 0,\n  ERROR: 1,\n  TIMEOUT: 2,\n  PENDING: 3\n};\n/**\n * optional bytes id = 1;\n * @return {!(string|Uint8Array)}\n */\n\nproto.introspection.DHT.Query.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/**\n * optional bytes id = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.introspection.DHT.Query.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.Query.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.DHT.Query.prototype.setId = function (value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string target_peer_id = 2;\n * @return {string}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTargetPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.DHT.Query.prototype.setTargetPeerId = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint64 total_time_ms = 3;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTotalTimeMs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Query.prototype.setTotalTimeMs = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 total_steps = 4;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTotalSteps = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Query.prototype.setTotalSteps = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * repeated string peer_ids = 5;\n * @return {!Array<string>}\n */\n\n\nproto.introspection.DHT.Query.prototype.getPeerIdsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 5)\n  );\n};\n/** @param {!Array<string>} value */\n\n\nproto.introspection.DHT.Query.prototype.setPeerIdsList = function (value) {\n  jspb.Message.setField(this, 5, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.DHT.Query.prototype.addPeerIds = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.DHT.Query.prototype.clearPeerIdsList = function () {\n  this.setPeerIdsList([]);\n};\n/**\n * optional Trigger trigger = 6;\n * @return {!proto.introspection.DHT.Query.Trigger}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTrigger = function () {\n  return (\n    /** @type {!proto.introspection.DHT.Query.Trigger} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/** @param {!proto.introspection.DHT.Query.Trigger} value */\n\n\nproto.introspection.DHT.Query.prototype.setTrigger = function (value) {\n  jspb.Message.setProto3EnumField(this, 6, value);\n};\n/**\n * optional Type type = 7;\n * @return {!proto.introspection.DHT.Query.Type}\n */\n\n\nproto.introspection.DHT.Query.prototype.getType = function () {\n  return (\n    /** @type {!proto.introspection.DHT.Query.Type} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {!proto.introspection.DHT.Query.Type} value */\n\n\nproto.introspection.DHT.Query.prototype.setType = function (value) {\n  jspb.Message.setProto3EnumField(this, 7, value);\n};\n/**\n * optional Result result = 8;\n * @return {!proto.introspection.DHT.Query.Result}\n */\n\n\nproto.introspection.DHT.Query.prototype.getResult = function () {\n  return (\n    /** @type {!proto.introspection.DHT.Query.Result} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/** @param {!proto.introspection.DHT.Query.Result} value */\n\n\nproto.introspection.DHT.Query.prototype.setResult = function (value) {\n  jspb.Message.setProto3EnumField(this, 8, value);\n};\n/**\n * optional google.protobuf.Timestamp sent_ts = 9;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.DHT.Query.prototype.getSentTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.DHT.Query.prototype.setSentTs = function (value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.DHT.Query.prototype.clearSentTs = function () {\n  this.setSentTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.Query.prototype.hasSentTs = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional string protocol = 1;\n * @return {string}\n */\n\n\nproto.introspection.DHT.prototype.getProtocol = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.DHT.prototype.setProtocol = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bool enabled = 2;\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.introspection.DHT.prototype.setEnabled = function (value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n/**\n * optional google.protobuf.Timestamp start_ts = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.DHT.prototype.getStartTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.DHT.prototype.setStartTs = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.DHT.prototype.clearStartTs = function () {\n  this.setStartTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.prototype.hasStartTs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional Params params = 4;\n * @return {?proto.introspection.DHT.Params}\n */\n\n\nproto.introspection.DHT.prototype.getParams = function () {\n  return (\n    /** @type{?proto.introspection.DHT.Params} */\n    jspb.Message.getWrapperField(this, proto.introspection.DHT.Params, 4)\n  );\n};\n/** @param {?proto.introspection.DHT.Params|undefined} value */\n\n\nproto.introspection.DHT.prototype.setParams = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.DHT.prototype.clearParams = function () {\n  this.setParams(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.prototype.hasParams = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * repeated Query query = 5;\n * @return {!Array<!proto.introspection.DHT.Query>}\n */\n\n\nproto.introspection.DHT.prototype.getQueryList = function () {\n  return (\n    /** @type{!Array<!proto.introspection.DHT.Query>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.introspection.DHT.Query, 5)\n  );\n};\n/** @param {!Array<!proto.introspection.DHT.Query>} value */\n\n\nproto.introspection.DHT.prototype.setQueryList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n/**\n * @param {!proto.introspection.DHT.Query=} opt_value\n * @param {number=} opt_index\n * @return {!proto.introspection.DHT.Query}\n */\n\n\nproto.introspection.DHT.prototype.addQuery = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.introspection.DHT.Query, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.DHT.prototype.clearQueryList = function () {\n  this.setQueryList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.Subsystems.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Subsystems.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Subsystems.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Subsystems} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Subsystems.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(), proto.introspection.Connection.toObject, includeInstance),\n      dht: (f = msg.getDht()) && proto.introspection.DHT.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Subsystems}\n */\n\n\nproto.introspection.Subsystems.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Subsystems();\n  return proto.introspection.Subsystems.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Subsystems} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Subsystems}\n */\n\n\nproto.introspection.Subsystems.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Connection();\n        reader.readMessage(value, proto.introspection.Connection.deserializeBinaryFromReader);\n        msg.addConnections(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.DHT();\n        reader.readMessage(value, proto.introspection.DHT.deserializeBinaryFromReader);\n        msg.setDht(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Subsystems.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Subsystems.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Subsystems} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Subsystems.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConnectionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.introspection.Connection.serializeBinaryToWriter);\n  }\n\n  f = message.getDht();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.DHT.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Connection connections = 1;\n * @return {!Array<!proto.introspection.Connection>}\n */\n\n\nproto.introspection.Subsystems.prototype.getConnectionsList = function () {\n  return (\n    /** @type{!Array<!proto.introspection.Connection>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.introspection.Connection, 1)\n  );\n};\n/** @param {!Array<!proto.introspection.Connection>} value */\n\n\nproto.introspection.Subsystems.prototype.setConnectionsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.introspection.Connection=} opt_value\n * @param {number=} opt_index\n * @return {!proto.introspection.Connection}\n */\n\n\nproto.introspection.Subsystems.prototype.addConnections = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.introspection.Connection, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.Subsystems.prototype.clearConnectionsList = function () {\n  this.setConnectionsList([]);\n};\n/**\n * optional DHT dht = 2;\n * @return {?proto.introspection.DHT}\n */\n\n\nproto.introspection.Subsystems.prototype.getDht = function () {\n  return (\n    /** @type{?proto.introspection.DHT} */\n    jspb.Message.getWrapperField(this, proto.introspection.DHT, 2)\n  );\n};\n/** @param {?proto.introspection.DHT|undefined} value */\n\n\nproto.introspection.Subsystems.prototype.setDht = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Subsystems.prototype.clearDht = function () {\n  this.setDht(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Subsystems.prototype.hasDht = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.State.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.State.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.State} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.State.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subsystems: (f = msg.getSubsystems()) && proto.introspection.Subsystems.toObject(includeInstance, f),\n      traffic: (f = msg.getTraffic()) && proto.introspection.Traffic.toObject(includeInstance, f),\n      instantTs: (f = msg.getInstantTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      startTs: (f = msg.getStartTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      snapshotDurationMs: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.State}\n */\n\n\nproto.introspection.State.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.State();\n  return proto.introspection.State.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.State} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.State}\n */\n\n\nproto.introspection.State.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Subsystems();\n        reader.readMessage(value, proto.introspection.Subsystems.deserializeBinaryFromReader);\n        msg.setSubsystems(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.Traffic();\n        reader.readMessage(value, proto.introspection.Traffic.deserializeBinaryFromReader);\n        msg.setTraffic(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setInstantTs(value);\n        break;\n\n      case 4:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setStartTs(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setSnapshotDurationMs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.State.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.State.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.State} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.State.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubsystems();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Subsystems.serializeBinaryToWriter);\n  }\n\n  f = message.getTraffic();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.Traffic.serializeBinaryToWriter);\n  }\n\n  f = message.getInstantTs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getStartTs();\n\n  if (f != null) {\n    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getSnapshotDurationMs();\n\n  if (f !== 0) {\n    writer.writeUint32(5, f);\n  }\n};\n/**\n * optional Subsystems subsystems = 1;\n * @return {?proto.introspection.Subsystems}\n */\n\n\nproto.introspection.State.prototype.getSubsystems = function () {\n  return (\n    /** @type{?proto.introspection.Subsystems} */\n    jspb.Message.getWrapperField(this, proto.introspection.Subsystems, 1)\n  );\n};\n/** @param {?proto.introspection.Subsystems|undefined} value */\n\n\nproto.introspection.State.prototype.setSubsystems = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearSubsystems = function () {\n  this.setSubsystems(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasSubsystems = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Traffic traffic = 2;\n * @return {?proto.introspection.Traffic}\n */\n\n\nproto.introspection.State.prototype.getTraffic = function () {\n  return (\n    /** @type{?proto.introspection.Traffic} */\n    jspb.Message.getWrapperField(this, proto.introspection.Traffic, 2)\n  );\n};\n/** @param {?proto.introspection.Traffic|undefined} value */\n\n\nproto.introspection.State.prototype.setTraffic = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearTraffic = function () {\n  this.setTraffic(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasTraffic = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional google.protobuf.Timestamp instant_ts = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.State.prototype.getInstantTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.State.prototype.setInstantTs = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearInstantTs = function () {\n  this.setInstantTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasInstantTs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional google.protobuf.Timestamp start_ts = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.State.prototype.getStartTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.State.prototype.setStartTs = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearStartTs = function () {\n  this.setStartTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasStartTs = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 snapshot_duration_ms = 5;\n * @return {number}\n */\n\n\nproto.introspection.State.prototype.getSnapshotDurationMs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.State.prototype.setSnapshotDurationMs = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.introspection.ProtocolDataPacket.oneofGroups_ = [[2, 3]];\n/**\n * @enum {number}\n */\n\nproto.introspection.ProtocolDataPacket.MessageCase = {\n  MESSAGE_NOT_SET: 0,\n  STATE: 2,\n  RUNTIME: 3\n};\n/**\n * @return {proto.introspection.ProtocolDataPacket.MessageCase}\n */\n\nproto.introspection.ProtocolDataPacket.prototype.getMessageCase = function () {\n  return (\n    /** @type {proto.introspection.ProtocolDataPacket.MessageCase} */\n    jspb.Message.computeOneofCase(this, proto.introspection.ProtocolDataPacket.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.ProtocolDataPacket.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.ProtocolDataPacket.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.ProtocolDataPacket} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.ProtocolDataPacket.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: (f = msg.getVersion()) && proto.introspection.Version.toObject(includeInstance, f),\n      state: (f = msg.getState()) && proto.introspection.State.toObject(includeInstance, f),\n      runtime: (f = msg.getRuntime()) && proto.introspection.Runtime.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.ProtocolDataPacket}\n */\n\n\nproto.introspection.ProtocolDataPacket.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.ProtocolDataPacket();\n  return proto.introspection.ProtocolDataPacket.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.ProtocolDataPacket} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.ProtocolDataPacket}\n */\n\n\nproto.introspection.ProtocolDataPacket.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Version();\n        reader.readMessage(value, proto.introspection.Version.deserializeBinaryFromReader);\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.State();\n        reader.readMessage(value, proto.introspection.State.deserializeBinaryFromReader);\n        msg.setState(value);\n        break;\n\n      case 3:\n        var value = new proto.introspection.Runtime();\n        reader.readMessage(value, proto.introspection.Runtime.deserializeBinaryFromReader);\n        msg.setRuntime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.ProtocolDataPacket.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.ProtocolDataPacket} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.ProtocolDataPacket.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Version.serializeBinaryToWriter);\n  }\n\n  f = message.getState();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.State.serializeBinaryToWriter);\n  }\n\n  f = message.getRuntime();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.introspection.Runtime.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Version version = 1;\n * @return {?proto.introspection.Version}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.getVersion = function () {\n  return (\n    /** @type{?proto.introspection.Version} */\n    jspb.Message.getWrapperField(this, proto.introspection.Version, 1)\n  );\n};\n/** @param {?proto.introspection.Version|undefined} value */\n\n\nproto.introspection.ProtocolDataPacket.prototype.setVersion = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.clearVersion = function () {\n  this.setVersion(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.hasVersion = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional State state = 2;\n * @return {?proto.introspection.State}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.getState = function () {\n  return (\n    /** @type{?proto.introspection.State} */\n    jspb.Message.getWrapperField(this, proto.introspection.State, 2)\n  );\n};\n/** @param {?proto.introspection.State|undefined} value */\n\n\nproto.introspection.ProtocolDataPacket.prototype.setState = function (value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.introspection.ProtocolDataPacket.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.clearState = function () {\n  this.setState(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.hasState = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional Runtime runtime = 3;\n * @return {?proto.introspection.Runtime}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.getRuntime = function () {\n  return (\n    /** @type{?proto.introspection.Runtime} */\n    jspb.Message.getWrapperField(this, proto.introspection.Runtime, 3)\n  );\n};\n/** @param {?proto.introspection.Runtime|undefined} value */\n\n\nproto.introspection.ProtocolDataPacket.prototype.setRuntime = function (value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.introspection.ProtocolDataPacket.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.clearRuntime = function () {\n  this.setRuntime(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.hasRuntime = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.ClientSignal.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.ClientSignal.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.ClientSignal} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.ClientSignal.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: (f = msg.getVersion()) && proto.introspection.Version.toObject(includeInstance, f),\n      signal: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      dataSource: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.ClientSignal}\n */\n\n\nproto.introspection.ClientSignal.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.ClientSignal();\n  return proto.introspection.ClientSignal.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.ClientSignal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.ClientSignal}\n */\n\n\nproto.introspection.ClientSignal.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Version();\n        reader.readMessage(value, proto.introspection.Version.deserializeBinaryFromReader);\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!proto.introspection.ClientSignal.Signal} */\n        reader.readEnum();\n        msg.setSignal(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.introspection.ClientSignal.DataSource} */\n        reader.readEnum();\n        msg.setDataSource(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.ClientSignal.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.ClientSignal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.ClientSignal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.ClientSignal.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Version.serializeBinaryToWriter);\n  }\n\n  f = message.getSignal();\n\n  if (f !== 0.0) {\n    writer.writeEnum(2, f);\n  }\n\n  f = message.getDataSource();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.introspection.ClientSignal.Signal = {\n  SEND_DATA: 0,\n  START_PUSH_EMITTER: 1,\n  STOP_PUSH_EMITTER: 2,\n  PAUSE_PUSH_EMITTER: 3,\n  UNPAUSE_PUSH_EMITTER: 4\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.ClientSignal.DataSource = {\n  STATE: 0,\n  RUNTIME: 1\n};\n/**\n * optional Version version = 1;\n * @return {?proto.introspection.Version}\n */\n\nproto.introspection.ClientSignal.prototype.getVersion = function () {\n  return (\n    /** @type{?proto.introspection.Version} */\n    jspb.Message.getWrapperField(this, proto.introspection.Version, 1)\n  );\n};\n/** @param {?proto.introspection.Version|undefined} value */\n\n\nproto.introspection.ClientSignal.prototype.setVersion = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ClientSignal.prototype.clearVersion = function () {\n  this.setVersion(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ClientSignal.prototype.hasVersion = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Signal signal = 2;\n * @return {!proto.introspection.ClientSignal.Signal}\n */\n\n\nproto.introspection.ClientSignal.prototype.getSignal = function () {\n  return (\n    /** @type {!proto.introspection.ClientSignal.Signal} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {!proto.introspection.ClientSignal.Signal} value */\n\n\nproto.introspection.ClientSignal.prototype.setSignal = function (value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n/**\n * optional DataSource data_source = 3;\n * @return {!proto.introspection.ClientSignal.DataSource}\n */\n\n\nproto.introspection.ClientSignal.prototype.getDataSource = function () {\n  return (\n    /** @type {!proto.introspection.ClientSignal.DataSource} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {!proto.introspection.ClientSignal.DataSource} value */\n\n\nproto.introspection.ClientSignal.prototype.setDataSource = function (value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.introspection.Status = {\n  ACTIVE: 0,\n  CLOSED: 1,\n  OPENING: 2,\n  CLOSING: 3,\n  ERROR: 4\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.Role = {\n  INITIATOR: 0,\n  RESPONDER: 1\n};\ngoog.object.extend(exports, proto.introspection);","'use strict'; // MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the Software\n// is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar OFFSET_BASIS_32 = 2166136261;\n\nfunction fnv1aString(string) {\n  var hash = OFFSET_BASIS_32;\n\n  for (var i = 0; i < string.length; i++) {\n    hash ^= string.charCodeAt(i); // 32-bit FNV prime: 2**24 + 2**8 + 0x93 = 16777619\n    // Using bitshift for accuracy and performance. Numbers in JS suck.\n\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n\n  return hash >>> 0;\n}\n\nfunction fnv1aBuffer(buf) {\n  var hash = OFFSET_BASIS_32;\n\n  for (var i = 0; i < buf.length; i++) {\n    hash ^= buf[i]; // 32-bit FNV prime: 2**24 + 2**8 + 0x93 = 16777619\n    // Using bitshift for accuracy and performance. Numbers in JS suck.\n\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n\n  return hash >>> 0;\n}\n\nfunction fnv1a(input) {\n  if (input instanceof Buffer) {\n    return fnv1aBuffer(input);\n  } else if (typeof input === 'string') {\n    return fnv1aString(input);\n  } else {\n    throw new Error('input must be a string or a Buffer');\n  }\n}\n\nmodule.exports = fnv1a;","'use strict';\n\nvar statusNames = {\n  0: 'ACTIVE',\n  1: 'CLOSED',\n  2: 'OPENING',\n  3: 'CLOSING',\n  4: 'ERROR'\n};\nvar roleNames = {\n  0: 'INITIATOR',\n  1: 'RESPONDER'\n}; // TODO: Get this dynamically from data source\n\nvar transportNames = {\n  0: 'TCP',\n  1: 'UDP',\n  2: 'QUIC',\n  3: 'RDP'\n};\nmodule.exports = {\n  statusNames: statusNames,\n  roleNames: roleNames,\n  transportNames: transportNames\n};","'use strict'; // Convenience functions for extracting data from decoded protobuf\n// Gets the first (or latest) occurence of each connection that exists in a data set, with optional filter\n\nvar _slicedToArray = require(\"/home/runner/work/libp2p-introspection-ui/libp2p-introspection-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/runner/work/libp2p-introspection-ui/libp2p-introspection-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nfunction getAllConnections(timepoints) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      filter = _ref.filter,\n      _ref$latest = _ref.latest,\n      latest = _ref$latest === void 0 ? false : _ref$latest;\n\n  var test = function test(testConnection) {\n    return !filter || filter(testConnection);\n  };\n\n  var allConnections = timepoints.reduce(function (previousConns, timepoint) {\n    var newConns = getConnections(timepoint).filter(function (testConn) {\n      return test(testConn) && !previousConns.some(function (existingConn) {\n        return testConn.getId().toString() === existingConn.getId().toString();\n      });\n    });\n    if (!newConns.length) return previousConns;\n    return latest ? [].concat(_toConsumableArray(newConns), _toConsumableArray(previousConns)) : [].concat(_toConsumableArray(previousConns), _toConsumableArray(newConns));\n  }, []);\n  return allConnections;\n}\n\nfunction getSubsystems(timepoint) {\n  if (!timepoint) return null;\n  return timepoint.getSubsystems();\n} // Gets the connections in one timepoint\n\n\nfunction getConnections(timepoint) {\n  var subsystems = getSubsystems(timepoint);\n  return subsystems ? subsystems.getConnectionsList() : [];\n}\n\nfunction getAllStreamsAtTime(timepoint) {\n  if (!timepoint) return [];\n  var connections = getConnections(timepoint); // Returns array of { connection, stream }\n\n  var streams = connections.reduce(function (streams, connection) {\n    return [].concat(_toConsumableArray(streams), _toConsumableArray(connection.getStreams().getStreamsList().map(function (stream) {\n      return {\n        connection: connection,\n        stream: stream\n      };\n    })));\n  }, []);\n  return streams;\n}\n\nfunction getEnumByName(name, obj) {\n  var entry = Object.entries(obj).find(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        _ = _ref3[0],\n        value = _ref3[1];\n\n    return value === name;\n  });\n  if (!entry) throw new Error(\"\\\"\".concat(name, \"\\\" not one of \\\"\").concat(Object.values(obj).join('\", \"'), \"\\\"\"));\n  return parseInt(entry[0]);\n}\n\nfunction getLatestTimepoint(timepoints) {\n  if (!timepoints.length) return null;\n  return timepoints[timepoints.length - 1];\n}\n\nfunction getTime(timepoint, format) {\n  var timestamp = timepoint.getInstantTs().getSeconds();\n  if (!format) return timestamp; // TODO: add date formating options\n}\n\nfunction getTimeIndex(timepoints, time) {\n  var index = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = timepoints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var timepoint = _step.value;\n      if (getTime(timepoint) === time) return index;\n      index++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction _getAge(timeline, timepoint) {\n  var openTs = timeline.getOpenTs();\n  if (!openTs) return 0;\n  var closeTs = timeline.getCloseTs();\n  var endTime = closeTs ? closeTs.getSeconds() : getTime(timepoint);\n  return endTime - openTs.getSeconds();\n}\n\nfunction getConnectionAge(connection, timepoint) {\n  return _getAge(connection.getTimeline(), timepoint);\n}\n\nfunction getStreamAge(stream, timepoint) {\n  return _getAge(stream.getTimeline(), timepoint);\n}\n\nfunction _getTraffic(traffic, direction, type) {\n  var byDirection = \"getTraffic\".concat(direction === 'in' ? 'In' : 'Out');\n  var byType = \"getCum\".concat(type === 'bytes' ? 'Bytes' : 'Packets');\n  return traffic[byDirection]()[byType]();\n}\n\nfunction getConnectionTraffic(connection, direction, type) {\n  return _getTraffic(connection.getTraffic(), direction, type);\n}\n\nfunction getStreamTraffic(stream, direction, type) {\n  return _getTraffic(stream.getTraffic(), direction, type);\n}\n\nmodule.exports = {\n  getAllConnections: getAllConnections,\n  getAllStreamsAtTime: getAllStreamsAtTime,\n  getConnections: getConnections,\n  getEnumByName: getEnumByName,\n  getLatestTimepoint: getLatestTimepoint,\n  getTime: getTime,\n  getTimeIndex: getTimeIndex,\n  getConnectionAge: getConnectionAge,\n  getStreamAge: getStreamAge,\n  getConnectionTraffic: getConnectionTraffic,\n  getStreamTraffic: getStreamTraffic\n};","'use strict';\n\nmodule.exports = [require(\"\".concat(__dirname, \"/sample-1min.mock\"))];","module.exports = __webpack_public_path__ + \"static/media/sample-1min.f4cc9af0.mock\";","import React from 'react'\nimport T from 'prop-types'\nimport { ThemeSetter, DataProvider } from '@libp2p-observer/sdk'\n\nfunction ContextWrappers({ children }) {\n  return (\n    <ThemeSetter>\n      <DataProvider>{children}</DataProvider>\n    </ThemeSetter>\n  )\n}\nContextWrappers.propTypes = {\n  children: T.node,\n}\n\nexport default ContextWrappers\n","import {\n  getAllConnections,\n  getConnections,\n  getTime,\n  getConnectionTraffic,\n} from '@libp2p-observer/data'\nimport { validateNumbers } from '@libp2p-observer/sdk'\n\nfunction getTickOffsets(ticks, scale) {\n  const tickGap = ticks[1] - ticks[0]\n\n  const firstTickGap = ticks[0] - scale.domain()[0]\n  const lastTickGap = scale.domain()[1] - ticks[ticks.length - 1]\n\n  const totalGapValues =\n    firstTickGap + tickGap * (ticks.length - 1) + lastTickGap\n\n  const firstTickOffset = firstTickGap / totalGapValues\n  const tickOffset = tickGap / totalGapValues\n\n  const tickOffsets = Array(ticks.length)\n    .fill()\n    .map((_, i) => firstTickOffset + i * tickOffset)\n\n  return tickOffsets\n}\n\nfunction getTrafficChangesByPeer(direction) {\n  // Can't calculate bytes added in first timepoint, so skip where index is 0\n  const keyData = (dataset, keys) =>\n    dataset.slice(1).map(\n      // Get array of objects of mapped values added in each timepoint keyed by peerId\n      (timepoint, previousTimepointIndex) => {\n        const connectionsById = getConnections(timepoint).reduce(\n          (connectionsById, connection) => {\n            connectionsById[connection.getPeerId()] = connection\n            return connectionsById\n          },\n          {}\n        )\n\n        const trafficByPeer = keys.reduce(\n          (trafficByPeer, peerId) => {\n            const connection = connectionsById[peerId]\n\n            let bytes = 0\n\n            if (connection) {\n              bytes = getConnectionTraffic(connection, direction, 'bytes')\n\n              // Use only those bytes added in this time point\n              // Can't get bytes added first to previous, so skip it\n              const previousTimepoint = dataset[previousTimepointIndex]\n              const previousConn = getConnections(previousTimepoint).find(\n                conn => conn.getPeerId() === peerId\n              )\n              if (previousConn) {\n                bytes -= getConnectionTraffic(previousConn, direction, 'bytes')\n              }\n            }\n\n            trafficByPeer[peerId] = bytes\n            return trafficByPeer\n          },\n          { time: getTime(timepoint) }\n        )\n        validateNumbers(trafficByPeer)\n        return trafficByPeer\n      }\n    )\n  return keyData\n}\n\nfunction getTotalTraffic(connection) {\n  const dataIn = getConnectionTraffic(connection, 'in', 'bytes')\n  const dataOut = getConnectionTraffic(connection, 'out', 'bytes')\n  validateNumbers(dataIn, dataOut)\n  return dataIn + dataOut\n}\n\nfunction getPeerIds(dataset, sorter, applyFilters) {\n  const allConnections = getAllConnections(dataset)\n  const filteredConnections = allConnections.filter(applyFilters)\n  filteredConnections.sort(sorter)\n  return filteredConnections.map(conn => conn.getPeerId())\n}\n\nexport { getTickOffsets, getTrafficChangesByPeer, getTotalTraffic, getPeerIds }\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { formatDataSize } from '@libp2p-observer/sdk'\nimport { getTickOffsets } from './utils'\n\nconst TicksContainer = styled.div`\n  position: absolute;\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  left: -${({ width }) => width}px;\n  top: 0;\n`\n\nconst TickLabel = styled.label`\n  position: absolute;\n  right: ${({ theme }) => theme.spacing(1)};\n  text-align: right;\n  white-space: nowrap;\n  transform: translateY(\n    ${({ fromSide }) => (fromSide === 'top' ? '-50%' : '50%')}\n  );\n  color: ${({ theme, colorKey }) => theme.color(colorKey)};\n  ${({ theme }) => theme.text('label', 'small')}\n`\n\nconst TickValue = styled.span`\n  font-weight: 600;\n`\n\nconst TickUnit = styled.span`\n  font-weight: 400;\n`\n\nconst AxisLabel = styled.label`\n  display: block;\n  position: absolute;\n  font-weight: 800;\n  text-align: right;\n  transform-origin: top right;\n  transform: rotate(-90deg);\n  width: 100%;\n  text-transform: uppercase;\n  top: -${({ theme }) => theme.spacing(0.5)};\n  padding-top: ${({ theme }) => theme.spacing(1)};\n  right: ${({ width }) => width}px;\n  color: ${({ theme, colorKey }) => theme.color(colorKey)};\n  ${({ theme }) => theme.text('label', 'medium')}\n`\n\nconst nbsp = '\\u00A0'\n\nfunction DataTicks({ scale, height, width, dataDirection, colorKey }) {\n  let ticks = scale.ticks(3)\n  if (ticks.length > 5) {\n    const topTick = ticks[ticks.length - 1]\n    ticks = [0, topTick / 2, topTick]\n  }\n\n  const tickOffsets = getTickOffsets(ticks, scale)\n  const fromSide = dataDirection === 'in' ? 'bottom' : 'top'\n\n  let lowestTickUnitPair = ['', Infinity]\n  const ticksFormatted = ticks.map(tickValue => {\n    const [formattedValue, unit] = formatDataSize(tickValue)\n    if (unit && tickValue < lowestTickUnitPair[1]) {\n      lowestTickUnitPair = [unit, tickValue]\n    }\n    return [formattedValue, unit]\n  })\n\n  return (\n    <TicksContainer height={height} width={width}>\n      <AxisLabel colorKey={colorKey} width={width}>\n        Data {dataDirection}\n      </AxisLabel>\n      {ticksFormatted.map(([tickValue, unit], tickIndex) => (\n        <TickLabel\n          style={{ [fromSide]: `${tickOffsets[tickIndex] * 100}%` }}\n          fromSide={fromSide}\n          key={`TimeTick[${tickIndex}]`}\n          colorKey={colorKey}\n        >\n          <TickValue>{tickValue}</TickValue>\n          {nbsp}\n          <TickUnit>{unit || lowestTickUnitPair[0]}</TickUnit>\n        </TickLabel>\n      ))}\n    </TicksContainer>\n  )\n}\n\nDataTicks.propTypes = {\n  scale: T.func.isRequired,\n  height: T.number.isRequired,\n  width: T.number.isRequired,\n  dataDirection: T.string.isRequired,\n  colorKey: T.string.isRequired,\n}\n\nexport default DataTicks\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { formatTime } from '@libp2p-observer/sdk'\nimport { getTickOffsets } from './utils'\n\nconst TicksContainer = styled.div`\n  position: relative;\n  height: 18px;\n  width: 100%;\n`\n\nconst TickLabel = styled.label`\n  position: absolute;\n  text-align: center;\n  transform: translateX(-50%);\n  white-space: nowrap;\n  ${({ theme }) => theme.text('label', 'small')}\n`\n\nfunction TimeTicks({ scale, width }) {\n  const ticks = scale.ticks(Math.round(width / 120))\n  const tickOffsets = getTickOffsets(ticks, scale)\n\n  return (\n    <TicksContainer>\n      {ticks.map((tick, tickIndex) => (\n        <TickLabel\n          style={{ left: `${tickOffsets[tickIndex] * 100}%` }}\n          key={`TimeTick[${tickIndex}]`}\n        >\n          {formatTime(tick)}\n        </TickLabel>\n      ))}\n    </TicksContainer>\n  )\n}\n\nTimeTicks.propTypes = {\n  scale: T.func.isRequired,\n  width: T.number.isRequired,\n}\n\nexport default TimeTicks\n","import React, { useContext } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { SetterContext, PeerContext, useAreaChart } from '@libp2p-observer/sdk'\n\nimport DataTicks from './DataTicks'\nimport TimeTicks from './TimeTicks'\n\nconst height = 52\n\nconst Container = styled.div`\n  position: relative;\n  padding: 0;\n`\n\nconst StyledSvg = styled.svg`\n  width: 100%;\n  height: ${height}px;\n  background: ${({ theme }) => theme.color('contrast', 1)};\n`\n\nconst StyledPath = styled.path`\n  fill: ${({ theme, colorKey, opacity, isHighlighted }) => {\n    if (isHighlighted) return theme.color('background', 1)\n    return theme.color(colorKey, 0, opacity)\n  }};\n`\n\nfunction TimelinePaths({\n  width,\n  dataDirection,\n  colorKey,\n  xScale,\n  yScale,\n  stackedData,\n  leftGutter,\n}) {\n  const globalPeerId = useContext(PeerContext)\n  const { setPeerId } = useContext(SetterContext)\n  const flip = dataDirection === 'out'\n\n  const pathDefs = useAreaChart({\n    stackedData,\n    height,\n    width,\n    xScale,\n    yScale,\n    flip,\n  })\n\n  return (\n    <Container>\n      <DataTicks\n        scale={yScale}\n        width={leftGutter}\n        height={height}\n        dataDirection={dataDirection}\n        colorKey={colorKey}\n      />\n      <StyledSvg height={height}>\n        {pathDefs &&\n          pathDefs.map(({ pathDef, peerId }, index) => {\n            const isHighlighted = peerId === globalPeerId\n\n            function mouseEnterHandler() {\n              if (peerId !== globalPeerId) setPeerId(peerId)\n            }\n            function mouseLeaveHandler() {\n              if (globalPeerId) setPeerId(null)\n            }\n\n            const key = `${peerId}_paths`\n            return (\n              <StyledPath\n                key={key}\n                d={pathDef}\n                name={peerId}\n                onMouseEnter={mouseEnterHandler}\n                onMouseLeave={mouseLeaveHandler}\n                colorKey={colorKey}\n                isHighlighted={isHighlighted}\n                opacity={\n                  (index % 2 ? 0.6 : 0.7) +\n                  (index / (pathDefs.length + 1)) * 0.3\n                }\n              />\n            )\n          })}\n      </StyledSvg>\n      {dataDirection === 'in' && <TimeTicks scale={xScale} width={width} />}\n    </Container>\n  )\n}\n\nTimelinePaths.propTypes = {\n  width: T.number.isRequired,\n  dataDirection: T.string.isRequired,\n  colorKey: T.string.isRequired,\n  flip: T.bool,\n  xScale: T.func.isRequired,\n  yScale: T.func.isRequired,\n  stackedData: T.array.isRequired,\n  leftGutter: T.number.isRequired,\n}\n\nexport default TimelinePaths\n","import React, { useContext, useRef } from 'react'\nimport T from 'prop-types'\nimport styled, { withTheme } from 'styled-components'\nimport { Formik } from 'formik'\n\nimport {\n  formatTime,\n  DataContext,\n  SetterContext,\n  Slider,\n  TimeContext,\n} from '@libp2p-observer/sdk'\n\nimport { getTime } from '@libp2p-observer/data'\n\nconst FormWrapper = styled.div`\n  height: inherit;\n`\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n`\nconst FirstSection = styled.div`\n  background: none;\n  border-radius: none;\n  pointer-events: none;\n`\nconst Control = styled.div`\n  background-color: ${({ theme }) => theme.color('highlight', 0, 0.5)};\n  outline: 2px solid ${({ theme }) => theme.color('highlight', 0, 0.3)};\n  border: none;\n  border-radius: 0;\n  height: 100%;\n  margin-top: 0;\n  top: 0;\n  z-index: 3;\n  // Position between data points\n  margin-left: ${({ width }) => width / 2}px;\n`\nconst InactiveSection = styled.div`\n  background-color: ${({ theme }) => theme.color('contrast', 0, 0.8)};\n  z-index: 2;\n  // Cover any x-axis labels that overspill with a hanging border\n  border-right: solid transparent ${({ theme }) => theme.spacing(2)};\n  margin-right: -${({ theme }) => theme.spacing(2)};\n  box-sizing: content-box;\n`\nconst NumberFieldsWrapper = styled.div`\n  display: none;\n`\n\nconst TooltipContent = styled.div`\n  font-weight: 600;\n  font-size: 8pt;\n  font-family: plex-sans, sans-serif;\n  color: ${({ theme }) => theme.color('text', 3)};\n  border-radius: ${({ theme }) => theme.spacing()};\n  padding: ${({ theme }) => theme.spacing(0.5)}\n    ${({ theme }) => theme.spacing(1)};\n`\n\nconst TooltipPositioner = styled.div`\n  top: ${({ theme }) => theme.spacing(-1)};\n  bottom: unset;\n`\n\nfunction TimeSlider({ width, override = {}, theme }) {\n  const containerRef = useRef()\n\n  const dataset = useContext(DataContext)\n  const timepoint = useContext(TimeContext)\n  const { setTimepoint } = useContext(SetterContext)\n\n  const timeIndex = dataset.indexOf(timepoint)\n  const controlWidth = width / dataset.length\n\n  const handleChange = stepIndex => setTimepoint(dataset[stepIndex])\n\n  const sliderOverrides = Object.assign(\n    {\n      Container,\n      FirstSection,\n      InactiveSection,\n      Control,\n      NumberFieldsWrapper,\n    },\n    override\n  )\n\n  const initialValues = { index: timeIndex }\n\n  const tooltipProps = {\n    fixOn: 'always',\n    colorKey: 'highlight',\n    override: {\n      Content: TooltipContent,\n      Positioner: TooltipPositioner,\n    },\n    containerRef,\n    tolerance: parseInt(theme.spacing(2)),\n    content: formatTime(getTime(timepoint)),\n  }\n\n  return (\n    <FormWrapper ref={containerRef}>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={values => {\n          handleChange(values.index)\n        }}\n      >\n        {({ values, setFieldValue, submitForm }) => (\n          <Slider\n            onChange={submitForm}\n            values={values}\n            setFieldValue={setFieldValue}\n            max={dataset.length - 1}\n            controlWidth={controlWidth}\n            override={sliderOverrides}\n            width={width}\n            tooltipProps={tooltipProps}\n          />\n        )}\n      </Formik>\n    </FormWrapper>\n  )\n}\n\nTimeSlider.propTypes = {\n  width: T.number,\n  override: T.object,\n  theme: T.object.isRequired,\n}\n\nexport default withTheme(TimeSlider)\n","import React, { forwardRef } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { withResizeDetector } from 'react-resize-detector'\n\nimport { useStackedData, getNumericSorter } from '@libp2p-observer/sdk'\n\nimport { getTrafficChangesByPeer, getTotalTraffic, getPeerIds } from './utils'\nimport TimelinePaths from './TimelinePaths'\nimport TimeSlider from './TimeSlider'\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.color('contrast')};\n  position: relative;\n  padding: ${({ theme }) => theme.spacing()} 0;\n  color: ${({ theme }) => theme.color('text', 3)};\n  margin-left: ${({ leftGutter }) => leftGutter}px;\n  height: 100%;\n`\n\nconst TimelineInner = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: ${({ theme }) => theme.spacing()};\n  left: 0;\n`\n\nconst BarWrapper = styled.div`\n  position: relative;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\n`\nconst PathsContainer = styled.div`\n  position: relative;\n  user-select: none;\n`\n\nfunction Timeline({ width = 700, leftGutter }) {\n  const { stackedData, xScale, yScale: yScaleIn } = useStackedData({\n    keyData: getTrafficChangesByPeer('in'),\n    getKeys: getPeerIds,\n    getSorter: getNumericSorter,\n    mapSorter: getTotalTraffic,\n  })\n\n  const { stackedData: stackedDataOut, yScale: yScaleOut } = useStackedData({\n    keyData: getTrafficChangesByPeer('out'),\n    getKeys: getPeerIds,\n    getSorter: getNumericSorter,\n    mapSorter: getTotalTraffic,\n  })\n\n  // Make sure both data in and out use the same scale\n  const yScaleInMax = yScaleIn.domain()[1]\n  const yScaleOutMax = yScaleOut.domain()[1]\n  const yScale = yScaleInMax > yScaleOutMax ? yScaleIn : yScaleOut\n\n  // Extend the yScale so that 3 tick labels fit nicely\n  yScale.nice(3)\n\n  // Inject timeline graphic into slider bar so that both can be interacted with\n  const Bar = forwardRef(({ controlWidth, onClick, children }, ref) => (\n    <BarWrapper controlWidth={controlWidth} onClick={onClick} ref={ref}>\n      <TimelineInner>\n        <PathsContainer>\n          <TimelinePaths\n            dataDirection=\"in\"\n            width={width}\n            colorKey=\"primary\"\n            stackedData={stackedData}\n            xScale={xScale}\n            yScale={yScale}\n            leftGutter={leftGutter}\n          />\n        </PathsContainer>\n        <PathsContainer>\n          <TimelinePaths\n            dataDirection=\"out\"\n            width={width}\n            colorKey=\"secondary\"\n            stackedData={stackedDataOut}\n            xScale={xScale}\n            yScale={yScale}\n            leftGutter={leftGutter}\n          />\n        </PathsContainer>\n      </TimelineInner>\n      {children}\n    </BarWrapper>\n  ))\n  Bar.propTypes = {\n    controlWidth: T.number.isRequired,\n    onClick: T.func.isRequired,\n    children: T.node,\n  }\n\n  return (\n    <Container leftGutter={leftGutter}>\n      <TimeSlider width={width - leftGutter} override={{ Bar }} />\n    </Container>\n  )\n}\n\nTimeline.propTypes = {\n  width: T.number, // Set by withResizeDetector\n  leftGutter: T.number.isRequired,\n}\n\nexport default withResizeDetector(Timeline)\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Icon } from '@libp2p-observer/sdk'\n\nconst Container = styled.div`\n  display: flex;\n  background: ${({ theme }) => theme.color('contrast', 1)};\n  cursor: pointer;\n  ${({ theme }) => theme.text('label', 'small')}\n`\n\nconst IconButton = styled.button`\n  background: ${({ theme }) => theme.color('background')};\n  margin: ${({ theme }) => theme.spacing([0, 1, 0, 0.5])};\n  color: ${({ theme }) => theme.color('highlight')};\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  padding: ${({ theme }) => theme.spacing(0.5)};\n  z-index: 2;\n`\n\nconst ButtonText = styled.span`\n  flex-grow: 1;\n  background: ${({ theme }) => theme.color('contrast', 2)};\n  border-radius: ${({ theme }) => theme.spacing()};\n  color: ${({ theme }) => theme.color('text', 3)};\n  padding: ${({ theme }) => theme.spacing([0.5, 1, 0.5, 2.5])};\n  margin: ${({ theme }) => theme.spacing([0.5, 0, 0.5, -2.5])};\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  ${({ theme, isHighlighted }) =>\n    isHighlighted &&\n    `\n    background: ${theme.color('background')};\n    color: ${theme.color('highlight', 1)};\n  `}\n`\n\nfunction DataTypeControl({ metadata }) {\n  const [isHighlighted, setHighlighted] = useState(false)\n\n  if (!metadata) return ''\n\n  const { type, name } = metadata\n\n  const iconNames = {\n    sample: 'cloud',\n    upload: 'doc',\n  }\n\n  const iconType = isHighlighted ? 'back' : iconNames[type]\n\n  // TODO: When implementing live ws mode:\n  //  - Make icon pulse gently while live\n  //  - Show \"pause\" icon when paused\n  return (\n    <Container\n      onMouseEnter={() => setHighlighted(true)}\n      onMouseLeave={() => setHighlighted(false)}\n    >\n      <IconButton isHighlighted={isHighlighted}>\n        <Icon type={iconType} />\n      </IconButton>\n      <ButtonText isHighlighted={isHighlighted}>\n        {isHighlighted ? 'Change data source' : name}\n      </ButtonText>\n    </Container>\n  )\n}\n\nDataTypeControl.propTypes = {\n  metadata: T.object,\n}\n\nexport default DataTypeControl\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport T from 'prop-types'\n\nimport {\n  RuntimeContext,\n  Icon,\n  PeerIdAvatar,\n  PeerIdTooltip,\n  PeerIdTruncated,\n} from '@libp2p-observer/sdk'\nimport DataTypeControl from './DataTypeControl'\n\nconst DataPanelItem = styled.button`\n  display: block;\n  font-weight: 600;\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.color('text', 3, 0.8)};\n  padding: ${({ theme }) => theme.spacing(0.5)};\n  text-align: left;\n  cursor: pointer;\n  ${({ theme }) => theme.text('label', 'small')} :focus {\n    outline: none;\n  }\n  :hover {\n    background: ${({ theme }) => theme.color('contrast', 2)};\n  }\n  ${({ theme, isFixed }) =>\n    isFixed &&\n    `\n    background: ${theme.color('contrast', 2, 0.5)};\n    ${theme.boxShadow({ opacity: 0.4 })}\n  `}\n`\n\nconst IconContainer = styled.span`\n  margin-left: ${({ theme }) => theme.spacing(0.5)};\n  margin-right: ${({ theme }) => theme.spacing(0.5)};\n`\n\nfunction DataPanel({ metadata = {} }) {\n  const runtime = useContext(RuntimeContext)\n  const peerId = runtime.getPeerId()\n\n  return (\n    <>\n      <DataTypeControl metadata={metadata} />\n\n      <DataPanelItem>\n        <IconContainer>\n          <Icon type=\"filter\" />\n        </IconContainer>\n        0 filters applied\n      </DataPanelItem>\n      <DataPanelItem>\n        <IconContainer>\n          <Icon type=\"doc\" />\n        </IconContainer>\n        Export data\n      </DataPanelItem>\n      <PeerIdTooltip peerId={peerId} override={{ Target: DataPanelItem }}>\n        <IconContainer>\n          <Icon type=\"marker\" />\n        </IconContainer>\n        Peer id —\n        <IconContainer>\n          <PeerIdAvatar peerId={peerId} />\n        </IconContainer>\n        <PeerIdTruncated peerId={peerId} />\n      </PeerIdTooltip>\n      <DataPanelItem>\n        <IconContainer>\n          <Icon type=\"forward\" />\n        </IconContainer>\n        About this peer\n      </DataPanelItem>\n    </>\n  )\n}\n\nDataPanel.propTypes = {\n  metadata: T.object,\n}\n\nexport default DataPanel\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { DataContext, RootNodeProvider } from '@libp2p-observer/sdk'\nimport Timeline from './Timeline/Timeline'\nimport DataPanel from './DataPanel/DataPanel'\n\nconst leftGutter = 72\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.color('contrast', 0)};\n  padding: ${({ theme }) => theme.spacing()};\n  display: flex;\n  width: 100%;\n`\n\nconst DataPanelSection = styled.div`\n  width: 160px;\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme }) => theme.color('contrast', 1)};\n`\n\nconst TimePanelSection = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  padding-right: ${({ theme }) => theme.spacing()};\n`\n\nfunction ControlPanel() {\n  const dataset = useContext(DataContext)\n  if (!dataset || !dataset.length) return ''\n\n  return (\n    <Container>\n      <RootNodeProvider>\n        <DataPanelSection>\n          <DataPanel metadata={dataset.metadata} />\n        </DataPanelSection>\n        <TimePanelSection>\n          <Timeline leftGutter={leftGutter} />\n        </TimePanelSection>\n      </RootNodeProvider>\n    </Container>\n  )\n}\n\nexport default ControlPanel\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport {\n  DataProvider,\n  ThemeSetter,\n  applySampleData,\n  RootNodeProvider,\n} from '@libp2p-observer/sdk'\nimport samples from '@libp2p-observer/samples'\n\nimport ControlPanel from '../components/ControlPanel'\n\nconst Page = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\nconst Content = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  overflow-y: scroll;\n  width: calc(100% - 16px);\n  padding-right: 8px;\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 8px;\n    height: 8px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n`\n\n// Standalone shell for demoing one component e.g. for staging in Storybook\nfunction DemoShell({ children }) {\n  const [mockData, setMockData] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onDataLoadStart = () => setIsLoading(true)\n  const onDataLoadComplete = data => {\n    setIsLoading(false)\n    setMockData(data)\n  }\n\n  if (!mockData && !isLoading) {\n    applySampleData(samples[0], onDataLoadStart, onDataLoadComplete)\n  }\n\n  return !mockData ? (\n    'Loading sample data...'\n  ) : (\n    <ThemeSetter>\n      <DataProvider initialData={mockData}>\n        <Page>\n          <Content>\n            <RootNodeProvider>{children}</RootNodeProvider>\n          </Content>\n          <ControlPanel />\n        </Page>\n      </DataProvider>\n    </ThemeSetter>\n  )\n}\n\nDemoShell.propTypes = {\n  children: T.node,\n}\n\nexport default DemoShell\n","function validateWidgetFields(widget) {\n  const { name, Component, description, tags, screenshot } = widget\n\n  if (!name || typeof name !== 'string')\n    throw new Error(`Invalid component name \"${name}\" (${typeof name})`)\n  if (!Component || typeof Component !== 'function')\n    throw new Error(\n      `Invalid Component renderer for ${name} (${typeof Component})`\n    )\n  if (!description || typeof description !== 'string')\n    throw new Error(\n      `Invalid component description \"${description}\" for ${name} (${typeof description})`\n    )\n  if (!tags || !Array.isArray(tags))\n    throw new Error(`Invalid component tags for ${name} (${typeof tags})`)\n\n  return {\n    name,\n    Component,\n    description,\n    tags,\n    screenshot,\n  }\n}\n\nexport { validateWidgetFields }\n","import React, { useContext } from 'react'\nimport T from 'prop-types'\nimport { DataTableRow, PeerContext, SetterContext } from '@libp2p-observer/sdk'\n\nfunction ConnectionsTableRow({ rowContentProps, columnDefs }) {\n  const globalPeerId = useContext(PeerContext)\n  const { setPeerId } = useContext(SetterContext)\n\n  const peerIdRow = rowContentProps.find(row => row.columnName === 'peerId')\n  const peerId = peerIdRow ? peerIdRow.value : null\n\n  function mouseEnterHandler() {\n    if (peerId !== globalPeerId) setPeerId(peerId)\n  }\n  function mouseLeaveHandler() {\n    if (globalPeerId) setPeerId(null)\n  }\n\n  return (\n    <DataTableRow\n      rowContentProps={rowContentProps}\n      columnDefs={columnDefs}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n      highlighted={peerId === globalPeerId}\n    />\n  )\n}\n\nConnectionsTableRow.propTypes = {\n  rowContentProps: T.array.isRequired,\n  columnDefs: T.array.isRequired,\n}\n\nexport default ConnectionsTableRow\n","import React, { useContext, useMemo } from 'react'\n\nimport {\n  getConnections,\n  getConnectionTraffic,\n  getConnectionAge,\n} from '@libp2p-observer/data'\nimport {\n  DataTable,\n  DataContext,\n  TimeContext,\n  useTabularData,\n} from '@libp2p-observer/sdk'\n\nimport ConnectionsTableRow from './ConnectionsTableRow'\nimport connectionsColumnDefs from '../definitions/connectionsColumns'\n\nfunction getMaxValues(timepoints) {\n  const maxValues = timepoints.reduce(\n    (maxValues, timepoint) =>\n      getConnections(timepoint).reduce((timeMax, connection) => {\n        const { maxTraffic, maxAge } = timeMax\n        const dataIn = getConnectionTraffic(connection, 'in', 'bytes')\n        const dataOut = getConnectionTraffic(connection, 'out', 'bytes')\n        const age = getConnectionAge(connection, timepoint)\n        return {\n          maxTraffic: Math.max(maxTraffic, dataIn, dataOut),\n          maxAge: Math.max(maxAge, age),\n        }\n      }, maxValues),\n    {\n      maxTraffic: 0,\n      maxAge: 0,\n    }\n  )\n  return maxValues\n}\n\nfunction ConnectionsTable() {\n  const timepoint = useContext(TimeContext)\n  const timepoints = useContext(DataContext)\n\n  // If performance becomes an issue on live-streaming data, use\n  // useReducer and compare appended data only instead of whole dataset\n  const metadata = useMemo(() => getMaxValues(timepoints), [timepoints])\n\n  const {\n    columnDefs,\n    contentProps,\n    sortColumn,\n    setSortColumn,\n    sortDirection,\n    setSortDirection,\n  } = useTabularData({\n    columns: connectionsColumnDefs,\n    data: getConnections(timepoint),\n    defaultSort: 'status',\n    metadata,\n  })\n\n  return (\n    <DataTable\n      contentProps={contentProps}\n      columnDefs={columnDefs}\n      sortColumn={sortColumn}\n      setSortColumn={setSortColumn}\n      sortDirection={sortDirection}\n      setSortDirection={setSortDirection}\n      override={{ DataTableRow: ConnectionsTableRow }}\n    />\n  )\n}\n\nexport default ConnectionsTable\n","export default \"Interactive datatable showing connections at a point in time, including:\\n - Peer ID\\n - Traffic in and out\\n - Streams per connection\\n - Age (time open)\\n - Status (active, closed...)\";","import Component from './components/ConnectionsTable'\nimport description from './description.md'\nimport screenshot from './screenshot.png'\n\nconst name = 'Connections table'\nconst tags = ['connections', 'streams', 'traffic', 'age']\n\nexport { Component, description, name, tags, screenshot }\n","import React, { useContext, useMemo } from 'react'\n\nimport { getAllStreamsAtTime, getStreamTraffic } from '@libp2p-observer/data'\nimport {\n  DataTable,\n  DataContext,\n  TimeContext,\n  useTabularData,\n} from '@libp2p-observer/sdk'\n\nimport streamsColumnDefs from '../definitions/streamsColumns'\n\nfunction getMaxValues(timepoints) {\n  const maxValues = timepoints.reduce(\n    (maxValues, timepoint) =>\n      getAllStreamsAtTime(timepoint).reduce((timeMax, { stream }) => {\n        const { maxTraffic } = timeMax\n        const dataIn = getStreamTraffic(stream, 'in', 'bytes')\n        const dataOut = getStreamTraffic(stream, 'out', 'bytes')\n        return {\n          maxTraffic: Math.max(maxTraffic, dataIn, dataOut),\n        }\n      }, maxValues),\n    {\n      maxTraffic: 0,\n    }\n  )\n  return maxValues\n}\n\nfunction StreamsTable() {\n  const timepoint = useContext(TimeContext)\n  const streamsData = getAllStreamsAtTime(timepoint)\n\n  const timepoints = useContext(DataContext)\n  const metadata = useMemo(() => getMaxValues(timepoints), [timepoints])\n\n  const {\n    columnDefs,\n    contentProps,\n    sortColumn,\n    setSortColumn,\n    sortDirection,\n    setSortDirection,\n  } = useTabularData({\n    columns: streamsColumnDefs,\n    data: streamsData,\n    defaultSort: 'stream-status',\n    metadata,\n  })\n\n  return (\n    <DataTable\n      contentProps={contentProps}\n      columnDefs={columnDefs}\n      sortColumn={sortColumn}\n      setSortColumn={setSortColumn}\n      sortDirection={sortDirection}\n      setSortDirection={setSortDirection}\n    />\n  )\n}\n\nexport default StreamsTable\n","export default \"Interactive datatable showing streams at a point in time, including:\\n - Peer ID\\n - Traffic in and out\\n - Stream protocol\\n - Stream status (active, closed...)\";","import Component from './components/StreamsTable'\nimport description from './description.md'\n\nconst name = 'Streams table'\nconst tags = ['streams', 'traffic', 'age']\n\nexport { Component, description, name, tags }\nexport { default as screenshot } from './screenshot.png'\n","import { validateWidgetFields } from './utils'\n\nimport * as connectionsTable from '@libp2p-observer/connections-table'\nimport * as streamsTable from '@libp2p-observer/streams-table'\n\nconst approvedWidgets = [\n  validateWidgetFields(connectionsTable),\n  validateWidgetFields(streamsTable),\n]\n\nexport default approvedWidgets\n","import React from 'react'\nimport T from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport styled from 'styled-components'\n\nconst CatalogueCard = styled.div`\n  cursor: pointer;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.color('background')};\n  width: calc(100% - ${({ theme }) => theme.spacing(4)});\n  @media (min-width: 480px) {\n    width: calc(50% - ${({ theme }) => theme.spacing(4)});\n  }\n  @media (min-width: 960px) {\n    width: calc(33% - ${({ theme }) => theme.spacing(4)});\n  }\n  @media (min-width: 1480px) {\n    width: calc(25% - ${({ theme }) => theme.spacing(4)});\n  }\n  margin: ${({ theme }) => `${theme.spacing(2)}`};\n  ${({ theme }) => theme.boxShadow()}\n  ${({ theme, isSelected }) =>\n    isSelected && `border: 4px solid ${theme.color('primary')};`}\n`\n\nconst CardContent = styled.div`\n  padding: 0 ${({ theme }) => `${theme.spacing(2)} ${theme.spacing(2)}`};\n  flex-grow: 1;\n`\n\nconst Tag = styled.li`\n  margin: ${({ theme }) => `${theme.spacing(0.5)}`};\n  padding: ${({ theme }) => `${theme.spacing(0.5)}`};\n  list-style: none;\n  display: inline-block;\n  ${({ theme }) => theme.text('label', 'medium', theme.color('text', 0, 0.8))}\n  font-weight: 700;\n`\n\nconst TagList = styled.ul`\n  padding: 0 ${({ theme }) => `${theme.spacing(2)} ${theme.spacing(2)}`};\n  margin: ${({ theme }) => `${theme.spacing()}`};\n  padding: 0;\n`\n\nconst StyledImg = styled.img`\n  width: 100%;\n`\n\nconst StyledHeader = styled.h3`\n  position: absolute;\n  top: ${({ theme }) => theme.spacing()};\n  left: ${({ theme }) => theme.spacing()};\n`\n\nconst StyledHeaderInner = styled.span`\n  padding: ${({ theme }) => theme.spacing()};\n  display: inline-block;\n  background: ${({ theme }) => theme.color('contrast', 1, 0.8)};\n  color: ${({ theme }) => theme.color('text', 3)};\n  line-height: 1em;\n`\n\nfunction CatalogueItem({\n  isSelected,\n  name,\n  description,\n  tags,\n  handleSelect,\n  screenshot,\n}) {\n  return (\n    <CatalogueCard onClick={handleSelect} isSelected={isSelected}>\n      <StyledImg src={screenshot} />\n      <StyledHeader>\n        <StyledHeaderInner>{name}</StyledHeaderInner>\n      </StyledHeader>\n      <CardContent>\n        <ReactMarkdown source={description} />\n      </CardContent>\n      <TagList>\n        {tags.map(tag => (\n          <Tag key={tag}>{tag}</Tag>\n        ))}\n      </TagList>\n    </CatalogueCard>\n  )\n}\n\nCatalogueItem.propTypes = {\n  isSelected: T.bool,\n  name: T.string,\n  description: T.string, // Markdown string from .md file and webpack raw-loader\n  tags: T.array,\n  handleSelect: T.func,\n  screenshot: T.any,\n}\n\nexport default CatalogueItem\n","import React, { useState, useContext } from 'react'\nimport styled from 'styled-components'\n\nimport {\n  UploadDataButton,\n  SampleDataButton,\n  SetterContext,\n} from '@libp2p-observer/sdk'\nimport samples from '@libp2p-observer/samples'\n\nconst TabsWrapper = styled.div`\n  display: flex;\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing()} 0`};\n  font-weight: 700;\n`\n\nconst SelectedTab = styled.div`\n  line-height: 1em;\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin: ${({ theme }) => `${theme.spacing()} ${theme.spacing()} 0`};\n  background: ${({ theme }) => theme.color('primary')};\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(2)}`};\n  border-radius: 6px 6px 0 0;\n`\n\nconst UnselectedTab = styled.div`\n  line-height: 1em;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  width: 25%;\n  margin: ${({ theme }) => `${theme.spacing()} ${theme.spacing()} 0`};\n  background: ${({ theme }) => theme.color('secondary', 1)};\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(2)}`};\n  color: ${({ theme }) => theme.color('text', 3)};\n  border-radius: 6px 6px 0 0;\n`\n\nconst ButtonWrapper = styled.span`\n  display: inline-block;\n  position: relative;\n  flex-grow: 1;\n  text-align: right;\n`\n\nfunction HeaderTabs() {\n  const [selectedTab, setSelectedTab] = useState(1)\n  const { dispatchDataset } = useContext(SetterContext)\n\n  const changeTab = tabIndex => {\n    dispatchDataset({ action: 'remove' })\n    setSelectedTab(tabIndex)\n  }\n\n  const SampleDataTab =\n    selectedTab === 1 ? (\n      <SelectedTab>\n        <label>Use sample data:</label>\n        <ButtonWrapper>\n          <SampleDataButton\n            title=\"Apply example data sample\"\n            samplePath={samples[0]}\n          />\n        </ButtonWrapper>\n      </SelectedTab>\n    ) : (\n      <UnselectedTab onClick={() => changeTab(1)}>\n        Use sample data\n      </UnselectedTab>\n    )\n\n  const UploadDataTab =\n    selectedTab === 2 ? (\n      <SelectedTab>\n        <label>Upload data:</label>\n        <ButtonWrapper>\n          <UploadDataButton title=\"Choose protobuf data file\" />\n        </ButtonWrapper>\n      </SelectedTab>\n    ) : (\n      <UnselectedTab onClick={() => changeTab(2)}>Upload data</UnselectedTab>\n    )\n\n  const ConnectWebsocketTab =\n    selectedTab === 3 ? (\n      <SelectedTab>\n        <label>Connect websocket:</label>\n        <ButtonWrapper>\n          <UploadDataButton title=\"Enter websocket URL\" />\n        </ButtonWrapper>\n      </SelectedTab>\n    ) : (\n      <UnselectedTab onClick={() => changeTab(3)}>\n        Connect websocket\n      </UnselectedTab>\n    )\n\n  return (\n    <TabsWrapper>\n      {SampleDataTab}\n      {UploadDataTab}\n      {ConnectWebsocketTab}\n    </TabsWrapper>\n  )\n}\n\nexport default HeaderTabs\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { AccordionControl, Icon, Tooltip } from '@libp2p-observer/sdk'\nimport ReactMarkdown from 'react-markdown'\nimport { SlideDown } from 'react-slidedown'\n\nconst Container = styled.article`\n  overflow: auto;\n  background: ${({ theme }) => theme.color('background')};\n  border-radius: ${({ theme }) => theme.spacing()};\n  ${({ theme }) => theme.boxShadow({ size: 1.5, opacity: 0.3 })};\n`\n\nconst Header = styled.header`\n  padding: ${({ theme }) => theme.spacing([1, 2])};\n  display: flex;\n  align-items: center;\n`\n\nconst WidgetContainer = styled.section`\n  padding: ${({ theme }) => theme.spacing()};\n`\n\nconst Title = styled.h1`\n  flex-grow: 1;\n  color: ${({ theme }) => theme.color('contrast')};\n  ${({ theme }) => theme.text('heading', 'medium')}\n  margin-top: ${({ theme }) => theme.spacing()};\n`\n\nconst CloseButton = styled.button`\n  border: none;\n  background: none;\n  padding: 0;\n  border-radius: 50%;\n  color: ${({ theme }) => theme.color('highlight', 1)};\n  ${({ theme }) => theme.text('label', 'medium')} :hover,\n  :focus {\n    background: ${({ theme }) => theme.color('highlight', 0)};\n    color: ${({ theme }) => theme.color('background', 0)};\n  }\n`\n\nconst Description = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.color('background', 1)};\n  overflow: hidden;\n  padding: ${({ theme }) => theme.spacing([0, 4])};\n  ${({ theme }) => theme.text('body', 'medium')}\n  ${({ theme }) => theme.transition()}\n`\n\nconst TooltipContent = styled.div`\n  color: ${({ theme }) => theme.color('highlight', 1)};\n  white-space: nowrap;\n`\n\nfunction SelectedWidget({ widget, setSelected }) {\n  const { Component, name, description } = widget\n  const [descriptionOpen, setDescriptionOpen] = useState(false)\n\n  const handleClose = () => setSelected(null)\n\n  return (\n    <Container>\n      <Header>\n        <Title>\n          {name}\n          <AccordionControl\n            isOpen={descriptionOpen}\n            setIsOpen={setDescriptionOpen}\n          >\n            About\n          </AccordionControl>\n        </Title>\n        <CloseButton>\n          <Tooltip\n            side=\"left\"\n            fixOn=\"never\"\n            content={\n              <TooltipContent>\n                Close and return <br /> to catalogue\n              </TooltipContent>\n            }\n          >\n            <Icon type=\"cancel\" onClick={handleClose} size={32} />\n          </Tooltip>\n        </CloseButton>\n      </Header>\n      <SlideDown as={Description}>\n        {descriptionOpen && <ReactMarkdown source={description} />}\n      </SlideDown>\n      <WidgetContainer>\n        <Component />\n      </WidgetContainer>\n    </Container>\n  )\n}\n\nSelectedWidget.propTypes = {\n  widget: T.shape({\n    Component: T.elementType.isRequired,\n    name: T.string.isRequired,\n    description: T.string,\n  }),\n  setSelected: T.func.isRequired,\n}\n\nexport default SelectedWidget\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { RootNodeProvider } from '@libp2p-observer/sdk'\nimport { ControlPanel } from '@libp2p-observer/shell'\n\nimport approvedWidgets from '../definitions/approvedWidgets'\nimport CatalogueItem from './CatalogueItem'\nimport HeaderTabs from './HeaderTabs'\nimport SelectedWidget from './SelectedWidget'\n\nconst HEADER_HEIGHT = '62px'\n\nconst Container = styled.div`\n  font-family: plex-sans, sans-serif;\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\n\nconst Main = styled.div`\n  padding: ${({ theme }) => theme.spacing([2, 1])};\n  background-color: ${({ theme }) => theme.color('background', 1)};\n  overflow-y: scroll;\n  flex-grow: 1;\n  flex-shrink: 1;\n  position: relative;\n`\n\nconst CatalogueBkg = styled.div`\n  display: flex;\n`\n\nconst Header = styled.div`\n  flex-grow: 0;\n  flex-shrink: 0;\n  z-index: 50;\n  top: 0;\n  left: 0;\n  width: 100%;\n  min-height: ${HEADER_HEIGHT};\n  background: ${({ theme }) => theme.color('contrast')};\n  border-bottom: ${({ theme }) =>\n    `${theme.spacing()} solid ${theme.color('primary')}`};\n`\n\nfunction Page() {\n  const [selected, setSelected] = useState(null)\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTabs />\n      </Header>\n      <Main>\n        {selected !== null && (\n          <RootNodeProvider>\n            <SelectedWidget\n              widget={approvedWidgets[selected]}\n              setSelected={setSelected}\n            />\n          </RootNodeProvider>\n        )}\n        <RootNodeProvider>\n          <CatalogueBkg>\n            {approvedWidgets.map(\n              ({ name, description, tags, screenshot }, index) => (\n                <CatalogueItem\n                  key={name}\n                  name={name}\n                  description={description}\n                  tags={tags}\n                  screenshot={screenshot}\n                  handleSelect={() =>\n                    setSelected(index === selected ? null : index)\n                  }\n                  isSelected={selected === index}\n                />\n              )\n            )}\n          </CatalogueBkg>\n        </RootNodeProvider>\n      </Main>\n      <ControlPanel />\n    </Container>\n  )\n}\n\nexport default Page\n","import React from 'react'\n\nimport ContextWrappers from './components/ContextWrappers'\nimport Page from './components/Page'\n\nfunction App() {\n  return (\n    <ContextWrappers>\n      <Page />\n    </ContextWrappers>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { statusNames } from '@libp2p-observer/data'\nimport { Icon } from '@libp2p-observer/sdk'\n\nconst Container = styled.span`\n  display: inline-block;\n  padding: 0 ${({ theme }) => theme.spacing(0.5)};\n  background: ${({ theme, getColor }) => getColor(theme, 0.15)};\n  color: ${({ theme, getColor }) => getColor(theme, 1)};\n  white-space: nowrap;\n  font-size: 8pt;\n  font-weight: 600;\n`\n\nconst ChipText = styled.span`\n  line-height: 1em;\n  display: inline-block;\n  padding: ${({ theme }) => theme.spacing()}\n    ${({ theme }) => theme.spacing(0.5)};\n  vertical-align: middle;\n`\n\nfunction StatusChip({ status }) {\n  const chipMap = {\n    ACTIVE: {\n      icon: 'check',\n      colorKey: 'tertiary',\n      colorIndex: 2,\n    },\n    OPENING: {\n      icon: 'opening',\n      colorKey: 'tertiary',\n      colorIndex: 1,\n    },\n    CLOSING: {\n      icon: 'closing',\n      colorKey: 'highlight',\n      colorIndex: 0,\n    },\n    CLOSED: {\n      icon: 'closed',\n      colorKey: 'highlight',\n      colorIndex: 1,\n    },\n    ERROR: {\n      icon: 'cancel',\n      colorKey: 'contrast',\n      colorIndex: 1,\n    },\n  }\n\n  if (!chipMap[status]) {\n    throw new Error(`Status name \"${status}\" not recognised`)\n  }\n  const { icon, colorKey, colorIndex } = chipMap[status]\n\n  const getColor = (theme, opacity) =>\n    theme.color(colorKey, colorIndex || 0, opacity)\n\n  return (\n    <Container getColor={getColor}>\n      <Icon type={icon} />\n      <ChipText>{status}</ChipText>\n    </Container>\n  )\n}\n\nStatusChip.propTypes = {\n  status: T.oneOf(Object.values(statusNames)),\n}\n\nexport default StatusChip\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport StatusChip from './StatusChip'\nimport {\n  formatDuration,\n  Bubble,\n  DataNumber,\n  PeerIdChip,\n  TimeNumber,\n  Tooltip,\n} from '@libp2p-observer/sdk'\n\nconst Nowrap = styled.span`\n  white-space: nowrap;\n`\n\nfunction StatusContent({ value }) {\n  return <StatusChip status={value} />\n}\nStatusContent.propTypes = {\n  value: T.string,\n}\n\nfunction PeerIdContent({ value }) {\n  return <PeerIdChip peerId={value} />\n}\nPeerIdContent.propTypes = {\n  value: T.string,\n}\n\nfunction BytesContent({ value, maxValue, colorKey }) {\n  return (\n    <Tooltip content={<Nowrap>{value} bytes</Nowrap>}>\n      <Nowrap>\n        <DataNumber value={value} />\n        <Bubble\n          value={value}\n          maxValue={maxValue}\n          inline\n          size={24}\n          colorKey={colorKey}\n        />\n      </Nowrap>\n    </Tooltip>\n  )\n}\nBytesContent.propTypes = {\n  value: T.num,\n  maxValue: T.num,\n  colorKey: T.string,\n}\n\nfunction AgeContent({ value, maxValue }) {\n  const ageSeconds = Math.round(value / 1000)\n  return (\n    <Tooltip content={<Nowrap>{formatDuration(value)}</Nowrap>}>\n      <Nowrap>\n        <TimeNumber value={ageSeconds} />\n        <Bubble value={value} maxValue={maxValue} inline size={24} />\n      </Nowrap>\n    </Tooltip>\n  )\n}\nAgeContent.propTypes = {\n  value: T.string,\n  maxValue: T.num,\n}\n\nexport { AgeContent, BytesContent, PeerIdContent, StatusContent }\n","import React, { useState, useReducer, useRef, createContext } from 'react'\nimport T from 'prop-types'\n\nimport { getLatestTimepoint } from '@libp2p-observer/data'\n\nconst DataContext = createContext()\nconst RuntimeContext = createContext()\nconst TimeContext = createContext()\nconst PeerContext = createContext()\nconst SetterContext = createContext()\n\nfunction updateData(oldData, { action, data }) {\n  switch (action) {\n    case 'append':\n      return appendToDataSet(data, oldData)\n    case 'replace':\n      return replaceDataSet(data)\n    case 'remove':\n      return null\n    default:\n      throw new Error(`Action \"${action}\" not valid`)\n  }\n}\n\nfunction appendToDataSet(newData, oldData) {\n  // TODO: Update protobuf, then check peer Id matches\n  // If not, replace dataset\n  // Else, see if this timestamp already exists\n  // If it does, replace. Else, append\n  return [...oldData, ...newData]\n}\n\nfunction replaceDataSet(data) {\n  // E.g. after uploading a new file or connecting to a new source\n  return data\n}\n\nfunction DataProvider({ initialData = null, initialTime, children }) {\n  // This is structured to avoid re-renders disrupting user interactions e.g. unfocusing input\n  const [dataset, dispatchDataset] = useReducer(updateData, initialData)\n  const [peerId, setPeerId] = useState(null)\n\n  if (dataset && !initialTime) initialTime = getLatestTimepoint(dataset.states)\n  const [timepoint, setTimepoint] = useState(initialTime)\n\n  // Bundle setters and make bundle persist, as defining this in normal function flow\n  // causes context `value` to see a new object each run, causing re-renders every time\n  const dataSetters = useRef({\n    dispatchDataset,\n    setTimepoint,\n    setPeerId,\n  })\n\n  const states = dataset ? dataset.states : []\n  const runtime = dataset ? dataset.runtime : {}\n\n  // Select a timepoint after a new dataset is added\n  if (states.length && (!timepoint || !states.includes(timepoint))) {\n    const latestTimepoint = getLatestTimepoint(states)\n\n    if (states.includes(latestTimepoint)) {\n      setTimepoint(latestTimepoint)\n    } else {\n      // Should be unreachable but if a bug is introduced, could cause an infinite rerender if allowed\n      throw new Error('Selected a timepoint not in the current dataset')\n    }\n  }\n\n  // Separate getters and setters so that components can set a context value without\n  // then rerendering themselves because their useContext hook consumes that value\n  return (\n    <DataContext.Provider value={states}>\n      <RuntimeContext.Provider value={runtime}>\n        <TimeContext.Provider value={timepoint}>\n          <PeerContext.Provider value={peerId}>\n            <SetterContext.Provider value={dataSetters.current}>\n              {children}\n            </SetterContext.Provider>\n          </PeerContext.Provider>\n        </TimeContext.Provider>\n      </RuntimeContext.Provider>\n    </DataContext.Provider>\n  )\n}\n\nDataProvider.propTypes = {\n  initialData: T.object,\n  initialTime: T.number,\n  children: T.node.isRequired,\n}\n\nexport {\n  DataProvider,\n  DataContext,\n  RuntimeContext,\n  TimeContext,\n  PeerContext,\n  SetterContext,\n}\n","import React, { createContext, useEffect, useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nconst RootNodeContext = createContext()\n\nconst Container = styled.div`\n  width: inherit;\n  height: inherit;\n  display: inherit;\n  flex-direction: inherit;\n`\n\nfunction RootNodeProvider({ children }) {\n  const rootNodeRef = useRef()\n\n  // Re-render listeners when ref is available\n  const [refState, setRefState] = useState({})\n  useEffect(() => {\n    if (rootNodeRef.current && !refState.current) setRefState(rootNodeRef)\n  }, [refState])\n\n  return (\n    <Container ref={rootNodeRef}>\n      <RootNodeContext.Provider value={refState}>\n        {children}\n      </RootNodeContext.Provider>\n    </Container>\n  )\n}\n\nRootNodeProvider.propTypes = {\n  children: T.node.isRequired,\n}\n\nexport { RootNodeContext, RootNodeProvider }\n","import nexa_light from './fonts/Nexa-Light.otf'\nimport nexa_bold from './fonts/Nexa-Bold.otf'\n\nimport plexSans_extraLight from './fonts/IBMPlexSans-ExtraLight.otf'\nimport plexSans_light from './fonts/IBMPlexSans-Light.otf'\nimport plexSans_regular from './fonts/IBMPlexSans-Regular.otf'\nimport plexSans_text from './fonts/IBMPlexSans-Text.otf'\nimport plexSans_medium from './fonts/IBMPlexSans-Medium.otf'\nimport plexSans_semiBold from './fonts/IBMPlexSans-SemiBold.otf'\nimport plexSans_bold from './fonts/IBMPlexSans-Bold.otf'\n\nimport plexMono_light from './fonts/IBMPlexMono-Light.otf'\nimport plexMono_text from './fonts/IBMPlexMono-Text.otf'\nimport plexMono_semiBold from './fonts/IBMPlexMono-SemiBold.otf'\n\nfunction getFontFace({ font, file, weight = 400, format = 'opentype' }) {\n  return `\n    @font-face {\n      src: url('${file}') format('${format}');\n      font-family: ${font};\n      font-weight: ${weight};\n    }\n  `\n}\n\nexport default [\n  // Use Nexa for headings and paragraph text\n  getFontFace({\n    font: 'nexa',\n    file: nexa_light,\n  }),\n  getFontFace({\n    font: 'nexa',\n    file: nexa_bold,\n    weight: 700,\n  }),\n\n  // Use plex-sans for small labels and table content\n  // Use weights to communicate magnitude at a glance\n  // e.g. 7 gb bolder than 70 mb which is bolder than 700 kb\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_extraLight,\n    weight: 200,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_light,\n    weight: 300,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_regular,\n    weight: 400,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_text,\n    weight: 500,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_medium,\n    weight: 600,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_semiBold,\n    weight: 700,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_bold,\n    weight: 800,\n  }),\n  // Use plex-mono for code and copy-paste snippets like hash ids\n  getFontFace({\n    font: 'plex-mono',\n    file: plexMono_light,\n    weight: 300,\n  }),\n  getFontFace({\n    font: 'plex-mono',\n    file: plexMono_text,\n    weight: 500,\n  }),\n  getFontFace({\n    font: 'plex-mono',\n    file: plexMono_semiBold,\n    weight: 700,\n  }),\n]\n","const palette = {\n  background: [\n    // white / pale beige / pale grey\n    '255, 255, 255',\n    '241, 242, 240',\n    '220, 228, 234',\n  ],\n  contrast: [\n    // near-black / dark purple / purple\n    '20, 22, 45',\n    '78, 23, 91',\n    '121, 27, 137',\n  ],\n  text: [\n    // black / grey / white\n    '0, 0, 0',\n    '93, 94, 96',\n    '128, 130, 133',\n    '255, 255, 255',\n  ],\n  primary: [\n    // yellow / orange\n    '252, 189, 32',\n    '232, 137, 0',\n  ],\n  secondary: [\n    // cyan / blue\n    '112, 208, 224',\n    '32, 155, 198',\n  ],\n  tertiary: [\n    // green\n    '196, 209, 18',\n    '159, 176, 0',\n    '0, 99, 109',\n  ],\n  highlight: [\n    // magenta / crimson\n    '209, 14, 102',\n    '163, 26, 75',\n  ],\n}\n\nconst color = (col, val = 0, alpha) => {\n  // For example, `theme.color('secondary', 1, 0.5)` for translucent blue\n  const rgb = palette[col][val]\n  return alpha ? `rgba(${rgb}, ${alpha})` : `rgb(${rgb})`\n}\n\nconst spacingPx = 8\nconst spacing = (value = 1, returnNum = false) => {\n  if (Array.isArray(value)) {\n    const values = value.map(num => spacing(num, returnNum))\n    return returnNum ? values : values.join(' ')\n  }\n\n  const size = value * spacingPx\n  return returnNum ? size : `${size}px`\n}\n\nconst typography = {\n  default: `\n    font-family: plex-sans, sans-serif;\n    line-height: 1.6em;\n  `,\n  body: {\n    small: `\n      font-size: 9pt;\n      line-height: 1.6em;\n    `,\n    medium: `\n      font-size: 10pt;\n      line-height: 1.6em;\n    `,\n    large: `\n      font-size: 12pt;\n      line-height: 1.6em;\n    `,\n  },\n  label: {\n    small: `\n      font-size: 8pt;\n      line-height: 1.2em;\n    `,\n    medium: `\n      font-size: 9pt;\n      line-height: 1.2em;\n    `,\n    large: `\n      font-size: 10pt;\n      line-height: 1.2em;\n    `,\n  },\n  heading: {\n    small: `\n      font-size: 10pt;\n      margin: 0;\n      font-weight: 800;\n      line-height: 1.2em;\n    `,\n    medium: `\n      font-size: 12pt;\n      margin: ${spacing([0.5, 0])};\n      font-weight: 800;\n      line-height: 1.2em;\n    `,\n    large: `\n      font-size: 16pt;\n      margin: ${spacing([0.5, 0])};\n      font-weight: 600;\n      line-height: 1.2em;\n    `,\n  },\n}\n\nconst text = (elem, size, rgb) => {\n  // TODO: see if styled-components has a convenient way to merge overrides\n  // css`` doesn't work here: adds commas breaking CSS rules\n  return `\n    ${typography.default}\n    ${elem && size ? typography[elem][size] : ''}\n    ${rgb ? `color: ${rgb};` : ''}\n  `\n}\n\nconst boxShadow = ({\n  size = 1,\n  colorKey = 'contrast',\n  colorIndex = 0,\n  opacity = 0.2,\n} = {}) => {\n  const shadowColor = color(colorKey, colorIndex, opacity)\n  return `box-shadow: 0 ${spacing(0.5 * size)} ${spacing(size)} ${shadowColor};`\n}\n\nconst transition = ({\n  target = 'all',\n  duration = 0.4,\n  easing = 'ease-in-out',\n} = {}) => `transition: ${target} ${duration}s ${easing};`\n\nconst tableCell = `\n  ${text('label', 'medium')}\n  padding-top: ${spacing()};\n  padding-bottom: ${spacing()};\n  padding-left: ${spacing(3)};\n  padding-right: ${spacing(2)};\n  text-align: right;\n`\n\nexport default {\n  color,\n  spacing,\n  text,\n  boxShadow,\n  transition,\n  styles: { tableCell },\n}\n","import React, { useContext } from 'react'\nimport T from 'prop-types'\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\n\nimport fontFaces from '../../theme/fontFaces'\nimport theme from '../../theme/theme.js'\n\nfunction ThemeSetter({ children }) {\n  // Ensure we don't add global styles twice\n  if (useContext(ThemeProvider)) {\n    throw new Error(\n      'ThemeWrapper cannot be nested inside another ThemeProvider or itself'\n    )\n  }\n\n  const GlobalFontFaceStyles = createGlobalStyle`\n    ${fontFaces.join('')}\n  `\n\n  // TODO: make line height smarter\n  const GlobalDefaults = createGlobalStyle`\n    * {\n      box-sizing: border-box;\n    }\n    body {\n      font-family: 'plex-sans, sans-serif';\n    }\n    p, li, h1, h2, h3, h4, h5, h6 {\n      color: ${({ theme }) => theme.color('text', 1)};\n    }\n  `\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalFontFaceStyles />\n      <GlobalDefaults />\n      {children}\n    </ThemeProvider>\n  )\n}\n\nThemeSetter.propTypes = {\n  children: T.node,\n}\n\nexport default ThemeSetter\n","// Attribution:\n// Sort, Filter, Down and Up icons by Ryo Sato from the Noun Project\n\n// TODO: request the LibP2P icon set be expanded for these things\nimport asc from './icons/Asc'\nimport desc from './icons/Desc'\nimport sort from './icons/Sort'\n\n// Protocol Labs own icons\nimport cancel from './icons/Cancel'\nimport check from './icons/Check'\nimport uncheck from './icons/Uncheck'\n\n// Created based on Protocol Labs icons\nimport filter from './icons/Filter'\nimport back from './icons/Back'\nimport forward from './icons/Forward'\nimport doc from './icons/Doc'\nimport cloud from './icons/Cloud'\nimport closed from './icons/Closed'\nimport closing from './icons/Closing'\nimport opening from './icons/Opening'\nimport marker from './icons/Marker'\nimport expand from './icons/Expand'\n\n// Export an object of url paths; importer picks path by key\nexport default {\n  asc,\n  desc,\n  sort,\n  cancel,\n  check,\n  uncheck,\n  filter,\n  back,\n  forward,\n  doc,\n  cloud,\n  closed,\n  closing,\n  opening,\n  marker,\n  expand,\n}\n","import React from 'react'\n\nconst SvgAsc = props => (\n  <svg\n    viewBox=\"16 16 70 70\"\n    fill=\"currentColor\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M51.494 35.157l4.41 4.409a1.5 1.5 0 102.121-2.121l-6.965-6.964a1.5 1.5 0 00-2.12 0l-6.957 6.956a1.5 1.5 0 102.121 2.121l4.39-4.389v33.367a1.503 1.503 0 001.5 1.5 1.503 1.503 0 001.5-1.5V35.157z\" />\n  </svg>\n)\n\nexport default SvgAsc\n","import React from 'react'\n\nconst SvgDesc = props => (\n  <svg\n    viewBox=\"16 16 70 70\"\n    fill=\"currentColor\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M48.506 64.843l-4.41-4.41a1.5 1.5 0 10-2.121 2.121l6.965 6.965a1.5 1.5 0 002.12 0l6.957-6.956a1.5 1.5 0 10-2.121-2.121l-4.39 4.389V31.464a1.503 1.503 0 00-1.5-1.5 1.503 1.503 0 00-1.5 1.5v33.379z\" />\n  </svg>\n)\n\nexport default SvgDesc\n","import React from 'react'\n\nconst SvgSort = props => (\n  <svg\n    viewBox=\"14 14 74 74\"\n    fill=\"currentColor\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M56.491 64.878l-4.409-4.409a1.5 1.5 0 10-2.121 2.121l6.964 6.964a1.5 1.5 0 002.121 0l6.956-6.956a1.5 1.5 0 10-2.121-2.121l-4.39 4.389V41.499a1.503 1.503 0 00-1.5-1.5 1.503 1.503 0 00-1.5 1.5v23.379zm-13.06-29.763l4.409 4.408a1.5 1.5 0 102.121-2.121l-6.963-6.964a1.502 1.502 0 00-2.122 0l-6.956 6.956a1.5 1.5 0 102.122 2.122l4.389-4.39v23.367a1.498 1.498 0 001.5 1.5 1.5 1.5 0 001.5-1.5V35.115z\" />\n  </svg>\n)\n\nexport default SvgSort\n","import React from 'react'\n\nconst SvgCancel = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <defs>\n      <style>\n        {\n          '.cancel_svg__cls-2{fill:none;stroke:currentColor;stroke-miterlimit:10;stroke-width:4px}'\n        }\n      </style>\n    </defs>\n    <path\n      d=\"M48.31 18.82a29.49 29.49 0 11-29.49 29.49 29.52 29.52 0 0129.49-29.49m0-4a33.49 33.49 0 1033.48 33.49 33.48 33.48 0 00-33.48-33.49z\"\n      fill=\"currentColor\"\n    />\n    <path\n      className=\"cancel_svg__cls-2\"\n      d=\"M59.21 37.13l-21.8 21.54M37.41 37.13l21.8 21.54\"\n    />\n  </svg>\n)\n\nexport default SvgCancel\n","import React from 'react'\n\nconst SvgCheck = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <g data-name=\"Layer 34\">\n      <path\n        d=\"M48 19a29 29 0 11-29 29 29 29 0 0129-29m0-4a33 33 0 1033 33 33 33 0 00-33-33z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeMiterlimit={10}\n        strokeWidth={4}\n        d=\"M35.32 46.81l8.73 11.46 16.63-20.54\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SvgCheck\n","import React from 'react'\n\nconst SvgUncheck = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <defs>\n      <style />\n    </defs>\n    <path\n      d=\"M48 19a29 29 0 11-29 29 29 29 0 0129-29m0-4a33 33 0 1033 33 33 33 0 00-33-33z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SvgUncheck\n","import React from 'react'\n\nconst SvgFilter = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <g fill=\"currentColor\">\n      <path d=\"M13.754 17.688a3.208 3.208 0 00-3.097 2.405H6.979v1.727h3.713c.399 1.321 1.612 2.291 3.061 2.291 1.45 0 2.662-.97 3.061-2.291h8.206v-1.727h-8.17a3.206 3.206 0 00-3.096-2.405zm0 4.642a1.432 1.432 0 01-1.429-1.432c0-.786.641-1.429 1.429-1.429.787 0 1.429.643 1.429 1.429 0 .79-.642 1.432-1.429 1.432zM21.334 10.271a3.207 3.207 0 00-3.089-2.382 3.206 3.206 0 00-3.089 2.382H6.979v1.727h8.198a3.203 3.203 0 003.067 2.313c1.456 0 2.676-.981 3.067-2.313h3.708v-1.727h-3.685zm-3.089 2.259a1.432 1.432 0 010-2.862c.787 0 1.43.643 1.43 1.429 0 .791-.643 1.433-1.43 1.433z\" />\n    </g>\n  </svg>\n)\n\nexport default SvgFilter\n","import React from 'react'\n\nconst SvgBack = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M18.933 24.716a.85.85 0 00.601-1.451l-7.264-7.263 7.264-7.267a.85.85 0 00-1.201-1.202l-7.866 7.868a.852.852 0 00.001 1.203l7.865 7.864a.846.846 0 00.6.248z\"\n    />\n  </svg>\n)\n\nexport default SvgBack\n","import React from 'react'\n\nconst SvgForward = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M13.067 24.716a.85.85 0 01-.601-1.451l7.264-7.263-7.264-7.267a.85.85 0 111.202-1.202l7.866 7.868a.852.852 0 01-.001 1.203l-7.865 7.864a.85.85 0 01-.601.248z\"\n    />\n  </svg>\n)\n\nexport default SvgForward\n","import React from 'react'\n\nconst SvgDoc = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <defs>\n      <style>\n        {\n          '.doc_svg__cls-2{fill:none;stroke:currentColor;stroke-miterlimit:10;stroke-width:4px}'\n        }\n      </style>\n    </defs>\n    <g id=\"doc_svg__Layer_25\" data-name=\"Layer 25\">\n      <path\n        d=\"M66.53 18.76a8 8 0 018 8v42.48a8 8 0 01-8 8H29.47a8 8 0 01-8-8V26.76a8 8 0 018-8h37.06m0-4H29.47a12 12 0 00-12 12v42.48a12 12 0 0012 12h37.06a12 12 0 0012-12V26.76a12 12 0 00-12-12z\"\n        fill=\"currentColor\"\n      />\n      <path\n        className=\"doc_svg__cls-2\"\n        d=\"M30.94 32.81h34.12M30.94 45h34.12M30.94 57.2h34.12\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SvgDoc\n","import React from 'react'\n\nconst SvgCloud = props => (\n  <svg viewBox=\"0 0 96.62 96.62\" {...props}>\n    <path\n      d=\"M72.84 44.9a9.67 9.67 0 00-4.57 1.1 10.88 10.88 0 00.06-1.14 10.7 10.7 0 00-10.57-10.8A10.45 10.45 0 0049.64 38a13.31 13.31 0 00-12.25-8.31A13.46 13.46 0 0024.1 42.58a11.35 11.35 0 00-9.83 11.35c0 11.65 10 13.05 10.52 13.05H72.7c3.47 0 9.35-5.53 9.35-11.18s-3.69-10.9-9.21-10.9z\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeMiterlimit={10}\n      strokeWidth={4}\n      data-name=\"Layer 40\"\n    />\n  </svg>\n)\n\nexport default SvgCloud\n","import React from 'react'\n\nconst SvgClosed = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M16 7.387a8.612 8.612 0 018.612 8.615c0 4.752-3.854 8.606-8.612 8.606-4.756 0-8.61-3.854-8.61-8.606A8.61 8.61 0 0116 7.387m0-1.188c-5.412 0-9.8 4.389-9.8 9.803 0 5.41 4.388 9.799 9.8 9.799 5.413 0 9.801-4.389 9.801-9.799 0-5.414-4.389-9.803-9.801-9.803z\"\n    />\n    <path fill=\"currentColor\" d=\"M10.654 15.287H21.27v1.425H10.654z\" />\n  </svg>\n)\n\nexport default SvgClosed\n","import React from 'react'\n\nconst SvgClosing = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M17.109 25.748h-.756v-1.402h.654l.652-.102.213 1.389-.763.115zm-3.879-.338l-.797-.254-.628-.318.628-1.26.584.293.624.193-.411 1.346zm7.727-.91l-.83-1.135 1.139-.832.842 1.127-1.151.84zM9.142 23.064l-.953-1.059 1.047-.943.94 1.047-1.034.955zm15.106-1.826l-1.217-.707.697-1.197 1.207.631-.335.668-.352.605zM6.483 18.381l-.224-.67 1.353-.383.248.76.146.686-1.373.296-.15-.689m19.257-1.61l-1.406-.037V15.33l1.406-.02v1.461zm-18.052-1.98l-1.359-.352.172-.781.221-.668 1.335.443-.223.674-.146.684zm1.547-3.756l-1.059-.928.955-1.061 1.044.943-.94 1.046zm3.034-2.578l-.412-1.342.627-.191.58-.293.631 1.256-.755.363-.671.207zm4.87-2.108h.701l-.082 1.404-.818-.012-.698-.098.199-1.393.698.099M10.731 15.345H21.21v1.407H10.731zM20.885 7.567l.709.445.528.465-.922 1.064-.492-.43-.557-.343zM24.26 10.858l.66 1.264-1.249.652-.65-1.249z\"\n    />\n  </svg>\n)\n\nexport default SvgClosing\n","import React from 'react'\n\nconst SvgOpening = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M14.796 20.212l-3.1-4.074 1.117-.85 2.017 2.647 4.311-5.325 1.093.883zM17.109 25.751h-.755v-1.408h.654l.652-.1.213 1.393-.764.115zm-3.878-.344l-.797-.254-.628-.314.628-1.26.584.291.624.193-.411 1.344zm7.726-.91l-.83-1.135 1.139-.83.842 1.127-1.151.838zM9.142 23.063l-.953-1.059 1.047-.941.94 1.045-1.034.955zm15.106-1.826l-1.217-.709.697-1.195 1.207.633-.335.664-.352.607zm-17.615-2.17l-.149-.687.688-.148-.688.146-.224-.668 1.353-.385.248.76.146.689-1.374.293zm19.107-2.296l-1.406-.037v-1.406l1.406-.02v1.463zM7.689 14.79l-1.359-.353.172-.779.221-.666 1.335.443-.223.668-.146.687zm16.04-2.025l-.344-.59.6-.369.627-.314-.627.314.631-.314.305.611-1.192.662zM9.236 11.032l-1.059-.93.955-1.052 1.044.938-.94 1.044zm12.061-1.486l-.576-.379.377-.598.412-.568-.412.568.416-.564.561.402-.778 1.139zm-9.028-1.09l-.412-1.344.627-.193.58-.291.631 1.26-.754.361-.672.207zm5.489-.705l-.818-.01-.698-.098.199-1.395.698.1-.102.693.102-.693h.701l-.082 1.403z\"\n    />\n  </svg>\n)\n\nexport default SvgOpening\n","import React from 'react'\n\nconst SvgMarker = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <defs>\n      <style>\n        {\n          '.marker_svg__cls-1{fill:none;stroke:currentColor;stroke-miterlimit:10;stroke-width:4px}'\n        }\n      </style>\n    </defs>\n    <path\n      className=\"marker_svg__cls-1\"\n      d=\"M71.71 40.14c0 14.35-23.4 40.33-23.4 40.33S24.9 54.49 24.9 40.14s10.48-24 23.41-24 23.4 9.65 23.4 24z\"\n    />\n    <circle className=\"marker_svg__cls-1\" cx={48.31} cy={39.22} r={6.9} />\n  </svg>\n)\n\nexport default SvgMarker\n","import React from 'react'\n\nconst SvgAccordionUp = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M15.961 11.952c.188 0 .361.09.482.242l5.441 5.779c.163.214.595.777.34 1.368-.275.635-.985.637-1.972.639H11.67c-.983-.002-1.693-.004-1.972-.64-.255-.59.179-1.153.34-1.364l5.442-5.782a.614.614 0 01.481-.242zm4.804 6.675l-4.803-4.946-4.801 4.946c.172.006.359.007.513.007h8.578c.158 0 .344-.001.513-.007z\"\n    />\n  </svg>\n)\n\nexport default SvgAccordionUp\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport icons from '../theme/icons'\n\nconst Container = styled.span`\n  display: inline-block;\n  vertical-align: middle;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size}px;\n\n  ${({ theme, active }) => active && `color: ${theme.color('highlight')};`}\n\n  ${({ theme, disabled }) =>\n    disabled &&\n    `\n      color: ${theme.color('text', 3)};\n  `}\n  ${({ theme, offset }) => offset && `margin-right: -${theme.spacing(2)};`}\n  ${({ onClick, theme, disabled }) =>\n    onClick &&\n    !disabled &&\n    `\n    cursor: pointer;\n    &:hover {\n      backgroundColor: ${theme.color('background', 1, 0.3)};\n    }\n  `}\n`\n\nfunction Icon({ type, onClick, active, disabled, size = 20, override = {} }) {\n  const IconSvg = icons[type]\n  if (!IconSvg) throw new Error(`No icon found named \"${type}\"`)\n\n  return (\n    <Container\n      onClick={disabled ? null : onClick}\n      active={active}\n      disabled={disabled}\n      size={size}\n      as={override.Container}\n    >\n      <IconSvg as={override.IconSvg} />\n    </Container>\n  )\n}\n\nIcon.propTypes = {\n  type: T.string.isRequired,\n  onClick: T.func,\n  active: T.bool,\n  disabled: T.bool,\n  offset: T.bool,\n  size: T.number,\n  override: T.object,\n}\n\nexport default Icon\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { Field } from 'formik'\n\nimport Icon from '../../Icon'\n\nfunction areAllChecked(values) {\n  return Object.values(values).every(value => value)\n}\n\nasync function toggleAll(values, fieldNames, setFieldValue, onChange) {\n  // tick everything, unless everything is already ticked, then tick nothing\n  const newValue = !areAllChecked(values)\n  await Promise.all(fieldNames.map(name => setFieldValue(name, newValue)))\n  onChange()\n}\n\nasync function toggleField(values, name, setFieldValue, onChange) {\n  await setFieldValue(name, !values[name])\n  onChange()\n}\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst StyledHeader = styled.div`\n  border: 1px solid ${({ theme }) => theme.color('background', 2)};\n  font-weight: 900;\n`\n\nconst StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: flex;\n`\n\nconst StyledListItem = styled.li`\n  margin: 0 ${({ theme }) => theme.spacing(0.5)};\n  padding: 0;\n  list-style: none;\n`\n\nconst StyledToggleButton = styled.button`\n  cursor: pointer;\n  border: none;\n  background: ${({ theme }) => theme.color('background', 0)};\n  width: 100%;\n  text-align: left;\n  font-weight: ${({ checked }) => (checked ? 600 : 300)};\n  color: ${({ theme, checked }) =>\n    theme.color(checked ? 'tertiary' : 'text', 'mid')};\n  :focus {\n    outline: none;\n  }\n  :hover {\n    background: ${({ theme }) => theme.color('background', 2, 0.5)};\n  }\n`\n\nfunction CheckboxList({\n  title,\n  fieldNames,\n  setFieldValue,\n  onChange,\n  values,\n  override = {},\n}) {\n  return (\n    <Container as={override.Container}>\n      <StyledHeader as={override.StyledHeader}>\n        <StyledToggleButton\n          onClick={() => toggleAll(values, fieldNames, setFieldValue, onChange)}\n          as={override.StyledToggleButton}\n        >\n          <Field type=\"hidden\" name=\"set-all\" value={areAllChecked(values)} />\n          <Icon type={areAllChecked(values) ? 'check' : 'uncheck'} />\n          {title}\n        </StyledToggleButton>\n      </StyledHeader>\n      <StyledList as={override.StyledList}>\n        {fieldNames.map(name => (\n          <StyledListItem key={name} as={override.StyledListItem}>\n            <StyledToggleButton\n              onClick={() => toggleField(values, name, setFieldValue, onChange)}\n              checked={values[name]}\n              as={override.StyledToggleButton}\n            >\n              <Field type=\"hidden\" name={name} value={values[name]} />\n              <Icon type={values[name] ? 'check' : 'uncheck'} />\n              {name}\n            </StyledToggleButton>\n          </StyledListItem>\n        ))}\n      </StyledList>\n    </Container>\n  )\n}\n\nCheckboxList.propTypes = {\n  fieldNames: T.arrayOf(T.string).isRequired,\n  title: T.string.isRequired,\n  setFieldValue: T.func.isRequired,\n  onChange: T.func.isRequired,\n  values: T.object.isRequired,\n  override: T.object,\n}\n\nexport default CheckboxList\n","import React, { useLayoutEffect, useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nfunction getInvertedDirection(direction) {\n  const directionInverse = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left',\n  }\n  return directionInverse[direction]\n}\n\nfunction getTickBorderColor(direction, color) {\n  const invertedDirection = getInvertedDirection(direction)\n  return `border-${invertedDirection}-color: ${color};`\n}\n\nfunction getPosition(direction, mainPosition) {\n  const isVertical = ['top', 'bottom'].includes(direction)\n  const centredSide = isVertical ? 'left' : 'top'\n\n  const centredAxis = isVertical ? 'X' : 'Y'\n\n  return `\n    ${direction}: ${mainPosition};\n    ${centredSide}: 50%;\n    transform: translate${centredAxis}(-50%);\n  `\n}\n\nfunction getTickPosition(direction, tickSize) {\n  return getPosition(direction, `-${tickSize * 2}px`)\n}\n\nfunction updateOffset(positionerRef, tickRef, containerRef, tolerance) {\n  if (!positionerRef.current || !tickRef.current || !containerRef.current)\n    return\n\n  const elemRect = positionerRef.current.getBoundingClientRect()\n  const boundsRect = containerRef.current.getBoundingClientRect()\n\n  const { marginLeft, marginTop } = positionerRef.current.style\n  const currentLeft = parseFloat(marginLeft)\n  const currentTop = parseFloat(marginTop)\n\n  const offsets = {\n    top: Math.min(0, elemRect.top - boundsRect.top - currentTop + tolerance),\n    left: Math.min(\n      0,\n      elemRect.left - boundsRect.left - currentLeft + tolerance\n    ),\n    right: Math.max(\n      0,\n      elemRect.right - boundsRect.right - currentLeft - tolerance\n    ),\n    bottom: Math.max(\n      0,\n      elemRect.bottom - boundsRect.bottom - currentTop - tolerance\n    ),\n  }\n\n  // Don't apply contradictory offsets if a big tooltip spans both edges of a small view\n  if (!(offsets.left && offsets.right)) {\n    const offset = offsets.left || offsets.right || 0\n    positionerRef.current.style.marginLeft = 0 - offset + 'px'\n    tickRef.current.style.marginLeft = offset + 'px'\n  }\n\n  if (!(offsets.top && offsets.bottom)) {\n    const offset = offsets.top || offsets.bottom || 0\n    positionerRef.current.style.marginTop = 0 - offset + 'px'\n    tickRef.current.style.marginTop = offset + 'px'\n  }\n}\n\nconst Target = styled.span`\n  position: relative;\n  display: inline-block;\n  ${({ clickToFix, isFixed, theme }) =>\n    clickToFix &&\n    `\n    cursor: pointer;\n    ${isFixed && theme.boxShadow()}\n  `}\n`\n\nconst Positioner = styled.div`\n  z-index: 15;\n  position: absolute;\n  ${({ direction, tickSize, offsets }) =>\n    getPosition(direction, `calc(100% - ${tickSize}px)`, offsets)}\n\n  // Give a little space that tolerates small mouseouts around the tick shape\n  ${({ direction, tickSize }) =>\n    `border-${direction}: ${tickSize * 2}px solid transparent`};\n`\n\nconst Content = styled.div`\n  text-align: left;\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(2)}`};\n  background: ${({ theme, getColor }) => getColor(theme)};\n  ${({ theme, isFixed }) => theme.boxShadow({ opacity: isFixed ? 0.4 : 0.2 })}\n  ${({ theme }) => theme.text('label', 'medium')}\n`\n\nconst Tick = styled.div`\n  position: absolute;\n  height: 0;\n  width: 0;\n  border-style: solid;\n  border-width: ${({ tickSize }) => tickSize}px;\n  border-color: transparent;\n  z-index: 3;\n  ${({ direction, theme, getColor }) =>\n    getTickBorderColor(direction, getColor(theme))}\n  ${({ direction, tickSize, offsets }) =>\n    getTickPosition(direction, tickSize, offsets)}\n`\n\nconst sideOptions = ['top', 'right', 'bottom', 'left']\nconst fixOnOptions = ['click', 'always', 'never']\n\nfunction Tooltip({\n  children,\n  tickSize = 8,\n  colorKey = 'background',\n  colorIndex = 0,\n  side = sideOptions[0],\n  fixOn = fixOnOptions[0],\n  content,\n  tolerance = 0,\n  containerRef = {},\n  override = {},\n}) {\n  const clickToFix = fixOn === 'click'\n  const alwaysFix = fixOn === 'always'\n  const [isFixed, setIsFixed] = useState(alwaysFix)\n  const [isShowing, setIsShowing] = useState(false)\n\n  const positionerRef = useRef()\n  const tickRef = useRef()\n  useLayoutEffect(() =>\n    updateOffset(positionerRef, tickRef, containerRef, tolerance)\n  )\n\n  if (!content) return <Target>{children}</Target>\n\n  const show = () => setIsShowing(true)\n  const hide = () => setIsShowing(false)\n  const toggleFix = () => setIsFixed(!isFixed)\n  const stopPropagation = e => e.stopPropagation()\n\n  const direction = getInvertedDirection(side)\n  const getColor = theme => theme.color(colorKey, colorIndex)\n\n  return (\n    <Target\n      onMouseEnter={show}\n      onMouseLeave={hide}\n      onClick={clickToFix ? toggleFix : null}\n      clickToFix={clickToFix}\n      isFixed={isFixed}\n      as={override.Target}\n    >\n      {children}\n      {(isFixed || isShowing) && (\n        <Positioner\n          style={{ marginLeft: 0, marginTop: 0 }}\n          onClick={clickToFix ? stopPropagation : null}\n          direction={direction}\n          tickSize={tickSize}\n          ref={positionerRef}\n          as={override.Positioner}\n        >\n          <Tick\n            direction={direction}\n            tickSize={tickSize}\n            getColor={getColor}\n            ref={tickRef}\n            as={override.Tick}\n          />\n          <Content getColor={getColor} isFixed={isFixed} as={override.Content}>\n            {content}\n          </Content>\n        </Positioner>\n      )}\n    </Target>\n  )\n}\n\nTooltip.propTypes = {\n  children: T.node.isRequired,\n  tickSize: T.number,\n  colorKey: T.string,\n  colorIndex: T.number,\n  side: T.oneOf(sideOptions),\n  fixOn: T.oneOf(fixOnOptions),\n  content: T.node,\n  tolerance: T.number,\n  override: T.object,\n  containerRef: T.object,\n}\n\nexport default Tooltip\n","import React, { useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { Field } from 'formik'\n\nimport Icon from '../../Icon'\nimport Tooltip from '../../Tooltip'\n\nconst CONTROL_WIDTH = 16\nconst BAR_HEIGHT = 12\nconst WIDTH = 340\n\nconst Container = styled.div`\n  padding: ${({ theme }) => `${theme.spacing(3)} ${theme.spacing(2)} 0`};\n  user-select: none;\n  width: ${({ width }) => width}px;\n`\n\nconst Bar = styled.div`\n  background: ${({ theme }) => theme.color('background')};\n  border-radius: ${({ theme }) => theme.spacing()};\n  border: 2px solid ${({ theme }) => theme.color('background', 2)};\n  height: ${BAR_HEIGHT}px;\n  display: flex;\n  position: relative;\n  cursor: pointer;\n`\n\nconst ActiveSection = styled.div`\n  flex-grow: 1;\n  background: ${({ theme }) => theme.color('primary', 1)};\n  height: 100%;\n  border-radius: ${({ theme }) => theme.spacing()};\n  user-select: none;\n`\nconst InactiveSection = styled.div`\n  height: 100%;\n  user-select: none;\n`\n\nconst Control = styled.div`\n  position: absolute;\n  width: ${({ width }) => width}px;\n  height: ${({ width }) => width}px;\n  margin-top: -${BAR_HEIGHT / 2}px;\n  border-radius: ${({ width, isLower, isUpper }) =>\n    `${!isUpper ? `${width}px ` : '0 '} ${\n      !isLower ? `${width}px ${width}px ` : '0 0 '\n    } ${!isUpper ? `${width}px` : '0'}`};\n  border: 2px solid ${({ theme }) => theme.color('background', 2)};\n  background: ${({ theme }) => theme.color('primary')};\n  text-align: center;\n  cursor: col-resize;\n  ${({ theme }) => theme.boxShadow()}\n  ${({ isLower }) => isLower && `margin-left: 2px;`}\n  ${({ isUpper, width }) => isUpper && `margin-left: ${width - 2}px;`}\n`\n\nconst NumberFieldsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: ${({ theme }) => theme.spacing()};\n  margin-top: ${({ theme }) => theme.spacing()};\n`\n\nconst NumberInput = styled.input`\n  font-family: 'plex-mono';\n  background: ${({ theme }) => theme.color('background', 1)};\n  padding: ${({ theme }) =>\n    `${theme.spacing(0.5)} 0 ${theme.spacing(0.5)} ${theme.spacing(8)}`};\n  font-weight: 400;\n  color: ${({ theme, isDefault }) =>\n    theme.color(isDefault ? 'text' : 'highlight', 1)};\n  :focus {\n    font-weight: 800;\n  }\n`\n\nconst NumberLabelWrapper = styled.span`\n  display: inline-block;\n  position: relative;\n`\n\nconst NumberLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  padding: ${({ theme }) => theme.spacing(0.5)};\n`\n\nfunction getMouseX(event, containerRef) {\n  return (\n    event.nativeEvent.clientX -\n    containerRef.current.getBoundingClientRect().left\n  )\n}\n\nfunction getMousePosition(mouseX, width) {\n  return mouseX / width\n}\n\nfunction getStepPosition(stepIndex, min, max, steps) {\n  const stepIndexWithinMin = Math.max(stepIndex, min)\n  if (!stepIndexWithinMin) return 0\n  return Math.min(stepIndexWithinMin, max) / steps\n}\n\nfunction getStepIndex(position, steps) {\n  const nearestStepIndex = Math.round(steps * position)\n  return nearestStepIndex\n}\n\nfunction getNearestFieldName(\n  mousePosition,\n  position,\n  upperPosition,\n  fieldNames\n) {\n  const lowerDistance = Math.abs(mousePosition - position)\n  const upperDistance = Math.abs(mousePosition - upperPosition)\n  const fieldIndex = lowerDistance < upperDistance ? 0 : 1\n\n  return fieldNames[fieldIndex]\n}\n\nfunction Slider({\n  min = 0,\n  max,\n  steps,\n  stepInterval = 1,\n  onChange,\n  fieldNames = ['index'],\n  values,\n  setFieldValue,\n  controlWidth = CONTROL_WIDTH,\n  width = WIDTH,\n  override = {},\n  tooltipProps = {},\n}) {\n  /**\n   *** Props, validation, settings\n   **/\n\n  if (fieldNames.length > 2) {\n    throw new Error(\n      `Slider supports up to 2 fields, received ${fieldNames.length}`\n    )\n  }\n  // If isRange, Slider has two control points, showing range between them, for example:\n  // isRange === true    |------<====>---| values = { min: 7, max: 12 }\n  // isRange === false   |======>--------| values = { index: 7 }\n  const isRange = fieldNames.length === 2\n\n  if (!steps) {\n    // e.g. if highest value is 4.3 mb, stepInterval every 500kb => 9 steps, max is 4.5 mb\n    steps = Math.ceil(max / stepInterval)\n    max = steps * stepInterval\n  }\n\n  /**\n   *** Hooks, state, `position` and `stepIndex`\n   **/\n\n  const containerRef = useRef()\n  const lowerInputRef = useRef()\n  const upperInputRef = useRef()\n\n  const [fieldIsSliding, setFieldSliding] = useState('')\n\n  // Statefully store temporarily-invalid input while a user types,\n  // e.g. if the lower end of a range is \"5\", the upper end is \"12\",\n  // store the (invalid) \"1\" when user deletes \"2\" while typing \"14\"\n  const [lowerNumberInput, setLowerNumberInput] = useState(null)\n  const [upperNumberInput, setUpperNumberInput] = useState(null)\n\n  // If a `value` has no defined number, use the current default based on min/max, so it changes if min/max change\n  const lowerStepIndex =\n    typeof values[fieldNames[0]] === 'number'\n      ? values[fieldNames[0]]\n      : isRange\n      ? min\n      : max\n  const upperStepIndex =\n    isRange &&\n    (typeof values[fieldNames[1]] === 'number' ? values[fieldNames[1]] : max)\n\n  // Position is a decimal number >=0 <=1 representing the % distance along the slider\n  const lowerPosition = getStepPosition(lowerStepIndex, min, max, steps)\n  const upperPosition = isRange\n    ? getStepPosition(upperStepIndex, min, max, steps)\n    : null\n\n  const getValidatedIndex = (stepIndex, fieldName) => {\n    const isLower = isRange && fieldName === fieldNames[0]\n    if (isLower) {\n      if (stepIndex <= min) return ['', false] // Follows `min` if it changes\n      if (stepIndex >= upperStepIndex) return [upperStepIndex, false] // Don't cross over\n      return [stepIndex, true]\n    }\n\n    if (stepIndex >= max) return ['', false] // Follows `max` if it changes\n    if (isRange && stepIndex <= lowerStepIndex) return [lowerStepIndex, false] // Don't cross over\n    return [stepIndex, true]\n  }\n\n  /**\n   *** User interaction handlers\n   **/\n\n  const slideStart = (event, fieldName) => {\n    event.stopPropagation()\n    setFieldSliding(fieldName)\n  }\n  const slideEnd = () => {\n    setFieldSliding('')\n  }\n  const handleMouseMove = (event, fieldName = fieldIsSliding) => {\n    if (!fieldName) return\n    const mouseX = getMouseX(event, containerRef)\n    const position = getMousePosition(mouseX, width)\n\n    const stepIndex = getStepIndex(position, steps)\n    handleChange(stepIndex, fieldName)\n  }\n  const handleClick = async event => {\n    let fieldName = fieldNames[0]\n    if (isRange) {\n      const mouseX = getMouseX(event, containerRef)\n      const mousePosition = getMousePosition(mouseX, width)\n      fieldName = getNearestFieldName(\n        mousePosition,\n        lowerPosition,\n        upperPosition,\n        fieldNames\n      )\n    }\n    handleMouseMove(event, fieldName)\n  }\n  const handleNumberInput = (event, fieldName) => {\n    const stepIndex = parseInt(event.target.value)\n    if (isNaN(stepIndex)) {\n      updateNumberInput(fieldName, '')\n    } else {\n      handleChange(stepIndex, fieldName)\n    }\n  }\n  const handleChange = (stepIndex, fieldName) => {\n    const [newValue, wasValid] = getValidatedIndex(stepIndex, fieldName)\n    updateFieldValue(fieldName, newValue)\n\n    // If stepIndex was invalid, allow number input to keep it while user types\n    const numberInputValue = wasValid ? null : stepIndex\n    updateNumberInput(fieldName, numberInputValue)\n  }\n  const updateFieldValue = async (fieldName, stepIndex) => {\n    if (stepIndex !== values[fieldName]) {\n      await setFieldValue(fieldName, stepIndex)\n      onChange()\n    }\n  }\n  const updateNumberInput = (fieldName, stepIndex) => {\n    const isUpper = isRange && fieldName === 'max'\n    const setNumberInput = isUpper ? setUpperNumberInput : setLowerNumberInput\n    const numberInputRef = isUpper ? upperInputRef : lowerInputRef\n\n    const isInFocus = document.activeElement === numberInputRef.current\n\n    // Only set number input state while input is in focus\n    setNumberInput(isInFocus ? stepIndex : null)\n  }\n\n  /**\n   *** Styling and inline style calculation\n   **/\n\n  const belowPercent = `${Math.round(lowerPosition * 100)}%`\n  const abovePercent = `${Math.round(\n    (1 - (isRange ? upperPosition : lowerPosition)) * 100\n  )}%`\n\n  const controlOffset = `calc(${belowPercent} - ${controlWidth}px)`\n  const upperControlOffset =\n    isRange && `calc(${Math.round(upperPosition * 100)}% - ${controlWidth}px)`\n\n  const FirstSection = isRange ? InactiveSection : ActiveSection\n\n  return (\n    <Container\n      onMouseUp={slideEnd}\n      onMouseLeave={slideEnd}\n      onMouseMove={handleMouseMove}\n      width={width}\n      controlWidth={controlWidth}\n      as={override.Container}\n    >\n      <Bar\n        onClick={handleClick}\n        controlWidth={controlWidth}\n        as={override.Bar}\n        ref={containerRef}\n      >\n        <FirstSection\n          style={{ width: belowPercent }}\n          as={override.FirstSection}\n        />\n        <Tooltip {...tooltipProps}>\n          <Control\n            style={{ left: controlOffset }}\n            width={controlWidth}\n            onMouseDown={event => slideStart(event, fieldNames[0])}\n            isLower={isRange}\n            as={override.Control}\n          >\n            <Field\n              type=\"hidden\"\n              name={fieldNames[0]}\n              value={values[fieldNames[0]]}\n            />\n          </Control>\n        </Tooltip>\n        {isRange && (\n          <>\n            <ActiveSection as={override.ActiveSection} />\n            <Tooltip {...tooltipProps}>\n              <Control\n                style={{ left: upperControlOffset }}\n                width={controlWidth}\n                onMouseDown={event => slideStart(event, fieldNames[1])}\n                isUpper={isRange}\n                as={override.Control}\n              >\n                <Field\n                  type=\"hidden\"\n                  name={fieldNames[1]}\n                  value={values[fieldNames[1]]}\n                />\n              </Control>\n            </Tooltip>\n          </>\n        )}\n        <InactiveSection\n          style={{ width: abovePercent }}\n          as={override.InactiveSection}\n        />\n      </Bar>\n      <NumberFieldsWrapper as={override.NumberFieldsWrapper}>\n        <NumberLabelWrapper as={override.NumberLabelWrapper}>\n          {isRange && <NumberLabel as={override.NumberLabel}>Min:</NumberLabel>}\n          <NumberInput\n            type=\"number\"\n            ref={lowerInputRef}\n            step={stepInterval}\n            isDefault={typeof values[fieldNames[0]] !== 'number'}\n            min={min}\n            max={max}\n            value={\n              lowerNumberInput !== null ? lowerNumberInput : lowerStepIndex\n            }\n            onChange={event => handleNumberInput(event, fieldNames[0])}\n            onBlur={() => updateNumberInput(fieldNames[0], null)}\n            as={override.NumberInput}\n          />\n          <Icon\n            type=\"cancel\"\n            onClick={() => updateFieldValue(fieldNames[0], '')}\n            active={typeof values[fieldNames[0]] === 'number'}\n            disabled={typeof values[fieldNames[0]] !== 'number'}\n          />\n        </NumberLabelWrapper>\n        {isRange && (\n          <NumberLabelWrapper as={override.NumberLabelWrapper}>\n            <NumberLabel as={override.NumberLabel}>Max:</NumberLabel>\n            <NumberInput\n              type=\"number\"\n              ref={upperInputRef}\n              step={stepInterval}\n              isDefault={typeof values[fieldNames[1]] !== 'number'}\n              min={min}\n              max={max}\n              value={\n                upperNumberInput !== null ? upperNumberInput : upperStepIndex\n              }\n              onChange={event => handleNumberInput(event, fieldNames[1])}\n              onBlur={() => updateNumberInput(fieldNames[1], null)}\n              as={override.NumberInput}\n            />\n            <Icon\n              type=\"cancel\"\n              onClick={() => updateFieldValue(fieldNames[1], '')}\n              active={typeof values[fieldNames[1]] === 'number'}\n              disabled={typeof values[fieldNames[1]] !== 'number'}\n            />\n          </NumberLabelWrapper>\n        )}\n      </NumberFieldsWrapper>\n    </Container>\n  )\n}\n\nSlider.propTypes = {\n  onChange: T.func.isRequired,\n  values: T.object.isRequired,\n  setFieldValue: T.func.isRequired,\n  fieldNames: T.array,\n  min: T.number,\n  max: T.number,\n  steps: T.number,\n  stepInterval: T.number,\n  controlWidth: T.number,\n  width: T.number,\n  override: T.object,\n  tooltipProps: T.object,\n}\n\nexport default Slider\n","import styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  padding: ${({ theme }) => `${theme.spacing(0.5)} ${theme.spacing()}`};\n  position: relative;\n  z-index: 5;\n  cursor: pointer;\n  font-weight: bold;\n  white-space: nowrap;\n  &:focus {\n    outline: none;\n  }\n  ${({ theme, isActive }) => {\n    return `\n      background: ${theme.color(isActive ? 'highlight' : 'background')};\n      border: 1px solid ${theme.color('highlight')};\n      color: ${theme.color(isActive ? 'text' : 'highlight', isActive ? 3 : 0)};\n    `\n  }}\n`\n\nexport default StyledButton\n","// Temporary function for temp tooltip placeholder - flattens jsx-ified template strings\n// Remove this as soon as it's not needed\nfunction childrenToString(children) {\n  if (typeof children === 'string') return children\n  if (Array.isArray(children)) return children.join('')\n  if (!children) return ''\n}\n\nfunction copyToClipboard(text) {\n  // TODO: expand this and include a toast notice on success\n  navigator.clipboard.writeText(text)\n}\n\n// d3 data processors can fail very late if NaN or similar creep in.\n// Use this to fail early in memoised or non-perf-intensive functions.\nfunction validateNumbers(obj) {\n  const errors = Object.entries(obj).reduce(\n    (errors, [key, num]) =>\n      isNaN(num)\n        ? [...errors, `${key} is not numeric, is ${typeof num}: ${num}`]\n        : errors,\n    []\n  )\n\n  if (errors.length) throw new Error(errors.join('\\n\\n '))\n}\n\nexport { childrenToString, copyToClipboard, validateNumbers }\n","import { parseArrayBuffer } from '@libp2p-observer/data'\n\nfunction uploadDataFile(file, onUploadStart, onDataLoaded) {\n  if (!file) return\n  const reader = new FileReader()\n\n  // TODO: On integration with live output, share logic parsing file chunk by chunk\n  reader.onload = e => {\n    const metadata = {\n      type: 'upload',\n      name: file.name,\n    }\n\n    processUploadedData(\n      event.currentTarget.result,\n      file,\n      onDataLoaded,\n      metadata\n    )\n  }\n\n  reader.readAsArrayBuffer(file)\n  if (onUploadStart) onUploadStart(file)\n}\n\nasync function applySampleData(samplePath, onUploadStart, onDataLoaded) {\n  if (onUploadStart) onUploadStart()\n\n  const response = await fetch(samplePath)\n\n  if (!response.ok) {\n    const { status, statusText, url } = response\n    throw new Error(`${status} \"${statusText}\" fetching data from ${url}`)\n  }\n\n  const arrbuf = await response.arrayBuffer()\n\n  const metadata = {\n    type: 'sample',\n    name: 'Sample data',\n  }\n\n  processUploadedData(arrbuf, response, onDataLoaded, metadata)\n}\n\nfunction processUploadedData(arrayBuf, file, onDataLoaded, metadata) {\n  const data = parseArrayBuffer(arrayBuf)\n\n  if (metadata && data.states) data.states.metadata = metadata\n\n  if (onDataLoaded) onDataLoaded(data, file)\n}\n\nexport { uploadDataFile, processUploadedData, applySampleData }\n","function padZero(num) {\n  return num.toLocaleString(undefined, { minimumIntegerDigits: 2 })\n}\n\nfunction pluralize(num, str, irregularPlural = '') {\n  if (num === 1) return str\n  return irregularPlural || `${str}s`\n}\n\nfunction formatNumber(num, units, sigFigures = 3) {\n  const [unit, divider, irregularPlural] =\n    units.find(([_, divider]) => num >= divider) || units[units.length - 1]\n\n  const value = num / divider\n  const formattedValue = sigFigures ? value.toPrecision(sigFigures) : value\n\n  return [formattedValue, unit, divider, irregularPlural]\n}\n\nfunction _formatNumberRecursion(num, units, maxRecursions) {\n  maxRecursions--\n\n  // e.g. 100.6 seconds, 2 maxRecursions ==> \"1 minute 41 seconds\"; \"2 minutes\" with 1\n  const rounding = maxRecursions ? 'floor' : 'round'\n\n  const [unitsFloat, unit, perUnit, irregularPlural] = formatNumber(\n    num,\n    units,\n    null\n  )\n\n  const unitsInt = Math[rounding](unitsFloat)\n  const segment = `${unitsInt} ${pluralize(unitsInt, unit, irregularPlural)}`\n\n  if (!maxRecursions) return segment\n\n  const remainder = num - unitsInt * perUnit\n  const nextSegment = _formatNumberRecursion(remainder, units, maxRecursions)\n  return nextSegment ? `${segment}, ${nextSegment}` : segment\n}\n\nfunction formatDuration(ms, maxRecursions = 2) {\n  const units = [\n    ['day', 86400000],\n    ['hour', 3600000],\n    ['minute', 60000],\n    ['second', 1000],\n    ['ms', 1, 'ms'],\n  ]\n\n  return _formatNumberRecursion(ms, units, maxRecursions)\n}\n\nfunction formatDataSize(num) {\n  if (num === 0) return ['0']\n\n  const units = [\n    ['pb', 1e15],\n    ['tb', 1e12],\n    ['gb', 1e9],\n    ['mb', 1e6],\n    ['kb', 1e3],\n    ['bytes', 1],\n  ]\n  return formatNumber(num, units)\n}\n\nfunction formatTime(timestamp) {\n  const time = new Date(timestamp)\n  const hr = padZero(time.getHours())\n  const min = padZero(time.getMinutes())\n  const sec = padZero(time.getSeconds())\n  return `${hr}:${min}:${sec}`\n}\n\nexport {\n  formatDataSize,\n  formatNumber,\n  formatTime,\n  formatDuration,\n  padZero,\n  pluralize,\n}\n","import React, { useContext, useState } from 'react'\nimport T from 'prop-types'\n\nimport { applySampleData } from '../../utils'\nimport { DataContext, SetterContext } from '@libp2p-observer/sdk'\n\nimport StyledButton from './StyledButton'\n\nfunction SampleDataButton({ title, samplePath }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const { dispatchDataset } = useContext(SetterContext)\n  const dataset = useContext(DataContext)\n\n  function handleButtonPress() {\n    if (dataset.isSample) {\n      dispatchDataset({\n        action: 'remove',\n      })\n      return\n    }\n\n    applySampleData(samplePath, handleUploadStart, handleDataLoaded)\n  }\n\n  function handleUploadStart() {\n    setIsLoading(true)\n  }\n\n  function handleDataLoaded(data) {\n    data.isSample = true\n\n    dispatchDataset({\n      action: 'replace',\n      data,\n    })\n    setIsLoading(false)\n  }\n\n  const buttonText =\n    (isLoading && 'Loading...') ||\n    (dataset.isSample && 'Remove sample') ||\n    title\n\n  return (\n    <StyledButton\n      onClick={handleButtonPress}\n      isActive={isLoading || dataset.isSample}\n    >\n      {buttonText}\n    </StyledButton>\n  )\n}\n\nSampleDataButton.propTypes = {\n  title: T.string.isRequired,\n  samplePath: T.string.isRequired,\n}\n\nexport default SampleDataButton\n","import React, { useContext, useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { uploadDataFile } from '../../utils'\nimport { SetterContext } from '../context/DataProvider'\n\nimport StyledButton from './StyledButton'\n\nconst FileButton = styled(StyledButton)`\n  position: relative;\n  z-index: 5;\n`\nconst NativeFileInput = styled.input`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n`\nconst RelativeSpan = styled.span`\n  position: relative;\n`\n\nfunction getButtonText(isLoading, fileName, title) {\n  if (isLoading) return 'Loading...'\n  return fileName ? `Replace file '${fileName}'` : title\n}\n\nfunction UploadDataButton({ title }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const { dispatchDataset } = useContext(SetterContext)\n  const fileInputRef = useRef()\n\n  function handleClick() {\n    fileInputRef.current.click()\n  }\n\n  function handleUpload(event) {\n    const file = event.target.files[0]\n    uploadDataFile(file, handleUploadStart, handleDataLoaded)\n  }\n\n  function handleUploadStart() {\n    setIsLoading(true)\n  }\n\n  function handleDataLoaded(data, file) {\n    dispatchDataset({\n      action: 'replace',\n      data,\n    })\n    setIsLoading(false)\n    setFileName(file.name)\n  }\n\n  const buttonText = getButtonText(isLoading, fileName, title)\n\n  return (\n    <RelativeSpan>\n      <FileButton onClick={handleClick}>{buttonText}</FileButton>\n      <NativeFileInput\n        ref={fileInputRef}\n        type=\"file\"\n        name=\"file\"\n        onChange={handleUpload}\n      />\n    </RelativeSpan>\n  )\n}\n\nUploadDataButton.propTypes = {\n  title: T.string.isRequired,\n}\n\nexport default UploadDataButton\n","import styled from 'styled-components'\n\n// TODO: develop these placeholders further\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`\n\nconst TableRow = styled.tr`\n  border-bottom: 2px solid ${({ theme }) => theme.color('background', 1)};\n  ${({ highlighted, theme }) =>\n    highlighted\n      ? `background-color: ${theme.color('background', 2, 0.5)};`\n      : ''}\n`\n\nconst TableHead = styled.th`\n  ${({ theme }) => theme.styles.tableCell}\n  padding-right: 0;\n  font-family: plex-sans;\n  font-weight: 600;\n  border-bottom: 1px solid ${({ theme }) => theme.color('background', 2)};\n  background-color: ${({ theme }) => theme.color('secondary', 1, 0.2)};\n  color: ${({ theme }) => theme.color('text', 0, 0.6)};\n  text-transform: uppercase;\n  white-space: nowrap;\n`\n\nconst TableCell = styled.td`\n  ${({ theme }) => theme.styles.tableCell}\n  font-size: 9pt;\n  padding-right: ${({ theme }) => theme.spacing(4)};\n  font-weight: 400;\n  font-family: plex-sans;\n  color: ${({ theme }) => theme.color('text', 1)};\n  ${({ align }) => align && `text-align: ${align};`}\n`\n\n// Provide unstyled styled-components so users can provide overrides using `as`\nconst THead = styled.thead``\nconst THeadRow = styled.tr``\nconst TBody = styled.tbody``\n\nexport { Table, TableRow, TableHead, TableCell, THead, THeadRow, TBody }\n","import React, { useMemo } from 'react'\nimport T from 'prop-types'\n\nimport { TableRow, TableCell } from './styledTable'\n\nfunction DataTableRow({ rowContentProps, columnDefs, ...rowProps }) {\n  // Don't re-render all cells (often expensive) when only row props change\n  const prerenderedCells = useMemo(\n    () => (\n      <>\n        {columnDefs.map(\n          ({ renderContent, name, cellProps = {} }, cellIndex) => {\n            return (\n              <TableCell key={name} {...cellProps}>\n                {renderContent(rowContentProps[cellIndex])}\n              </TableCell>\n            )\n          }\n        )}\n      </>\n    ),\n    [rowContentProps, columnDefs]\n  )\n\n  return <TableRow {...rowProps}>{prerenderedCells}</TableRow>\n}\n\nDataTableRow.propTypes = {\n  rowContentProps: T.array.isRequired,\n  columnDefs: T.array.isRequired,\n}\n\nexport default DataTableRow\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { Formik } from 'formik'\nimport isEqual from 'lodash.isequal'\n\nimport Icon from '../Icon'\n\nconst Container = styled.span`\n  display: inline-block;\n`\n\nconst AccordionContent = styled.div`\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n  position: absolute;\n  top: ${({ theme }) => theme.spacing(4)};\n  left: 0;\n  padding: ${({ theme }) => theme.spacing()};\n  background: ${({ theme }) => theme.color('background', 1, 0.8)};\n  z-index: 20;\n`\n\nfunction FilterButton({\n  addFilter,\n  removeFilter,\n  FilterUi,\n  initialFieldValues,\n  mapValues,\n  filterUiProps,\n  name,\n}) {\n  const [isOpen, setIsOpen] = useState(false)\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  const initialValues = Object.fromEntries(initialFieldValues)\n\n  const handleChange = newValues => {\n    if (isEqual(initialValues, newValues)) {\n      removeFilter()\n    } else {\n      addFilter(newValues)\n    }\n  }\n\n  const fieldNames = [...initialFieldValues.keys()]\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { setSubmitting }) => {\n        handleChange(values)\n        setSubmitting(false)\n      }}\n      enableReinitialize\n    >\n      {({ values, setFieldValue, submitForm, dirty }) => (\n        <Container>\n          <Icon type=\"filter\" onClick={toggleOpen} active={dirty} offset />\n          <AccordionContent isOpen={isOpen}>\n            <FilterUi\n              // 'Hard' enableReinitialize: remount when initialValues changes\n              // key={JSON.stringify(initialValues)}\n              onChange={submitForm}\n              values={values}\n              setFieldValue={setFieldValue}\n              fieldNames={fieldNames}\n              title={name}\n              {...filterUiProps}\n            />\n          </AccordionContent>\n        </Container>\n      )}\n    </Formik>\n  )\n}\n\nFilterButton.propTypes = {\n  addFilter: T.func.isRequired,\n  removeFilter: T.func.isRequired,\n  FilterUi: T.elementType.isRequired,\n  initialFieldValues: T.instanceOf(Map),\n  mapValues: T.func,\n  filterUiProps: T.object,\n  name: T.string,\n}\n\nexport default FilterButton\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { TableHead } from './styledTable'\nimport FilterButton from '../input/FilterButton'\nimport Icon from '../Icon'\n\nconst ButtonsTray = styled.span`\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  margin-left: ${({ theme }) => theme.spacing(2)};\n`\n\nfunction getSortType(isSortable, isSorted, sortDirection) {\n  if (!isSortable) return null\n  if (!isSorted) return 'sort'\n  return sortDirection\n}\n\nfunction DataTableHead({\n  columnDef,\n  cellIndex,\n  sortColumn,\n  setSortColumn,\n  sortDirection,\n  setSortDirection,\n  ...props\n}) {\n  const isSortable = !!columnDef.sort\n  const isSorted = isSortable && sortColumn === columnDef.name\n  const isFilterable = !!columnDef.filter\n\n  const sortIconType = getSortType(isSortable, isSorted, sortDirection)\n\n  const sortIconAction = () => {\n    if (sortIconType === 'sort') {\n      setSortColumn(columnDef.name)\n      const defaultSortDirection = columnDef.sort.defaultDirection\n      if (sortDirection !== defaultSortDirection)\n        setSortDirection(defaultSortDirection)\n      return\n    }\n    setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')\n  }\n\n  return (\n    <TableHead\n      key={columnDef.name}\n      sortable={isSortable}\n      sortDirection={isSorted ? sortDirection : null}\n      filterable={isFilterable}\n      {...props}\n    >\n      {columnDef.header}\n      <ButtonsTray>\n        {isSortable && (\n          <>\n            <Icon\n              type={sortIconType}\n              active={sortIconType !== 'sort'}\n              onClick={() => sortIconAction()}\n              offset\n            />\n          </>\n        )}\n        {isFilterable && (\n          <>\n            <FilterButton {...columnDef.filter} />\n          </>\n        )}\n      </ButtonsTray>\n    </TableHead>\n  )\n}\n\nDataTableHead.propTypes = {\n  columnDef: T.object.isRequired,\n  cellIndex: T.number.isRequired,\n  sortColumn: T.string,\n  setSortColumn: T.func,\n  sortDirection: T.string,\n  setSortDirection: T.func,\n  filters: T.array,\n}\n\nexport default DataTableHead\n","import React from 'react'\nimport T from 'prop-types'\n\nimport DefaultDataTableRow from './DataTableRow'\nimport DefaultDataTableHead from './DataTableHead'\nimport { Table, THead, THeadRow, TBody } from './styledTable'\n\nfunction DataTable({\n  contentProps,\n  columnDefs,\n  sortColumn,\n  setSortColumn,\n  sortDirection,\n  setSortDirection,\n  override = {},\n}) {\n  const DataTableRow = override.DataTableRow || DefaultDataTableRow\n  const DataTableHead = override.DataTableHead || DefaultDataTableHead\n  return (\n    <Table as={override.TableHead}>\n      <THead as={override.THead}>\n        <THeadRow as={override.THeadRow}>\n          {columnDefs.map((columnDef, cellIndex) => (\n            <DataTableHead\n              key={columnDef.name}\n              columnDef={columnDef}\n              cellIndex={cellIndex}\n              sortColumn={sortColumn}\n              setSortColumn={setSortColumn}\n              sortDirection={sortDirection}\n              setSortDirection={setSortDirection}\n            />\n          ))}\n        </THeadRow>\n      </THead>\n      <TBody as={override.TBody}>\n        {contentProps.map((rowContentProps, rowIndex) => (\n          <DataTableRow\n            key={`row_${rowIndex}`}\n            rowContentProps={rowContentProps}\n            columnDefs={columnDefs}\n          />\n        ))}\n      </TBody>\n    </Table>\n  )\n}\n\nDataTable.propTypes = {\n  contentProps: T.array.isRequired,\n  columnDefs: T.array.isRequired,\n  columnMetadata: T.array,\n  TableRow: T.any,\n  TableHead: T.any,\n  sortColumn: T.string,\n  setSortColumn: T.func,\n  sortDirection: T.string,\n  setSortDirection: T.func,\n  override: T.object,\n}\n\nexport default DataTable\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { formatDataSize } from '../../utils/formats'\n\nconst NumWrapper = styled.span`\n  font-family: 'plex-mono';\n  white-space: nowrap;\n`\n\nconst Unit = styled.span`\n  // Use cell right padding for units, aligning with icons\n  margin-right: -${({ theme }) => theme.spacing()};\n  padding-left: ${({ theme }) => theme.spacing()};\n  font-family: 'plex-sans';\n  font-weight: 300;\n  font-size: 90%;\n  width: ${({ theme }) => theme.spacing(4)};\n  display: inline-block;\n  text-align: left;\n`\n\nfunction FormatedNumber({ value, unit = '' }) {\n  if (parseInt(value) === 0) {\n    return (\n      <NumWrapper>\n        {0}\n        <Unit />\n      </NumWrapper>\n    )\n  }\n\n  return (\n    <NumWrapper>\n      {value}\n      <Unit>{unit}</Unit>\n    </NumWrapper>\n  )\n}\n\nFormatedNumber.propTypes = {\n  value: T.oneOfType([T.number, T.string]).isRequired,\n  unit: T.string,\n}\n\nfunction TimeNumber({ value }) {\n  return <FormatedNumber value={value} unit=\"s\" />\n}\n\nTimeNumber.propTypes = {\n  value: T.number.isRequired,\n}\n\nfunction DataNumber({ value }) {\n  const [formattedValue, unit] = formatDataSize(value)\n  return <FormatedNumber value={formattedValue} unit={unit} />\n}\n\nDataNumber.propTypes = {\n  value: T.number.isRequired,\n}\n\nexport { TimeNumber, DataNumber }\n","import React, { useMemo } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport ColorHash from 'color-hash'\nconst colorHash = new ColorHash()\n\nconst SvgContainer = styled.svg`\n  width: 2em;\n  height: 2em;\n  vertical-align: middle;\n`\n\nfunction getColors(peerId) {\n  const quarter = Math.floor(peerId.length / 4)\n  const half = Math.floor(peerId.length / 2)\n  const colors = [\n    colorHash.hex(peerId.slice(0, quarter)),\n    colorHash.hex(peerId.slice(quarter + 1, 2 * quarter)),\n    colorHash.hex(peerId.slice(2 * quarter + 1, 3 * quarter)),\n    colorHash.hex(peerId.slice(3 * quarter + 1, 4 * quarter)),\n    colorHash.hex(peerId.slice(0, half)),\n    colorHash.hex(peerId.slice(half + 1, 2 * half)),\n    colorHash.hex(peerId),\n  ]\n  return colors\n}\n\n// SVG src in theme/graphics-src\nfunction PeerIdAvatar({ peerId, ...props }) {\n  const colors = useMemo(() => getColors(peerId), [peerId])\n\n  return (\n    <SvgContainer viewBox=\"0 0 32 32\" {...props}>\n      <path\n        fill={colors[0]}\n        d=\"M26.861 9.752l-.364.201-10.356 5.783v.197l-.055.033 10.518 6.165.257-.153V9.752\"\n      />\n      <path\n        fill={colors[1]}\n        d=\"M15.998 16.104L5.482 22.272l10.516 6.163V16.104M5.093 9.815v12.226l.14.083V9.893l-.14-.078\"\n      />\n      <path\n        fill={colors[2]}\n        d=\"M16.086 16.055l-.088.049v12.332l10.606-6.216-10.518-6.165m10.824-6.24l-.049.026v12.226l.049-.026V9.815\"\n      />\n      <path\n        fill={colors[3]}\n        d=\"M5.232 9.893v12.231l.25.148 10.516-6.168v-.101l-.042-.028v-.097L5.414 9.994l-.182-.101\"\n      />\n      <path\n        fill={colors[4]}\n        d=\"M16.141 3.854v11.902l10.356-5.713.364-.201-1.808-1.07-8.912-4.918m-.185-.103v.148l.133-.075-.133-.073\"\n      />\n      <path\n        fill={colors[5]}\n        d=\"M15.956 3.899L5.232 9.815v.078l.182.101 10.542 5.814V3.899m.185-.103l-.052.028.052.029v-.057\"\n      />\n      <path\n        fill={colors[6]}\n        d=\"M11.664 18.348v-4.816l4.338-2.563 3.866 2.285.468.26v4.836l-4.334 2.541z\"\n      />\n      <path\n        fill=\"#FFF\"\n        d=\"M27.689 9.753c0-.001-.002-.003-.002-.007-.001-.062-.032-.115-.047-.175-.009-.021-.01-.044-.018-.065-.067-.19-.178-.364-.36-.465l-1.756-.969-.028-.018-.012-.005-9.046-5.346c-.032-.019-.066-.021-.101-.036-.054-.022-.107-.045-.166-.057-.052-.01-.103-.01-.156-.01s-.104 0-.157.01a.787.787 0 00-.159.055c-.037.015-.074.018-.107.037l-10.86 6.42a.831.831 0 00-.408.73.791.791 0 00.095.33v12.235c0 .298.16.574.418.72.029.017.063.014.094.027l10.471 6.138c.199.118.434.114.651.053a.815.815 0 00.558-.078l10.45-6.126c.08-.017.163-.02.234-.063a.828.828 0 00.418-.72V9.77c-.001-.007-.006-.01-.006-.017zm-10.715-4.49l7.661 4.229.551.325-4.913 2.71-3.299-1.949V5.263zm-1.85.046v5.214l-3.394 2.004-4.846-2.673 8.24-4.545zm-9.06 6.002l4.768 2.661v4.197l-4.768 2.796v-9.654zm8.907 15.822L6.933 22.42l5.016-2.94 3.022 1.772v5.881zm1.031-7.207l-3.506-2.057V14.006l.926-.546.318-.187 2.262-1.336 3.502 2.066V17.872L17.753 18.9l-.75.439-1.001.587zm1.001 7.18V21.27l3.146-1.846 4.981 2.919-8.127 4.763zm9.026-6.188l-4.861-2.85v-4.096l4.861-2.715v9.661z\"\n      />\n    </SvgContainer>\n  )\n}\n\nPeerIdAvatar.propTypes = {\n  peerId: T.string,\n}\n\nexport default PeerIdAvatar\n","function getTruncatedPeerId(peerId) {\n  const truncationLength = 5\n  return peerId.slice(peerId.length - truncationLength)\n}\n\nexport { getTruncatedPeerId }\n","import React, { useContext, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport Tooltip from '../Tooltip'\nimport StyledButton from '../input/StyledButton'\nimport { getTruncatedPeerId } from './utils'\nimport { RootNodeContext } from '../context/RootNodeProvider'\nimport { copyToClipboard } from '../../utils/helpers'\n\nconst SegmentedPeerId = styled.div`\n  padding-top: ${({ theme }) => theme.spacing()};\n  font-family: plex-mono;\n  font-size: 9pt;\n  font-weight: 300;\n  color: ${({ theme }) => theme.color('text', 1)};\n  cursor: text;\n  user-select: text;\n`\n\nconst LastSegment = styled.span`\n  font-weight: 500;\n`\n\nconst Positioner = styled.div`\n  top: -${({ theme }) => theme.spacing(2, true)}px;\n  transform: none;\n  cursor: default;\n`\n\nconst Tick = styled.div`\n  top: ${({ theme, tickSize }) => theme.spacing(2.5, true) + tickSize}px;\n`\n\nfunction getPeerSegment(segmentText, i, isLast) {\n  if (!isLast)\n    return (\n      <span key={`segment-${i}`}>\n        {segmentText}\n        <wbr />\n      </span>\n    )\n\n  const truncated = getTruncatedPeerId(segmentText)\n  const mainSegment = segmentText.slice(\n    0,\n    segmentText.length - truncated.length\n  )\n\n  return (\n    <span key={`segment-${i}`}>\n      {mainSegment}\n      <LastSegment>{truncated}</LastSegment>\n    </span>\n  )\n}\n\nfunction PeerIdTooltip({ peerId, children, override = {} }) {\n  const [isCopied, setIsCopied] = useState(false)\n  const rootNodeRef = useContext(RootNodeContext)\n\n  const segmentsCount = 4\n  const segmentsLength = Math.round(peerId.length / segmentsCount) // Usually 64 / 4 = 16\n  const peerIdSegments = []\n  let i = 0\n  while (i < segmentsCount) {\n    const isLast = i + 1 === segmentsCount\n\n    const segmentText = peerId.slice(\n      segmentsLength * i,\n      segmentsLength * (i + 1)\n    )\n    peerIdSegments.push(getPeerSegment(segmentText, i, isLast))\n    if (!isLast) peerIdSegments.push(<wbr key={`break-${i}`} />)\n\n    i++\n  }\n\n  const copyPeerId = () => {\n    copyToClipboard(peerId)\n    setIsCopied(true)\n    setTimeout(() => setIsCopied(false), 1750)\n  }\n\n  const copyButtonText = isCopied\n    ? `Copied \"…${getTruncatedPeerId(peerId)}\"`\n    : 'COPY PEER ID'\n\n  return (\n    <Tooltip\n      side=\"right\"\n      containerRef={rootNodeRef}\n      override={{ Positioner, Tick, ...override }}\n      content={\n        <>\n          <StyledButton\n            isActive={isCopied}\n            onClick={copyPeerId}\n            as={override.StyledButton}\n          >\n            {copyButtonText}\n          </StyledButton>\n          <SegmentedPeerId as={override.StyledButton}>\n            {peerIdSegments}\n          </SegmentedPeerId>\n        </>\n      }\n    >\n      {children}\n    </Tooltip>\n  )\n}\n\nPeerIdTooltip.propTypes = {\n  peerId: T.string.isRequired,\n  children: T.node,\n  override: T.object,\n}\n\nexport default PeerIdTooltip\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { getTruncatedPeerId } from './utils'\n\nconst TextStyle = styled.span`\n  font-family: plex-mono;\n  display: inline-block;\n  white-space: nowrap;\n`\n\nfunction PeerIdTruncated({ peerId }) {\n  const truncatedId = getTruncatedPeerId(peerId)\n  return <TextStyle>{truncatedId}</TextStyle>\n}\n\nPeerIdTruncated.propTypes = {\n  peerId: T.string.isRequired,\n}\n\nexport default PeerIdTruncated\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport PeerIdAvatar from './PeerIdAvatar'\nimport PeerIdTooltip from './PeerIdTooltip'\nimport PeerIdTruncated from './PeerIdTruncated'\n\nconst NoWrap = styled.span`\n  white-space: nowrap;\n`\n\nfunction PeerIdChip({ peerId }) {\n  return (\n    <PeerIdTooltip peerId={peerId}>\n      <NoWrap>\n        <PeerIdAvatar peerId={peerId} />\n        <PeerIdTruncated peerId={peerId} />\n      </NoWrap>\n    </PeerIdTooltip>\n  )\n}\n\nPeerIdChip.propTypes = {\n  peerId: T.string,\n  children: T.node,\n  onClick: T.func,\n}\n\nexport default PeerIdChip\n","import React from 'react'\nimport T from 'prop-types'\nimport styled, { css } from 'styled-components'\n\nimport Icon from '../components/Icon'\nimport StyledButton from '../components/input/StyledButton'\n\nconst colorTransition = css`\n  ${({ theme }) => theme.transition()}\n  color: ${({ theme, active }) =>\n    active ? theme.color('highlight', 0) : theme.color('text', 2)};\n`\n\nconst AccordionButton = styled(StyledButton)`\n  ${colorTransition}\n  border: none;\n  margin: ${({ theme }) => theme.spacing([0, 2])};\n  ${({ theme }) => theme.transition()}\n`\n\nconst AccordionIcon = styled.span`\n  ${colorTransition}\n  transform: rotate(0deg);\n  ${({ active }) =>\n    active &&\n    css`\n      transform: rotate(180deg);\n    `}\n`\n\nfunction AccordionControl({ isOpen, setIsOpen, children, overrides = {} }) {\n  const toggleOpen = () => setIsOpen(!isOpen)\n  return (\n    <AccordionButton\n      onClick={toggleOpen}\n      as={overrides.AccordionButton}\n      active={isOpen}\n    >\n      {children}\n      <Icon\n        type={'expand'}\n        active={isOpen}\n        override={{ Container: AccordionIcon }}\n      />\n    </AccordionButton>\n  )\n}\n\nAccordionControl.propTypes = {\n  isOpen: T.bool.isRequired,\n  setIsOpen: T.func.isRequired,\n  children: T.node.isRequired,\n  overrides: T.object,\n}\n\nexport default AccordionControl\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  border-radius: 50%;\n  ${({ size }) => `\n    height: ${size}px;\n    width: ${size}px;\n  `}\n  ${({ inline, theme }) =>\n    !inline\n      ? ''\n      : `\n    display: inline-block;\n    vertical-align: middle;\n    margin: 0 ${theme.spacing()};\n  `}\n`\n\nconst BubbleShape = styled.div`\n  border-radius: 50%;\n  border: 2px solid ${({ theme }) => theme.color('background', 0, 0.8)};\n  background: ${({ theme, colorKey, colorIndex = 0 }) =>\n    colorKey ? theme.color(colorKey, colorIndex) : 'currentColor'};\n  ${({ percentOfSize }) => {\n    const offset = (100 - percentOfSize) / 2\n    return `\n      height: ${percentOfSize}%;\n      width: ${percentOfSize}%;\n      margin-top: ${offset}%;\n      margin-left: ${offset}%;\n      margin-right: ${offset}%;\n      margin-bottom: ${offset}%;\n    `\n  }}\n`\n\nfunction Bubble({\n  value,\n  maxValue,\n  colorKey,\n  inline = false,\n  size = 32,\n  colorIndex = 0,\n  override = {},\n}) {\n  // Make _area_ of circle relative to value\n  const percentOfSize = Math.sqrt(value / maxValue) * 100\n  return (\n    <Container size={size} inline={inline} as={override.Container}>\n      <BubbleShape\n        colorKey={colorKey}\n        colorIndex={colorIndex}\n        percentOfSize={percentOfSize}\n        as={override.BubbleShape}\n      />\n    </Container>\n  )\n}\n\nBubble.propTypes = {\n  value: T.number.isRequired,\n  maxValue: T.number.isRequired,\n  size: T.number,\n  inline: T.bool,\n  colorKey: T.string,\n  colorIndex: T.number,\n  override: T.object,\n}\n\nexport default Bubble\n","import { useReducer, useCallback } from 'react'\nimport T from 'prop-types'\n\nfunction updateFilters(filters, { action, name, doFilter, mapFilter, values }) {\n  switch (action) {\n    case 'update':\n      return updateValues(filters, name, values)\n    case 'add':\n      return addFilter(filters, { name, doFilter, mapFilter, values })\n    case 'remove':\n      return removeFilter(filters, name)\n    default:\n      throw new Error(`Unrecognised action \"${action}\" for updateFilters`)\n  }\n}\n\nfunction updateValues(filters, name, values) {\n  const existingFilter = filters.find(filter => filter.name === name)\n  if (!existingFilter)\n    throw new Error(\n      `No filter named \"${name}\", only \"${filters\n        .map(filter => filter.name)\n        .join('\", \"')}\"`\n    )\n\n  // Return same array reference => nothing updates\n  if (existingFilter.values === values) return filters\n\n  existingFilter.values = values\n  // Return different array reference => hook updates\n  return [...filters]\n}\n\nfunction addFilter(filters, newFilter) {\n  if (filters.some(filter => filter.name === newFilter.name)) {\n    return updateValues(filters, newFilter.name, newFilter.values)\n  }\n\n  return [...filters, newFilter]\n}\n\nfunction removeFilter(filters, filterName) {\n  const filterIndex = filters.findIndex(filter => filter.name === filterName)\n  if (filterIndex === -1) return filters\n\n  filters.splice(filterIndex, 1)\n  return [...filters]\n}\n\nfunction useFilter(initialFilters) {\n  const [filters, dispatchFilters] = useReducer(updateFilters, initialFilters)\n\n  const applyFilters = useCallback(\n    datum => {\n      if (!filters.length) return true\n      return filters.every(\n        ({ doFilter, values, mapFilter = d => d }) =>\n          !values || doFilter(mapFilter(datum), values)\n      )\n    },\n    [filters]\n  )\n\n  return { applyFilters, dispatchFilters, filters }\n}\n\nuseFilter.propTypes = {\n  initialFilters: T.arrayOf(\n    T.shape({\n      name: T.string.isRequired,\n      doFilter: T.func.isRequired,\n      initialValues: T.any,\n      mapFilter: T.func,\n    })\n  ).isRequired,\n  mapFilter: T.func,\n}\n\nexport default useFilter\n","import { useState } from 'react'\nimport T from 'prop-types'\n\nfunction validateDirection(sortDirection, directionOptions) {\n  // null disables sorter\n  if (!sortDirection) return\n\n  const directionOptionKeys = directionOptions.map(option => option[0])\n\n  if (!directionOptionKeys.includes(sortDirection)) {\n    throw new Error(\n      `Sort direction ${sortDirection} not one of \"${directionOptionKeys.join(\n        '\", \"'\n      )}\"`\n    )\n  }\n}\n\nfunction makeSorter(sortDirection, getSorter, mapSorter) {\n  if (!sortDirection) return () => {}\n  if (!mapSorter) return getSorter(sortDirection)\n  const sorter = getSorter(sortDirection)\n  return (a, b) => sorter(mapSorter(a), mapSorter(b))\n}\n\nfunction noopSorter() {\n  return 0\n}\n\nconst defaultOptions = [\n  ['asc', 'ascending'],\n  ['desc', 'descending'],\n]\n\nfunction useSorter({\n  getSorter,\n  mapSorter,\n  defaultDirection,\n  directionOptions = defaultOptions,\n  disabled = false,\n}) {\n  const [sortDirection, setSortDirection] = useState(defaultDirection || null)\n\n  if (disabled || !getSorter)\n    return { noopSorter, sortDirection, setSortDirection }\n\n  validateDirection(sortDirection, directionOptions)\n  const sorter = makeSorter(sortDirection, getSorter, mapSorter)\n\n  return {\n    sorter,\n    sortDirection,\n    setSortDirection,\n  }\n}\n\nuseSorter.propTypes = {\n  data: T.array.isRequired,\n  getSorter: T.func.isRequired,\n  mapSorter: T.func,\n  defaultDirection: T.string,\n  directionOptions: T.arrayOf([\n    T.arrayOf([\n      T.string, // direction name\n      T.string, // optional user-facing direction label\n      T.node, // optional icon\n    ]),\n  ]),\n  disabled: T.bool,\n}\n\nexport default useSorter\n","import { useContext, useMemo } from 'react'\n\nimport useSorter from '../hooks/useSorter'\nimport useFilter from '../hooks/useFilter'\nimport { DataContext } from '../components/context/DataProvider'\n\nimport { scaleLinear, scaleTime, stack } from 'd3'\n\nimport { validateNumbers } from '../utils/helpers'\n\nfunction getMaxAreaPeak(stackedData) {\n  return stackedData.reduce(\n    (maxOverall, timeDatum) =>\n      Math.max(\n        maxOverall,\n        timeDatum.reduce(\n          (maxHere, [, upperAreaPoint]) => Math.max(maxHere, upperAreaPoint),\n          0\n        )\n      ),\n    0\n  )\n}\n\nfunction getKeyedData(dataset, sorter, applyFilters, getKeys, keyData) {\n  const keys = getKeys(dataset, sorter, applyFilters)\n\n  // Returns array of objects with a numeric value for each key\n  // and a property for the x-axis value.\n  const keyedData = keyData(dataset, keys)\n\n  return { keys, keyedData }\n}\n\nfunction stackData(keyedData, keys) {\n  const dataStacker = stack().keys(keys)\n\n  const stackedData = dataStacker(keyedData)\n\n  const maxY = getMaxAreaPeak(stackedData)\n\n  // Assumes all stacked data will be by timepoint - if not will need more options\n  const xScale = scaleTime()\n  // Scaling from dataset[0] leaves a gap of the width of 1 datapoint\n  const minX = keyedData[0].time\n  const maxX = keyedData[keyedData.length - 1].time\n\n  const yScale = scaleLinear()\n\n  validateNumbers({\n    maxY,\n    minX,\n    maxX,\n  })\n\n  xScale.domain([minX, maxX])\n  yScale.domain([0, maxY])\n\n  return {\n    stackedData,\n    xScale,\n    yScale,\n  }\n}\n\nfunction useStackedData({\n  getKeys,\n  keyData,\n  getSorter,\n  mapSorter,\n  defaultDirection = '',\n}) {\n  const dataset = useContext(DataContext)\n\n  const { sorter, setSortDirection } = useSorter({\n    getSorter,\n    mapSorter: mapSorter,\n    defaultDirection: 'desc',\n  })\n\n  const { applyFilters, dispatchFilters } = useFilter([])\n\n  const { keys, keyedData } = useMemo(\n    () => getKeyedData(dataset, sorter, applyFilters, getKeys, keyData),\n    [dataset, sorter, applyFilters, getKeys, keyData]\n  )\n\n  // If we need to optimise this further for live data, can compare new data to\n  // max peak, key new datapoints individually and append if it's not greater than the peak\n  const { stackedData, xScale, yScale } = useMemo(\n    () => stackData(keyedData, keys),\n    [keyedData, keys]\n  )\n\n  return {\n    stackedData,\n    xScale,\n    yScale,\n    setSortDirection,\n    dispatchFilters,\n  }\n}\n\nuseStackedData.propTypes = {}\n\nexport default useStackedData\n","import React, { useContext, useMemo, useState } from 'react'\nimport T from 'prop-types'\n\nimport useSorter from '../hooks/useSorter'\nimport useFilter from '../hooks/useFilter'\nimport { TimeContext } from '../components/context/DataProvider'\n\nfunction mapSorterToColumn(colName, columnDefs) {\n  const sortColumnIndex = columnDefs.findIndex(col => col.name === colName)\n  return row => row[sortColumnIndex].value\n}\n\nfunction getContentProps(data, columnDefs, timepoint, metadata) {\n  return data.map((datum, rowIndex) =>\n    columnDefs.map((columnDef, columnIndex) => ({\n      ...columnDef.getProps(datum, timepoint, metadata),\n      rowIndex,\n      columnIndex,\n      columnName: columnDef.name,\n    }))\n  )\n}\n\nfunction applyColumnDefaults(columns) {\n  return columns.map(column =>\n    Object.assign(\n      {},\n      {\n        header: column.name,\n        getProps: datum => ({ value: datum[column.name] }),\n        renderContent: DefaultRenderer,\n      },\n      column\n    )\n  )\n}\n\nfunction applyCalculations(columns, rawContentProps, metadata) {\n  return columns.map((column, columnIndex) => {\n    if (!column.calculate) return column\n    const columnProps = rawContentProps.map(row => row[columnIndex])\n\n    const calculated = Object.entries(column.calculate).reduce(\n      (calculated, [key, doCalc]) => {\n        calculated[key] = doCalc(columnProps, metadata)\n        return calculated\n      },\n      {}\n    )\n\n    return Object.assign({}, column, calculated)\n  })\n}\n\nfunction DefaultRenderer({ value }) {\n  return <>{value}</>\n}\nDefaultRenderer.propTypes = {\n  value: T.any,\n}\n\nfunction getInitialSortDef(sortColumn, columnDefs) {\n  const sortDef =\n    sortColumn && columnDefs.find(col => col.name === sortColumn).sort\n  if (!sortDef) return { disabled: true }\n\n  return {\n    ...sortDef,\n    mapSorter: mapSorterToColumn(sortColumn, columnDefs),\n  }\n}\n\nfunction useTabularData({\n  columns,\n  data,\n  defaultSort,\n  defaultFilter,\n  metadata = {},\n}) {\n  const [sortColumn, setSortColumn] = useState(defaultSort)\n  const timepoint = useContext(TimeContext)\n\n  const columnsWithDefaults = applyColumnDefaults(columns)\n\n  const rawContentProps = useMemo(() => {\n    return getContentProps(data, columnsWithDefaults, timepoint, metadata)\n  }, [data, columnsWithDefaults, timepoint, metadata])\n\n  const columnDefs = applyCalculations(\n    columnsWithDefaults,\n    rawContentProps,\n    metadata\n  )\n\n  const { sorter, sortDirection, setSortDirection } = useSorter(\n    getInitialSortDef(sortColumn, columnDefs)\n  )\n\n  const { applyFilters, dispatchFilters } = useFilter([])\n\n  // Give each filterable column functions to update its column's filter values\n  columnDefs.forEach(col => {\n    if (!col.filter || !!col.filter.updateValues) return\n\n    col.filter.updateValues = values =>\n      dispatchFilters({\n        action: 'update',\n        name: col.filter.name,\n        values,\n      })\n\n    col.filter.addFilter = values =>\n      dispatchFilters({\n        action: 'add',\n        name: col.filter.name,\n        doFilter: col.filter.doFilter,\n        values,\n        mapFilter: row =>\n          row.find(({ columnName }) => columnName === col.name).value,\n      })\n\n    col.filter.removeFilter = () =>\n      dispatchFilters({\n        action: 'remove',\n        name: col.filter.name,\n      })\n  })\n\n  const contentProps = useMemo(() => {\n    const filteredContentProps = rawContentProps.filter(applyFilters)\n    filteredContentProps.sort(sorter)\n    return filteredContentProps\n  }, [rawContentProps, sorter, applyFilters])\n\n  return {\n    columnDefs,\n    contentProps,\n    sortColumn,\n    setSortColumn,\n    sortDirection,\n    setSortDirection,\n  }\n}\n\nuseTabularData.propTypes = {\n  columns: T.arrayOf(\n    T.shape({\n      name: T.string.required,\n      header: T.node,\n      getProps: T.func,\n      renderContent: T.elementType,\n      sort: T.shape({\n        sorter: T.func,\n        defaultDirection: T.string,\n        directionOptions: T.instanceOf(Map),\n      }),\n      filter: T.shape({\n        doFilter: T.func.isRequired,\n        initialValues: T.any,\n        filterUi: T.node,\n        updateValues: T.func,\n      }),\n    })\n  ).isRequired,\n  data: T.arrayOf(T.object).isRequired,\n  defaultSort: T.string,\n  defaultFilter: T.obj,\n  metadata: T.obj,\n}\n\nexport default useTabularData\n","import { useMemo } from 'react'\nimport T from 'prop-types'\nimport { area } from 'd3'\n\nfunction scaleAreaChart(height, width, xScale, yScale, flip) {\n  xScale.range([0, width])\n  yScale.range(flip ? [0, height] : [height, 0])\n\n  const areaMaker = area()\n    .x(d => xScale(d.data.time))\n    .y0(d => yScale(d[0]))\n    .y1(d => yScale(d[1]))\n\n  return areaMaker\n}\n\nfunction getPathDefs(stackedData, areaMaker) {\n  const pathDefs = stackedData.map(datum => ({\n    pathDef: areaMaker(datum),\n    peerId: datum.key,\n  }))\n\n  return pathDefs\n}\n\nfunction useAreaChart({\n  height,\n  width,\n  stackedData,\n  xScale,\n  yScale,\n  flip = false,\n}) {\n  // Both steps are potentially very expensive if applied to large,\n  // rapidly changing data sets, so don't rescale unless needed\n\n  const areaMaker = useMemo(\n    () => scaleAreaChart(height, width, xScale, yScale, flip),\n    [height, width, xScale, yScale, flip]\n  )\n\n  const pathDefs = useMemo(() => getPathDefs(stackedData, areaMaker), [\n    stackedData,\n    areaMaker,\n  ])\n\n  return pathDefs\n}\n\nuseAreaChart.propTypes = {\n  height: T.number.isRequired,\n  width: T.number.isRequired,\n  stackedData: T.array.isRequired,\n  xScale: T.func.isRequired,\n  yScale: T.func.isRequired,\n}\n\nexport default useAreaChart\n","import CheckboxList from '../components/input/fields/CheckboxList'\n\nconst defaultFilter = (targetValue, values) => {\n  return !!values[targetValue]\n}\nconst DefaultUi = CheckboxList\n\nfunction getListFilter({\n  options,\n  defaultValue = true,\n  name = 'Filter from list',\n  doFilter = defaultFilter,\n  FilterUi = DefaultUi,\n}) {\n  if (!options || !Array.isArray(options))\n    throw new Error(\n      `listFilter requires an array of options, got ${typeof options}`\n    )\n\n  const initialFieldValues = new Map(\n    options.map(option => [option, defaultValue])\n  )\n\n  return {\n    name,\n    doFilter,\n    FilterUi,\n    initialFieldValues,\n  }\n}\n\nexport default getListFilter\n","import Slider from '../components/input/fields/Slider'\n\nconst defaultFilter = (targetValue, values) => {\n  // If a value is null, that end of the rnage is unset, so allow all\n  if (typeof values['min'] === 'number' && targetValue < values['min'])\n    return false\n  if (typeof values['max'] === 'number' && targetValue > values['max'])\n    return false\n  return true\n}\nconst DefaultUi = Slider\n\nfunction getRangeFilter({\n  steps,\n  min = 0,\n  max = 0,\n  name = 'Filter by range',\n  doFilter = defaultFilter,\n  FilterUi = DefaultUi,\n}) {\n  // Use empty strings for null values so form elements don't become uncontrolled\n  const initialFieldValues = new Map([\n    ['min', ''],\n    ['max', ''],\n  ])\n\n  return {\n    name,\n    doFilter,\n    FilterUi,\n    initialFieldValues,\n    filterUiProps: {\n      min,\n      max,\n      steps,\n    },\n  }\n}\n\nexport default getRangeFilter\n","function getNumericSorter(direction) {\n  const numericSorter = (a, b) => (direction === 'asc' ? a - b : b - a)\n  return numericSorter\n}\n\nexport default getNumericSorter\n","function getStringSorter(direction) {\n  const caselessSorter = Intl.Collator('en').compare\n  const stringSorter = (a, b) => {\n    const sortNum = caselessSorter(a, b)\n    return direction === 'asc' ? sortNum : sortNum * -1\n  }\n  return stringSorter\n}\n\nexport default getStringSorter\n","export * from './components'\nexport * from './hooks'\nexport * from './filters'\nexport * from './sorters'\nexport * from './utils'\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport {\n  formatDuration,\n  Bubble,\n  DataNumber,\n  PeerIdChip,\n  TimeNumber,\n  Tooltip,\n} from '@libp2p-observer/sdk'\n\nconst Nowrap = styled.span`\n  white-space: nowrap;\n`\n\nfunction PeerIdContent({ value }) {\n  return <PeerIdChip peerId={value} />\n}\nPeerIdContent.propTypes = {\n  value: T.string,\n}\n\nfunction BytesContent({ value, maxValue, colorKey }) {\n  return (\n    <Tooltip content={<Nowrap>{value} bytes</Nowrap>}>\n      <Nowrap>\n        <DataNumber value={value} />\n        <Bubble\n          value={value}\n          maxValue={maxValue}\n          inline\n          size={24}\n          colorKey={colorKey}\n        />\n      </Nowrap>\n    </Tooltip>\n  )\n}\nBytesContent.propTypes = {\n  value: T.num,\n  maxValue: T.num,\n  colorKey: T.string,\n}\n\nfunction AgeContent({ value, maxValue }) {\n  const ageSeconds = Math.round(value / 1000)\n  return (\n    <Tooltip content={<Nowrap>{formatDuration(value)}</Nowrap>}>\n      <Nowrap>\n        <TimeNumber value={ageSeconds} />\n        <Bubble value={value} maxValue={maxValue} inline size={24} />\n      </Nowrap>\n    </Tooltip>\n  )\n}\nAgeContent.propTypes = {\n  value: T.string,\n  maxValue: T.num,\n}\n\nexport { AgeContent, BytesContent, PeerIdContent }\n","'use strict';\n\nvar samples = require('./samples');\n\nmodule.exports = samples;","'use strict';\n\nvar _defineProperty = require(\"/home/runner/work/libp2p-introspection-ui/libp2p-introspection-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar binary = require('./lib/binary');\n\nvar enums = require('./lib/enums');\n\nvar helpers = require('./lib/helpers');\n\nmodule.exports = _objectSpread({}, binary, {}, enums, {}, helpers);","module.exports = __webpack_public_path__ + \"static/media/screenshot.3a5301f8.png\";","module.exports = __webpack_public_path__ + \"static/media/screenshot.e1a6ab62.png\";","module.exports = __webpack_public_path__ + \"static/media/Nexa-Light.5c6f5c99.otf\";","module.exports = __webpack_public_path__ + \"static/media/Nexa-Bold.254370af.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-ExtraLight.2c560953.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Light.074e5648.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Regular.177a43ac.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Text.9ac3a2a3.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Medium.74982386.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-SemiBold.1f4b8be3.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Bold.b7601880.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexMono-Light.f9679767.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexMono-Text.3ca905f2.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexMono-SemiBold.dbf7ec0b.otf\";","import {\n  getConnectionAge,\n  getConnectionTraffic,\n  statusNames,\n  transportNames,\n} from '@libp2p-observer/data'\nimport {\n  getStringSorter,\n  getNumericSorter,\n  getRangeFilter,\n} from '@libp2p-observer/sdk'\n\nimport {\n  AgeContent,\n  BytesContent,\n  PeerIdContent,\n  StatusContent,\n} from '../components/cellContent'\n\nimport * as statusSorter from '../utils/statusSorter'\nimport statusFilter from '../utils/statusFilter'\n\nfunction getMaxValue(column) {\n  return column.reduce((max, { value }) => Math.max(max, value), 0)\n}\n\nconst stringSorter = {\n  getSorter: getStringSorter,\n  defaultDirection: 'asc',\n}\n\nconst numericSorter = {\n  getSorter: getNumericSorter,\n  defaultDirection: 'desc',\n}\n\nconst peerIdCol = {\n  name: 'peerId',\n  header: 'Peer ID',\n  getProps: connection => ({ value: connection.getPeerId() }),\n  renderContent: PeerIdContent,\n  sort: stringSorter,\n}\n\nconst dataInCol = {\n  name: 'data-in',\n  header: 'Data in',\n  getProps: (connection, _, metadata) => ({\n    value: getConnectionTraffic(connection, 'in', 'bytes'),\n    maxValue: metadata.maxTraffic,\n    colorKey: 'primary',\n  }),\n  renderContent: BytesContent,\n  sort: numericSorter,\n}\n\nconst dataOutCol = {\n  name: 'data-out',\n  header: 'Data out',\n  getProps: (connection, _, metadata) => ({\n    value: getConnectionTraffic(connection, 'out', 'bytes'),\n    maxValue: metadata.maxTraffic,\n    colorKey: 'secondary',\n  }),\n  renderContent: BytesContent,\n  sort: numericSorter,\n}\n\nconst ageCol = {\n  name: 'age',\n  header: 'Time open',\n  getProps: (connection, timepoint, metadata) => {\n    const age = getConnectionAge(connection, timepoint)\n    return {\n      value: age,\n      maxValue: metadata.maxAge,\n    }\n  },\n  renderContent: AgeContent,\n  sort: numericSorter,\n}\n\nconst streamsCol = {\n  name: 'streams',\n  getProps: connection => ({\n    value: connection.getStreams().getStreamsList().length,\n  }),\n  sort: numericSorter,\n  calculate: {\n    filter: column =>\n      getRangeFilter({\n        min: 0,\n        max: getMaxValue(column),\n        name: 'Filter number of streams',\n      }),\n  },\n}\n\nconst transportCol = {\n  name: 'transport',\n  getProps: connection => {\n    const transportIdBin = connection.getTransportId()\n    const transportIdInt = Buffer.from(transportIdBin).readUIntLE(\n      0,\n      transportIdBin.length\n    )\n    return { value: transportNames[transportIdInt] }\n  },\n  sort: stringSorter,\n}\n\nconst statusCol = {\n  name: 'status',\n  getProps: connection => ({ value: statusNames[connection.getStatus()] }),\n  cellProps: { align: 'left' },\n  renderContent: StatusContent,\n  sort: statusSorter,\n  filter: statusFilter,\n}\n\n// Define column order\n\nconst columns = [\n  statusCol,\n  peerIdCol,\n  dataInCol,\n  dataOutCol,\n  ageCol,\n  streamsCol,\n  transportCol,\n]\n\nexport default columns\n","const defaultDirection = 'asc'\n\nconst directionOptions = [\n  ['asc', 'Open first'],\n  ['desc', 'Closed first'],\n]\n\nconst openFirstOrder = ['ACTIVE', 'OPENING', 'CLOSING', 'CLOSED', 'ERROR']\nconst closedFirstOrder = ['CLOSED', 'CLOSING', 'ERROR', 'ACTIVE', 'OPENING']\n\nfunction getSorter(direction) {\n  const statusSorter = (a, b) => {\n    if (a === b) return 0\n    const statusOrder = direction === 'asc' ? openFirstOrder : closedFirstOrder\n    const sortNum = statusOrder.indexOf(a) > statusOrder.indexOf(b) ? 1 : -1\n    return sortNum\n  }\n  return statusSorter\n}\n\nexport { defaultDirection, directionOptions, getSorter }\n"],"sourceRoot":""}