{"version":3,"sources":["../../data/lib/binary.js","../../proto/index.js","../../proto/lib/introspection_pb.js","../../proto/lib/fnv1a.js","../../data/lib/enums.js","../../data/lib/helpers.js","../../samples/samples/index.js","../../samples/samples/sample.mock","../../connections-table/components/StatusChip.js","../../connections-table/components/cellContent.js","components/ContextWrappers.js","../../shell/components/Timeline/utils.js","../../shell/components/Timeline/DataTicks.js","../../shell/components/Timeline/TimeTicks.js","../../shell/components/Timeline/TimelinePaths.js","../../shell/components/Timeline/TimeSlider.js","../../shell/components/Timeline/Timeline.js","../../shell/components/DataTypeControl.js","../../shell/components/ControlPanel.js","../../shell/components/DemoShell.js","../../connections-table/components/ConnectionsTableRow.js","../../connections-table/components/ConnectionsTable.js","../../connections-table/description.md","../../connections-table/index.js","definitions/approvedViz.js","definitions/utils.js","components/CatalogueItem.js","components/HeaderTabs.js","components/SelectedComponent.js","components/Page.js","App.js","serviceWorker.js","index.js","../../samples/index.js","../../sdk/components/context/DataProvider.js","../../sdk/components/context/RootNodeProvider.js","../../sdk/theme/fontFaces.js","../../sdk/theme/theme.js","../../sdk/components/context/ThemeSetter.js","../../sdk/theme/icons.js","../../sdk/theme/icons/Asc.js","../../sdk/theme/icons/Desc.js","../../sdk/theme/icons/Sort.js","../../sdk/theme/icons/Cancel.js","../../sdk/theme/icons/Check.js","../../sdk/theme/icons/Uncheck.js","../../sdk/theme/icons/Filter.js","../../sdk/theme/icons/Back.js","../../sdk/theme/icons/Forward.js","../../sdk/theme/icons/Doc.js","../../sdk/theme/icons/Cloud.js","../../sdk/theme/icons/Closed.js","../../sdk/theme/icons/Closing.js","../../sdk/theme/icons/Opening.js","../../sdk/components/Icon.js","../../sdk/components/input/fields/CheckboxList.js","../../sdk/components/Tooltip.js","../../sdk/components/input/fields/Slider.js","../../sdk/components/input/StyledButton.js","../../sdk/utils/helpers.js","../../sdk/utils/files.js","../../sdk/utils/formats.js","../../sdk/components/input/SampleDataButton.js","../../sdk/components/input/UploadDataButton.js","../../sdk/components/DataTable/styledTable.js","../../sdk/components/DataTable/DataTableRow.js","../../sdk/components/input/FilterButton.js","../../sdk/components/DataTable/DataTableHead.js","../../sdk/components/DataTable/DataTable.js","../../sdk/components/DataTable/numberFields.js","../../sdk/components/PeerId/PeerIdTooltip.js","../../sdk/components/PeerId/PeerId.js","../../sdk/hooks/useFilter.js","../../sdk/hooks/useSorter.js","../../sdk/hooks/useStackedData.js","../../sdk/hooks/useTabularData.js","../../sdk/hooks/useAreaChart.js","../../sdk/filters/getListFilter.js","../../sdk/filters/getRangeFilter.js","../../sdk/sorters/getNumericSorter.js","../../sdk/sorters/getStringSorter.js","../../sdk/index.js","../../data/index.js","../../connections-table/screenshot.png","../../sdk/theme/fonts/Nexa-Light.otf","../../sdk/theme/fonts/Nexa-Bold.otf","../../sdk/theme/fonts/IBMPlexSans-ExtraLight.otf","../../sdk/theme/fonts/IBMPlexSans-Light.otf","../../sdk/theme/fonts/IBMPlexSans-Regular.otf","../../sdk/theme/fonts/IBMPlexSans-Text.otf","../../sdk/theme/fonts/IBMPlexSans-Medium.otf","../../sdk/theme/fonts/IBMPlexSans-SemiBold.otf","../../sdk/theme/fonts/IBMPlexSans-Bold.otf","../../sdk/theme/fonts/IBMPlexMono-Light.otf","../../sdk/theme/fonts/IBMPlexMono-Text.otf","../../sdk/theme/fonts/IBMPlexMono-SemiBold.otf","../../connections-table/definitions/connectionsColumns.js","../../connections-table/utils/statusSorter.js","../../connections-table/utils/statusFilter.js"],"names":["_require","deserializeBinary","fnv1a","parseBuffer","buf","byteLength","Buffer","bytesParsed","messages","states","runtime","messageChecksum","readUIntLE","messageStart","messageEnd","messageBin","slice","addMessageContent","console","error","concat","message","runtimeContent","getRuntime","stateContent","getState","push","parseArrayBuffer","arrayBuf","from","parseBase64","dataString","module","exports","parseImport","rawData","ArrayBuffer","String","proto","ProtocolDataPacket","jspb","goog","global","Function","google_protobuf_timestamp_pb","object","extend","exportSymbol","introspection","Version","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","ResultCounter","SlidingCounter","DataGauge","Runtime","EndpointPair","Traffic","StreamList","repeatedFields_","Connection","oneofGroups_","Timeline","Attributes","Stream","ConnectionRef","DHT","Params","Query","Subsystems","State","ClientSignal","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","version","getFieldWithDefault","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","value","readUint32","setVersion","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","f","getVersion","writeUint32","setProto3IntField","total","ok","err","setTotal","setOk","setErr","undefined","getTotal","getOk","getErr","over1m","over5m","over15m","over30m","over1hr","over2hr","over4hr","over8hr","over12hr","over24hr","setOver1m","setOver5m","setOver15m","setOver30m","setOver1hr","setOver2hr","setOver4hr","setOver8hr","setOver12hr","setOver24hr","getOver1m","getOver5m","getOver15m","getOver30m","getOver1hr","getOver2hr","getOver4hr","getOver8hr","getOver12hr","getOver24hr","cumBytes","cumPackets","instBw","readUint64","setCumBytes","setCumPackets","setInstBw","getCumBytes","writeUint64","getCumPackets","getInstBw","implementation","platform","peerId","readString","setImplementation","setPlatform","setPeerId","getImplementation","length","writeString","getPlatform","getPeerId","setProto3StringField","srcMultiaddr","dstMultiaddr","setSrcMultiaddr","setDstMultiaddr","getSrcMultiaddr","getDstMultiaddr","trafficIn","getTrafficIn","trafficOut","getTrafficOut","readMessage","setTrafficIn","setTrafficOut","writeMessage","getWrapperField","setWrapperField","clearTrafficIn","hasTrafficIn","getField","clearTrafficOut","hasTrafficOut","streamIdsList","getStreamIdsList_asB64","streamsList","toObjectList","getStreamsList","readBytes","addStreamIds","addStreams","getStreamIdsList_asU8","writeRepeatedBytes","writeRepeatedMessage","getStreamIdsList","getRepeatedField","bytesListAsB64","bytesListAsU8","setStreamIdsList","setField","opt_index","addToRepeatedField","clearStreamIdsList","getRepeatedWrapperField","setStreamsList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearStreamsList","RelayedOverCase","RELAYED_OVER_NOT_SET","CONN_ID","CONN","getRelayedOverCase","computeOneofCase","id","getId_asB64","status","transportId","getTransportId_asB64","endpoints","getEndpoints","timeline","getTimeline","role","traffic","getTraffic","attribs","getAttribs","latencyNs","streams","getStreams","connId","getConnId_asB64","conn","getConn","userProvidedTagsList","setId","readEnum","setStatus","setTransportId","setEndpoints","setTimeline","setRole","setTraffic","setAttribs","setLatencyNs","setStreams","setConnId","setConn","addUserProvidedTags","getId_asU8","writeBytes","getStatus","writeEnum","getTransportId_asU8","getRole","getLatencyNs","getUserProvidedTagsList","writeRepeatedString","openTs","getOpenTs","Timestamp","upgradedTs","getUpgradedTs","closeTs","getCloseTs","setOpenTs","setUpgradedTs","setCloseTs","clearOpenTs","hasOpenTs","clearUpgradedTs","hasUpgradedTs","clearCloseTs","hasCloseTs","multiplexer","encryption","setMultiplexer","setEncryption","getMultiplexer","getEncryption","getId","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3EnumField","getTransportId","clearEndpoints","hasEndpoints","clearTimeline","hasTimeline","clearTraffic","hasTraffic","clearAttribs","hasAttribs","clearStreams","hasStreams","getConnId","getConnId_asU8","setOneofField","clearConnId","hasConnId","setOneofWrapperField","clearConn","hasConn","setUserProvidedTagsList","clearUserProvidedTagsList","protocol","setProtocol","getProtocol","ConnectionCase","CONNECTION_NOT_SET","getConnectionCase","enabled","getBooleanFieldWithDefault","startTs","getStartTs","params","getParams","queryList","getQueryList","readBool","setEnabled","setStartTs","setParams","addQuery","getEnabled","writeBool","k","alpha","disjointPaths","setK","setAlpha","setDisjointPaths","getK","getAlpha","getDisjointPaths","targetPeerId","totalTimeMs","totalSteps","peerIdsList","trigger","type","result","sentTs","getSentTs","setTargetPeerId","setTotalTimeMs","setTotalSteps","addPeerIds","setTrigger","setType","setResult","setSentTs","getTargetPeerId","getTotalTimeMs","getTotalSteps","getPeerIdsList","getTrigger","getType","getResult","Trigger","API","DISCOVERY","Type","CONTENT","PROVIDER","VALUE","Result","SUCCESS","ERROR","TIMEOUT","PENDING","setPeerIdsList","clearPeerIdsList","clearSentTs","hasSentTs","setProto3BooleanField","clearStartTs","hasStartTs","clearParams","hasParams","setQueryList","clearQueryList","connectionsList","getConnectionsList","dht","getDht","addConnections","setDht","setConnectionsList","clearConnectionsList","clearDht","hasDht","subsystems","getSubsystems","instantTs","getInstantTs","snapshotDurationMs","setSubsystems","setInstantTs","setSnapshotDurationMs","getSnapshotDurationMs","clearSubsystems","hasSubsystems","clearInstantTs","hasInstantTs","MessageCase","MESSAGE_NOT_SET","STATE","RUNTIME","getMessageCase","state","setState","setRuntime","clearVersion","hasVersion","clearState","hasState","clearRuntime","hasRuntime","signal","dataSource","setSignal","setDataSource","getSignal","getDataSource","Signal","SEND_DATA","START_PUSH_EMITTER","STOP_PUSH_EMITTER","PAUSE_PUSH_EMITTER","UNPAUSE_PUSH_EMITTER","DataSource","Status","ACTIVE","CLOSED","OPENING","CLOSING","Role","INITIATOR","RESPONDER","OFFSET_BASIS_32","input","hash","i","fnv1aBuffer","string","charCodeAt","fnv1aString","Error","statusNames","0","1","2","3","4","roleNames","transportNames","_slicedToArray","_toConsumableArray","getConnections","timepoint","getTime","format","timestamp","getSeconds","getAge","time","getAllConnections","timepoints","_ref","arguments","filter","_ref$latest","latest","reduce","previousConns","newConns","testConn","testConnection","some","existingConn","toString","getAllStreamsAtTime","connection","map","stream","getEnumByName","name","entry","Object","entries","find","_ref2","_ref3","values","join","parseInt","getLatestTimepoint","getTimeIndex","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","direction","byDirection","byType","Container","styled","span","theme","spacing","getColor","ChipText","StatusChip","chipMap","icon","colorKey","colorIndex","opacity","color","StatusContent","PeerIdContent","BytesContent","label","AgeContent","ContextWrappers","children","getTickOffsets","ticks","scale","tickGap","firstTickGap","domain","lastTickGap","totalGapValues","firstTickOffset","tickOffset","Array","fill","_","getTrafficChangesByPeer","dataset","keys","previousTimepointIndex","connectionsById","trafficByPeer","previousTimepoint","previousConn","validateNumbers","getTotalTraffic","dataIn","dataOut","getPeerIds","sorter","applyFilters","filteredConnections","sort","TicksContainer","div","height","width","TickLabel","fromSide","text","TickValue","TickUnit","AxisLabel","nbsp","DataTicks","dataDirection","topTick","tickOffsets","lowestTickUnitPair","Infinity","ticksFormatted","tickValue","formatDataSize","formattedValue","unit","tickIndex","style","key","TimeTicks","Math","round","tick","left","formatTime","StyledSvg","svg","StyledPath","path","isHighlighted","TimelinePaths","xScale","yScale","stackedData","leftGutter","globalPeerId","useContext","PeerContext","SetterContext","flip","pathDefs","useAreaChart","pathDef","d","onMouseEnter","onMouseLeave","FormWrapper","FirstSection","Control","InactiveSection","NumberFieldsWrapper","TooltipContent","TooltipPositioner","withTheme","override","containerRef","useRef","DataContext","TimeContext","setTimepoint","timeIndex","indexOf","controlWidth","sliderOverrides","assign","initialValues","tooltipProps","fixOn","Content","Positioner","tolerance","content","ref","onSubmit","stepIndex","setFieldValue","submitForm","onChange","max","TimelineInner","BarWrapper","onClick","PathsContainer","withResizeDetector","useStackedData","keyData","getKeys","getSorter","getNumericSorter","mapSorter","yScaleIn","stackedDataOut","yScaleOut","nice","Bar","forwardRef","propTypes","T","number","isRequired","func","node","IconButton","button","ButtonText","DataTypeControl","metadata","useState","setHighlighted","iconType","sample","upload","DataPanel","TimePanel","DataPanelItem","IconContainer","ControlPanel","ConnectionsTableRow","rowContentProps","columnDefs","peerIdRow","row","columnName","highlighted","ConnectionsTable","useTabularData","columns","connectionsColumnDefs","data","defaultSort","tableContentProps","sortColumn","setSortColumn","sortDirection","setSortDirection","DataTableRow","tags","approvedViz","componentBundle","Component","description","screenshot","isArray","validateComponentFields","connectionsTable","CatalogueCard","isSelected","CardContent","Tag","li","TagList","ul","StyledImg","img","StyledHeader","h3","StyledHeaderInner","CatalogueItem","handleSelect","src","source","tag","TabsWrapper","SelectedTab","UnselectedTab","ButtonWrapper","HeaderTabs","selectedTab","setSelectedTab","dispatchDataset","changeTab","tabIndex","action","SampleDataTab","title","samplePath","samples","UploadDataTab","ConnectWebsocketTab","SelectedComponent","viz","Main","CatalogueBkg","Header","Page","selected","setSelected","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","createContext","RuntimeContext","updateData","oldData","newData","appendToDataSet","DataProvider","initialData","initialTime","useReducer","dataSetters","includes","latestTimepoint","Provider","current","RootNodeContext","RootNodeProvider","rootNodeRef","refState","setRefState","useEffect","getFontFace","font","file","weight","nexa_light","nexa_bold","plexSans_extraLight","plexSans_light","plexSans_regular","plexSans_text","plexSans_medium","plexSans_semiBold","plexSans_bold","plexMono_light","plexMono_text","plexMono_semiBold","palette","background","contrast","primary","secondary","tertiary","highlight","num","typography","default","body","small","medium","large","heading","elem","size","rgb","tableCell","col","val","styles","ThemeSetter","ThemeProvider","GlobalFontFaceStyles","createGlobalStyle","fontFaces","GlobalDefaults","asc","props","viewBox","strokeLinejoin","strokeMiterlimit","desc","cancel","data-name","stroke","strokeWidth","check","uncheck","back","forward","doc","className","cloud","closed","closing","opening","active","disabled","offset","Icon","IconSvg","icons","areAllChecked","every","StyledList","StyledListItem","StyledToggleButton","checked","CheckboxList","fieldNames","as","a","async","newValue","Promise","all","toggleAll","toggleField","getInvertedDirection","top","bottom","right","getPosition","mainPosition","isVertical","centredSide","centredAxis","getBoxShadow","Target","clickToFix","isFixed","tickSize","offsets","Tick","invertedDirection","getTickBorderColor","getTickPosition","sideOptions","fixOnOptions","Tooltip","side","alwaysFix","setIsFixed","isShowing","setIsShowing","positionerRef","tickRef","useLayoutEffect","elemRect","getBoundingClientRect","boundsRect","marginLeft","marginTop","currentLeft","parseFloat","currentTop","min","updateOffset","e","stopPropagation","CONTROL_WIDTH","WIDTH","ActiveSection","BAR_HEIGHT","isLower","isUpper","NumberInput","isDefault","NumberLabelWrapper","NumberLabel","getMouseX","event","nativeEvent","clientX","getMousePosition","mouseX","getStepPosition","steps","stepIndexWithinMin","getStepIndex","position","getNearestFieldName","mousePosition","upperPosition","abs","Slider","stepInterval","isRange","ceil","lowerInputRef","upperInputRef","fieldIsSliding","setFieldSliding","lowerNumberInput","setLowerNumberInput","upperNumberInput","setUpperNumberInput","lowerStepIndex","upperStepIndex","lowerPosition","slideStart","fieldName","slideEnd","handleMouseMove","handleChange","handleNumberInput","target","isNaN","updateNumberInput","getValidatedIndex","wasValid","updateFieldValue","numberInputRef","activeElement","belowPercent","abovePercent","controlOffset","upperControlOffset","onMouseUp","onMouseMove","onMouseDown","step","onBlur","StyledButton","isActive","errors","uploadDataFile","onUploadStart","onDataLoaded","FileReader","onload","processUploadedData","currentTarget","readAsArrayBuffer","applySampleData","fetch","response","statusText","url","arrayBuffer","units","sigFigures","divider","toPrecision","formatNumber","Date","hr","padZero","getHours","getMinutes","sec","toLocaleString","minimumIntegerDigits","SampleDataButton","isLoading","setIsLoading","handleUploadStart","handleDataLoaded","isSample","buttonText","FileButton","NativeFileInput","RelativeSpan","UploadDataButton","fileName","setFileName","fileInputRef","getButtonText","click","files","Table","table","TableRow","tr","TableHead","th","TableCell","td","align","THead","thead","THeadRow","TBody","tbody","rowProps","prerenderedCells","useMemo","cellIndex","renderContent","cellProps","AccordionContent","isOpen","FilterButton","addFilter","removeFilter","FilterUi","initialFieldValues","filterUiProps","mapValues","setIsOpen","toggleOpen","fromEntries","newValues","setSubmitting","isEqual","enableReinitialize","dirty","ButtonsTray","DataTableHead","columnDef","isSortable","isSorted","isFilterable","sortIconType","getSortType","sortable","filterable","header","defaultSortDirection","defaultDirection","sortIconAction","DataTable","DefaultDataTableRow","DefaultDataTableHead","rowIndex","NumWrapper","Unit","FormatedNumber","TimeNumber","DataNumber","SegmentedPeerId","PeerIdTooltip","isCopied","setIsCopied","segmentsLength","peerIdSegments","segment","copyButtonText","clipboard","writeText","setTimeout","TruncatedPeerId","PeerId","truncatedId","truncationLength","updateFilters","filters","doFilter","mapFilter","updateValues","newFilter","filterName","filterIndex","findIndex","splice","existingFilter","useFilter","initialFilters","dispatchFilters","useCallback","datum","arrayOf","shape","any","noopSorter","defaultOptions","useSorter","directionOptions","directionOptionKeys","option","validateDirection","b","makeSorter","array","bool","stackData","keyedData","stack","dataStacker","maxY","maxOverall","timeDatum","maxHere","upperAreaPoint","getMaxAreaPeak","scaleTime","minX","maxX","scaleLinear","getKeyedData","mapSorterToColumn","colName","sortColumnIndex","DefaultRenderer","defaultFilter","columnsWithDefaults","column","getProps","applyColumnDefaults","rawContentProps","columnIndex","getTableContentProps","calculate","columnProps","calculated","doCalc","applyCalculations","sortDef","getInitialSortDef","forEach","filteredContentProps","required","elementType","instanceOf","Map","filterUi","areaMaker","range","area","x","y0","y1","scaleAreaChart","getPathDefs","targetValue","DefaultUi","getListFilter","options","defaultValue","getRangeFilter","getStringSorter","caselessSorter","Intl","Collator","compare","sortNum","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","binary","enums","helpers","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","getMaxValue","stringSorter","numericSorter","peerIdCol","dataInCol","dataOutCol","ageCol","streamsCol","transportCol","transportIdBin","transportIdInt","statusSorter","statusFilter","openFirstOrder","closedFirstOrder","statusOrder","statusNamesList"],"mappings":"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","file":"static/js/main.a3a6af44.chunk.js","sourcesContent":["'use strict';\n\nvar _require = require('@libp2p-observer/proto'),\n    deserializeBinary = _require.deserializeBinary,\n    fnv1a = _require.fnv1a;\n\nfunction parseBuffer(buf) {\n  // Expects a binary file with this structure:\n  // - 4-byte version number\n  // - The following is repeated\n  // - 4-byte checksum of following message\n  // - 4-byte length of following message\n  // - message (typically state)\n  var byteLength = Buffer.byteLength(buf);\n  var bytesParsed = 0;\n  var messages = {\n    states: [],\n    runtime: null\n  };\n  var versionNumberLength = 4;\n  var messageChecksumLength = 4;\n  var messageSizeLength = 4; // Skip version number\n\n  bytesParsed += versionNumberLength; // TODO - add async variant\n\n  while (bytesParsed < byteLength) {\n    var messageChecksum = buf.readUIntLE(bytesParsed, messageChecksumLength);\n    bytesParsed += messageChecksumLength;\n    var messageSize = buf.readUIntLE(bytesParsed, messageSizeLength);\n    var messageStart = bytesParsed + messageSizeLength;\n    var messageEnd = messageStart + messageSize;\n    var messageBin = buf.slice(messageStart, messageEnd);\n    var validChecksum = messageChecksum === fnv1a(messageBin); // TODO: bubble an error message for an invalid checksum\n\n    if (validChecksum) {\n      addMessageContent(messageBin, messages);\n    } else {\n      console.error(\"Skipped bytes from \".concat(messageStart, \" to \").concat(messageEnd, \" due to checksum mismatch\"));\n    }\n\n    bytesParsed = messageEnd;\n  }\n\n  return messages;\n}\n\nfunction addMessageContent(messageBin, messages) {\n  var message = deserializeBinary(messageBin);\n  var runtimeContent = message.getRuntime();\n  var stateContent = message.getState();\n\n  if (stateContent) {\n    messages.states.push(stateContent);\n  }\n\n  if (runtimeContent) {\n    // By current proto def, runtime data can't reasonably change during a session, so,\n    // Runtime has no timestamp. If this changes, make `runtime` an array and push here.\n    messages.runtime = runtimeContent;\n  }\n}\n\nfunction parseArrayBuffer(arrayBuf) {\n  return parseBuffer(Buffer.from(arrayBuf));\n}\n\nfunction parseBase64(dataString) {\n  return parseBuffer(Buffer.from(dataString, 'base64'));\n}\n\nfunction parseImport(rawData) {\n  if (rawData instanceof Buffer) return parseBuffer(rawData);\n  if (rawData instanceof ArrayBuffer) return parseArrayBuffer(rawData);\n  if (rawData instanceof String) return parseBase64(rawData);\n}\n\nmodule.exports = {\n  parseArrayBuffer: parseArrayBuffer,\n  parseBase64: parseBase64,\n  parseBuffer: parseBuffer,\n  parseImport: parseImport\n};","'use strict';\n\nvar proto = require('./lib/introspection_pb');\n\nvar fnv1a = require('./lib/fnv1a');\n\nmodule.exports = {\n  deserializeBinary: proto.ProtocolDataPacket.deserializeBinary,\n  fnv1a: fnv1a,\n  proto: proto\n};","/* eslint-disable */\n// source: protobuf/introspection.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\ngoog.exportSymbol('proto.introspection.ClientSignal', null, global);\ngoog.exportSymbol('proto.introspection.ClientSignal.DataSource', null, global);\ngoog.exportSymbol('proto.introspection.ClientSignal.Signal', null, global);\ngoog.exportSymbol('proto.introspection.Connection', null, global);\ngoog.exportSymbol('proto.introspection.Connection.Attributes', null, global);\ngoog.exportSymbol('proto.introspection.Connection.RelayedOverCase', null, global);\ngoog.exportSymbol('proto.introspection.Connection.Timeline', null, global);\ngoog.exportSymbol('proto.introspection.DHT', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Params', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query.Result', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query.Trigger', null, global);\ngoog.exportSymbol('proto.introspection.DHT.Query.Type', null, global);\ngoog.exportSymbol('proto.introspection.DataGauge', null, global);\ngoog.exportSymbol('proto.introspection.EndpointPair', null, global);\ngoog.exportSymbol('proto.introspection.ProtocolDataPacket', null, global);\ngoog.exportSymbol('proto.introspection.ProtocolDataPacket.MessageCase', null, global);\ngoog.exportSymbol('proto.introspection.ResultCounter', null, global);\ngoog.exportSymbol('proto.introspection.Role', null, global);\ngoog.exportSymbol('proto.introspection.Runtime', null, global);\ngoog.exportSymbol('proto.introspection.SlidingCounter', null, global);\ngoog.exportSymbol('proto.introspection.State', null, global);\ngoog.exportSymbol('proto.introspection.Status', null, global);\ngoog.exportSymbol('proto.introspection.Stream', null, global);\ngoog.exportSymbol('proto.introspection.Stream.ConnectionRef', null, global);\ngoog.exportSymbol('proto.introspection.Stream.ConnectionRef.ConnectionCase', null, global);\ngoog.exportSymbol('proto.introspection.Stream.Timeline', null, global);\ngoog.exportSymbol('proto.introspection.StreamList', null, global);\ngoog.exportSymbol('proto.introspection.Subsystems', null, global);\ngoog.exportSymbol('proto.introspection.Traffic', null, global);\ngoog.exportSymbol('proto.introspection.Version', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.introspection.Version = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Version, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Version.displayName = 'proto.introspection.Version';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.ResultCounter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.ResultCounter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.ResultCounter.displayName = 'proto.introspection.ResultCounter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.SlidingCounter = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.SlidingCounter, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.SlidingCounter.displayName = 'proto.introspection.SlidingCounter';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DataGauge = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.DataGauge, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DataGauge.displayName = 'proto.introspection.DataGauge';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Runtime = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Runtime, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Runtime.displayName = 'proto.introspection.Runtime';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.EndpointPair = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.EndpointPair, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.EndpointPair.displayName = 'proto.introspection.EndpointPair';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Traffic = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Traffic, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Traffic.displayName = 'proto.introspection.Traffic';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.StreamList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.StreamList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.StreamList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.StreamList.displayName = 'proto.introspection.StreamList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Connection = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.Connection.repeatedFields_, proto.introspection.Connection.oneofGroups_);\n};\n\ngoog.inherits(proto.introspection.Connection, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Connection.displayName = 'proto.introspection.Connection';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Connection.Timeline = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Connection.Timeline, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Connection.Timeline.displayName = 'proto.introspection.Connection.Timeline';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Connection.Attributes = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Connection.Attributes, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Connection.Attributes.displayName = 'proto.introspection.Connection.Attributes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Stream = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.Stream.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.Stream, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Stream.displayName = 'proto.introspection.Stream';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Stream.ConnectionRef = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.introspection.Stream.ConnectionRef.oneofGroups_);\n};\n\ngoog.inherits(proto.introspection.Stream.ConnectionRef, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Stream.ConnectionRef.displayName = 'proto.introspection.Stream.ConnectionRef';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Stream.Timeline = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.Stream.Timeline, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Stream.Timeline.displayName = 'proto.introspection.Stream.Timeline';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DHT = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.DHT.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.DHT, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DHT.displayName = 'proto.introspection.DHT';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DHT.Params = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.DHT.Params, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DHT.Params.displayName = 'proto.introspection.DHT.Params';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.DHT.Query = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.DHT.Query.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.DHT.Query, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.DHT.Query.displayName = 'proto.introspection.DHT.Query';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.Subsystems = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.introspection.Subsystems.repeatedFields_, null);\n};\n\ngoog.inherits(proto.introspection.Subsystems, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.Subsystems.displayName = 'proto.introspection.Subsystems';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.State = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.State, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.State.displayName = 'proto.introspection.State';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.ProtocolDataPacket = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.introspection.ProtocolDataPacket.oneofGroups_);\n};\n\ngoog.inherits(proto.introspection.ProtocolDataPacket, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.ProtocolDataPacket.displayName = 'proto.introspection.ProtocolDataPacket';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.introspection.ClientSignal = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.introspection.ClientSignal, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.introspection.ClientSignal.displayName = 'proto.introspection.ClientSignal';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Version.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Version.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Version} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Version.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Version}\n */\n\n\nproto.introspection.Version.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Version();\n  return proto.introspection.Version.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Version} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Version}\n */\n\n\nproto.introspection.Version.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setVersion(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Version.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Version.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Version} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Version.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n};\n/**\n * optional uint32 version = 1;\n * @return {number}\n */\n\n\nproto.introspection.Version.prototype.getVersion = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.Version.prototype.setVersion = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.ResultCounter.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.ResultCounter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.ResultCounter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.ResultCounter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      total: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      ok: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      err: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.ResultCounter}\n */\n\n\nproto.introspection.ResultCounter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.ResultCounter();\n  return proto.introspection.ResultCounter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.ResultCounter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.ResultCounter}\n */\n\n\nproto.introspection.ResultCounter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setTotal(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOk(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setErr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.ResultCounter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.ResultCounter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.ResultCounter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.ResultCounter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getOk();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n\n  f = message.getErr();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * optional uint32 total = 1;\n * @return {number}\n */\n\n\nproto.introspection.ResultCounter.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.ResultCounter.prototype.setTotal = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 ok = 2;\n * @return {number}\n */\n\n\nproto.introspection.ResultCounter.prototype.getOk = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.ResultCounter.prototype.setOk = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint32 err = 3;\n * @return {number}\n */\n\n\nproto.introspection.ResultCounter.prototype.getErr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.ResultCounter.prototype.setErr = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.SlidingCounter.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.SlidingCounter.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.SlidingCounter} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.SlidingCounter.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      over1m: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      over5m: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      over15m: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      over30m: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      over1hr: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      over2hr: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      over4hr: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      over8hr: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      over12hr: jspb.Message.getFieldWithDefault(msg, 9, 0),\n      over24hr: jspb.Message.getFieldWithDefault(msg, 10, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.SlidingCounter}\n */\n\n\nproto.introspection.SlidingCounter.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.SlidingCounter();\n  return proto.introspection.SlidingCounter.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.SlidingCounter} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.SlidingCounter}\n */\n\n\nproto.introspection.SlidingCounter.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver1m(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver5m(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver15m(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver30m(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver1hr(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver2hr(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver4hr(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver8hr(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver12hr(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setOver24hr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.SlidingCounter.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.SlidingCounter.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.SlidingCounter} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.SlidingCounter.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOver1m();\n\n  if (f !== 0) {\n    writer.writeUint32(1, f);\n  }\n\n  f = message.getOver5m();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n\n  f = message.getOver15m();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n\n  f = message.getOver30m();\n\n  if (f !== 0) {\n    writer.writeUint32(4, f);\n  }\n\n  f = message.getOver1hr();\n\n  if (f !== 0) {\n    writer.writeUint32(5, f);\n  }\n\n  f = message.getOver2hr();\n\n  if (f !== 0) {\n    writer.writeUint32(6, f);\n  }\n\n  f = message.getOver4hr();\n\n  if (f !== 0) {\n    writer.writeUint32(7, f);\n  }\n\n  f = message.getOver8hr();\n\n  if (f !== 0) {\n    writer.writeUint32(8, f);\n  }\n\n  f = message.getOver12hr();\n\n  if (f !== 0) {\n    writer.writeUint32(9, f);\n  }\n\n  f = message.getOver24hr();\n\n  if (f !== 0) {\n    writer.writeUint32(10, f);\n  }\n};\n/**\n * optional uint32 over_1m = 1;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver1m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver1m = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 over_5m = 2;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver5m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver5m = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint32 over_15m = 3;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver15m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver15m = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint32 over_30m = 4;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver30m = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver30m = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint32 over_1hr = 5;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver1hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver1hr = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional uint32 over_2hr = 6;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver2hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver2hr = function (value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional uint32 over_4hr = 7;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver4hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver4hr = function (value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional uint32 over_8hr = 8;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver8hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver8hr = function (value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional uint32 over_12hr = 9;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver12hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 9, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver12hr = function (value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n/**\n * optional uint32 over_24hr = 10;\n * @return {number}\n */\n\n\nproto.introspection.SlidingCounter.prototype.getOver24hr = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.SlidingCounter.prototype.setOver24hr = function (value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DataGauge.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DataGauge.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DataGauge} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DataGauge.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      cumBytes: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      cumPackets: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      instBw: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DataGauge}\n */\n\n\nproto.introspection.DataGauge.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DataGauge();\n  return proto.introspection.DataGauge.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DataGauge} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DataGauge}\n */\n\n\nproto.introspection.DataGauge.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCumBytes(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setCumPackets(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setInstBw(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DataGauge.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DataGauge.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DataGauge} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DataGauge.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getCumBytes();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCumPackets();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getInstBw();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 cum_bytes = 1;\n * @return {number}\n */\n\n\nproto.introspection.DataGauge.prototype.getCumBytes = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DataGauge.prototype.setCumBytes = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 cum_packets = 2;\n * @return {number}\n */\n\n\nproto.introspection.DataGauge.prototype.getCumPackets = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DataGauge.prototype.setCumPackets = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 inst_bw = 3;\n * @return {number}\n */\n\n\nproto.introspection.DataGauge.prototype.getInstBw = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DataGauge.prototype.setInstBw = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Runtime.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Runtime.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Runtime} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Runtime.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      implementation: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      version: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      platform: jspb.Message.getFieldWithDefault(msg, 3, ''),\n      peerId: jspb.Message.getFieldWithDefault(msg, 4, '')\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Runtime}\n */\n\n\nproto.introspection.Runtime.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Runtime();\n  return proto.introspection.Runtime.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Runtime} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Runtime}\n */\n\n\nproto.introspection.Runtime.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setImplementation(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVersion(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPlatform(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Runtime.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Runtime.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Runtime} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Runtime.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getImplementation();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getVersion();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPlatform();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n};\n/**\n * optional string implementation = 1;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getImplementation = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setImplementation = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string version = 2;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getVersion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setVersion = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string platform = 3;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getPlatform = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setPlatform = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string peer_id = 4;\n * @return {string}\n */\n\n\nproto.introspection.Runtime.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Runtime.prototype.setPeerId = function (value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.EndpointPair.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.EndpointPair.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.EndpointPair} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.EndpointPair.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      srcMultiaddr: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      dstMultiaddr: jspb.Message.getFieldWithDefault(msg, 2, '')\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.EndpointPair}\n */\n\n\nproto.introspection.EndpointPair.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.EndpointPair();\n  return proto.introspection.EndpointPair.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.EndpointPair} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.EndpointPair}\n */\n\n\nproto.introspection.EndpointPair.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSrcMultiaddr(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDstMultiaddr(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.EndpointPair.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.EndpointPair.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.EndpointPair} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.EndpointPair.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSrcMultiaddr();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getDstMultiaddr();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string src_multiaddr = 1;\n * @return {string}\n */\n\n\nproto.introspection.EndpointPair.prototype.getSrcMultiaddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.EndpointPair.prototype.setSrcMultiaddr = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string dst_multiaddr = 2;\n * @return {string}\n */\n\n\nproto.introspection.EndpointPair.prototype.getDstMultiaddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.EndpointPair.prototype.setDstMultiaddr = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Traffic.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Traffic.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Traffic} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Traffic.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      trafficIn: (f = msg.getTrafficIn()) && proto.introspection.DataGauge.toObject(includeInstance, f),\n      trafficOut: (f = msg.getTrafficOut()) && proto.introspection.DataGauge.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Traffic}\n */\n\n\nproto.introspection.Traffic.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Traffic();\n  return proto.introspection.Traffic.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Traffic} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Traffic}\n */\n\n\nproto.introspection.Traffic.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.DataGauge();\n        reader.readMessage(value, proto.introspection.DataGauge.deserializeBinaryFromReader);\n        msg.setTrafficIn(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.DataGauge();\n        reader.readMessage(value, proto.introspection.DataGauge.deserializeBinaryFromReader);\n        msg.setTrafficOut(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Traffic.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Traffic.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Traffic} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Traffic.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTrafficIn();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.DataGauge.serializeBinaryToWriter);\n  }\n\n  f = message.getTrafficOut();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.DataGauge.serializeBinaryToWriter);\n  }\n};\n/**\n * optional DataGauge traffic_in = 1;\n * @return {?proto.introspection.DataGauge}\n */\n\n\nproto.introspection.Traffic.prototype.getTrafficIn = function () {\n  return (\n    /** @type{?proto.introspection.DataGauge} */\n    jspb.Message.getWrapperField(this, proto.introspection.DataGauge, 1)\n  );\n};\n/** @param {?proto.introspection.DataGauge|undefined} value */\n\n\nproto.introspection.Traffic.prototype.setTrafficIn = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Traffic.prototype.clearTrafficIn = function () {\n  this.setTrafficIn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Traffic.prototype.hasTrafficIn = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional DataGauge traffic_out = 2;\n * @return {?proto.introspection.DataGauge}\n */\n\n\nproto.introspection.Traffic.prototype.getTrafficOut = function () {\n  return (\n    /** @type{?proto.introspection.DataGauge} */\n    jspb.Message.getWrapperField(this, proto.introspection.DataGauge, 2)\n  );\n};\n/** @param {?proto.introspection.DataGauge|undefined} value */\n\n\nproto.introspection.Traffic.prototype.setTrafficOut = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Traffic.prototype.clearTrafficOut = function () {\n  this.setTrafficOut(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Traffic.prototype.hasTrafficOut = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.StreamList.repeatedFields_ = [1, 2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.StreamList.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.StreamList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.StreamList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.StreamList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      streamIdsList: msg.getStreamIdsList_asB64(),\n      streamsList: jspb.Message.toObjectList(msg.getStreamsList(), proto.introspection.Stream.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.StreamList}\n */\n\n\nproto.introspection.StreamList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.StreamList();\n  return proto.introspection.StreamList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.StreamList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.StreamList}\n */\n\n\nproto.introspection.StreamList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.addStreamIds(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.Stream();\n        reader.readMessage(value, proto.introspection.Stream.deserializeBinaryFromReader);\n        msg.addStreams(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.StreamList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.StreamList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.StreamList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.StreamList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getStreamIdsList_asU8();\n\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(1, f);\n  }\n\n  f = message.getStreamsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.introspection.Stream.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated bytes stream_ids = 1;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamIdsList = function () {\n  return (\n    /** @type {!(Array<!Uint8Array>|Array<string>)} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * repeated bytes stream_ids = 1;\n * This is a type-conversion wrapper around `getStreamIdsList()`\n * @return {!Array<string>}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamIdsList_asB64 = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.bytesListAsB64(this.getStreamIdsList())\n  );\n};\n/**\n * repeated bytes stream_ids = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getStreamIdsList()`\n * @return {!Array<!Uint8Array>}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamIdsList_asU8 = function () {\n  return (\n    /** @type {!Array<!Uint8Array>} */\n    jspb.Message.bytesListAsU8(this.getStreamIdsList())\n  );\n};\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\n\n\nproto.introspection.StreamList.prototype.setStreamIdsList = function (value) {\n  jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.StreamList.prototype.addStreamIds = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.StreamList.prototype.clearStreamIdsList = function () {\n  this.setStreamIdsList([]);\n};\n/**\n * repeated Stream streams = 2;\n * @return {!Array<!proto.introspection.Stream>}\n */\n\n\nproto.introspection.StreamList.prototype.getStreamsList = function () {\n  return (\n    /** @type{!Array<!proto.introspection.Stream>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.introspection.Stream, 2)\n  );\n};\n/** @param {!Array<!proto.introspection.Stream>} value */\n\n\nproto.introspection.StreamList.prototype.setStreamsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.introspection.Stream=} opt_value\n * @param {number=} opt_index\n * @return {!proto.introspection.Stream}\n */\n\n\nproto.introspection.StreamList.prototype.addStreams = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.introspection.Stream, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.StreamList.prototype.clearStreamsList = function () {\n  this.setStreamsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.Connection.repeatedFields_ = [99];\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\nproto.introspection.Connection.oneofGroups_ = [[16, 17]];\n/**\n * @enum {number}\n */\n\nproto.introspection.Connection.RelayedOverCase = {\n  RELAYED_OVER_NOT_SET: 0,\n  CONN_ID: 16,\n  CONN: 17\n};\n/**\n * @return {proto.introspection.Connection.RelayedOverCase}\n */\n\nproto.introspection.Connection.prototype.getRelayedOverCase = function () {\n  return (\n    /** @type {proto.introspection.Connection.RelayedOverCase} */\n    jspb.Message.computeOneofCase(this, proto.introspection.Connection.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Connection.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Connection.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Connection} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Connection.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      peerId: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      status: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      transportId: msg.getTransportId_asB64(),\n      endpoints: (f = msg.getEndpoints()) && proto.introspection.EndpointPair.toObject(includeInstance, f),\n      timeline: (f = msg.getTimeline()) && proto.introspection.Connection.Timeline.toObject(includeInstance, f),\n      role: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      traffic: (f = msg.getTraffic()) && proto.introspection.Traffic.toObject(includeInstance, f),\n      attribs: (f = msg.getAttribs()) && proto.introspection.Connection.Attributes.toObject(includeInstance, f),\n      latencyNs: jspb.Message.getFieldWithDefault(msg, 10, 0),\n      streams: (f = msg.getStreams()) && proto.introspection.StreamList.toObject(includeInstance, f),\n      connId: msg.getConnId_asB64(),\n      conn: (f = msg.getConn()) && proto.introspection.Connection.toObject(includeInstance, f),\n      userProvidedTagsList: (f = jspb.Message.getRepeatedField(msg, 99)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Connection}\n */\n\n\nproto.introspection.Connection.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Connection();\n  return proto.introspection.Connection.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Connection} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Connection}\n */\n\n\nproto.introspection.Connection.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPeerId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.introspection.Status} */\n        reader.readEnum();\n        msg.setStatus(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setTransportId(value);\n        break;\n\n      case 5:\n        var value = new proto.introspection.EndpointPair();\n        reader.readMessage(value, proto.introspection.EndpointPair.deserializeBinaryFromReader);\n        msg.setEndpoints(value);\n        break;\n\n      case 6:\n        var value = new proto.introspection.Connection.Timeline();\n        reader.readMessage(value, proto.introspection.Connection.Timeline.deserializeBinaryFromReader);\n        msg.setTimeline(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!proto.introspection.Role} */\n        reader.readEnum();\n        msg.setRole(value);\n        break;\n\n      case 8:\n        var value = new proto.introspection.Traffic();\n        reader.readMessage(value, proto.introspection.Traffic.deserializeBinaryFromReader);\n        msg.setTraffic(value);\n        break;\n\n      case 9:\n        var value = new proto.introspection.Connection.Attributes();\n        reader.readMessage(value, proto.introspection.Connection.Attributes.deserializeBinaryFromReader);\n        msg.setAttribs(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setLatencyNs(value);\n        break;\n\n      case 11:\n        var value = new proto.introspection.StreamList();\n        reader.readMessage(value, proto.introspection.StreamList.deserializeBinaryFromReader);\n        msg.setStreams(value);\n        break;\n\n      case 16:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setConnId(value);\n        break;\n\n      case 17:\n        var value = new proto.introspection.Connection();\n        reader.readMessage(value, proto.introspection.Connection.deserializeBinaryFromReader);\n        msg.setConn(value);\n        break;\n\n      case 99:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addUserProvidedTags(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Connection.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Connection} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Connection.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n\n  f = message.getTransportId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(4, f);\n  }\n\n  f = message.getEndpoints();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.introspection.EndpointPair.serializeBinaryToWriter);\n  }\n\n  f = message.getTimeline();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.introspection.Connection.Timeline.serializeBinaryToWriter);\n  }\n\n  f = message.getRole();\n\n  if (f !== 0.0) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getTraffic();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.introspection.Traffic.serializeBinaryToWriter);\n  }\n\n  f = message.getAttribs();\n\n  if (f != null) {\n    writer.writeMessage(9, f, proto.introspection.Connection.Attributes.serializeBinaryToWriter);\n  }\n\n  f = message.getLatencyNs();\n\n  if (f !== 0) {\n    writer.writeUint64(10, f);\n  }\n\n  f = message.getStreams();\n\n  if (f != null) {\n    writer.writeMessage(11, f, proto.introspection.StreamList.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 16);\n\n  if (f != null) {\n    writer.writeBytes(16, f);\n  }\n\n  f = message.getConn();\n\n  if (f != null) {\n    writer.writeMessage(17, f, proto.introspection.Connection.serializeBinaryToWriter);\n  }\n\n  f = message.getUserProvidedTagsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(99, f);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Connection.Timeline.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Connection.Timeline.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Connection.Timeline} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Connection.Timeline.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      openTs: (f = msg.getOpenTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      upgradedTs: (f = msg.getUpgradedTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      closeTs: (f = msg.getCloseTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Connection.Timeline}\n */\n\n\nproto.introspection.Connection.Timeline.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Connection.Timeline();\n  return proto.introspection.Connection.Timeline.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Connection.Timeline} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Connection.Timeline}\n */\n\n\nproto.introspection.Connection.Timeline.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setOpenTs(value);\n        break;\n\n      case 2:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setUpgradedTs(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setCloseTs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Connection.Timeline.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Connection.Timeline} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Connection.Timeline.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOpenTs();\n\n  if (f != null) {\n    writer.writeMessage(1, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getUpgradedTs();\n\n  if (f != null) {\n    writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getCloseTs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional google.protobuf.Timestamp open_ts = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.getOpenTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Connection.Timeline.prototype.setOpenTs = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.Timeline.prototype.clearOpenTs = function () {\n  this.setOpenTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.hasOpenTs = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional google.protobuf.Timestamp upgraded_ts = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.getUpgradedTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Connection.Timeline.prototype.setUpgradedTs = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.Timeline.prototype.clearUpgradedTs = function () {\n  this.setUpgradedTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.hasUpgradedTs = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional google.protobuf.Timestamp close_ts = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.getCloseTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Connection.Timeline.prototype.setCloseTs = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.Timeline.prototype.clearCloseTs = function () {\n  this.setCloseTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.Timeline.prototype.hasCloseTs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Connection.Attributes.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Connection.Attributes.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Connection.Attributes} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Connection.Attributes.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      multiplexer: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      encryption: jspb.Message.getFieldWithDefault(msg, 2, '')\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Connection.Attributes}\n */\n\n\nproto.introspection.Connection.Attributes.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Connection.Attributes();\n  return proto.introspection.Connection.Attributes.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Connection.Attributes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Connection.Attributes}\n */\n\n\nproto.introspection.Connection.Attributes.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMultiplexer(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEncryption(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.Attributes.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Connection.Attributes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Connection.Attributes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Connection.Attributes.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMultiplexer();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getEncryption();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string multiplexer = 1;\n * @return {string}\n */\n\n\nproto.introspection.Connection.Attributes.prototype.getMultiplexer = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Connection.Attributes.prototype.setMultiplexer = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string encryption = 2;\n * @return {string}\n */\n\n\nproto.introspection.Connection.Attributes.prototype.getEncryption = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Connection.Attributes.prototype.setEncryption = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional bytes id = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Connection.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/**\n * optional bytes id = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Connection.prototype.setId = function (value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string peer_id = 2;\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Connection.prototype.setPeerId = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Status status = 3;\n * @return {!proto.introspection.Status}\n */\n\n\nproto.introspection.Connection.prototype.getStatus = function () {\n  return (\n    /** @type {!proto.introspection.Status} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {!proto.introspection.Status} value */\n\n\nproto.introspection.Connection.prototype.setStatus = function (value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * optional bytes transport_id = 4;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Connection.prototype.getTransportId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 4, '')\n  );\n};\n/**\n * optional bytes transport_id = 4;\n * This is a type-conversion wrapper around `getTransportId()`\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getTransportId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getTransportId())\n  );\n};\n/**\n * optional bytes transport_id = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTransportId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.getTransportId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getTransportId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Connection.prototype.setTransportId = function (value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n/**\n * optional EndpointPair endpoints = 5;\n * @return {?proto.introspection.EndpointPair}\n */\n\n\nproto.introspection.Connection.prototype.getEndpoints = function () {\n  return (\n    /** @type{?proto.introspection.EndpointPair} */\n    jspb.Message.getWrapperField(this, proto.introspection.EndpointPair, 5)\n  );\n};\n/** @param {?proto.introspection.EndpointPair|undefined} value */\n\n\nproto.introspection.Connection.prototype.setEndpoints = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearEndpoints = function () {\n  this.setEndpoints(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasEndpoints = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional Timeline timeline = 6;\n * @return {?proto.introspection.Connection.Timeline}\n */\n\n\nproto.introspection.Connection.prototype.getTimeline = function () {\n  return (\n    /** @type{?proto.introspection.Connection.Timeline} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection.Timeline, 6)\n  );\n};\n/** @param {?proto.introspection.Connection.Timeline|undefined} value */\n\n\nproto.introspection.Connection.prototype.setTimeline = function (value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearTimeline = function () {\n  this.setTimeline(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasTimeline = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional Role role = 7;\n * @return {!proto.introspection.Role}\n */\n\n\nproto.introspection.Connection.prototype.getRole = function () {\n  return (\n    /** @type {!proto.introspection.Role} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {!proto.introspection.Role} value */\n\n\nproto.introspection.Connection.prototype.setRole = function (value) {\n  jspb.Message.setProto3EnumField(this, 7, value);\n};\n/**\n * optional Traffic traffic = 8;\n * @return {?proto.introspection.Traffic}\n */\n\n\nproto.introspection.Connection.prototype.getTraffic = function () {\n  return (\n    /** @type{?proto.introspection.Traffic} */\n    jspb.Message.getWrapperField(this, proto.introspection.Traffic, 8)\n  );\n};\n/** @param {?proto.introspection.Traffic|undefined} value */\n\n\nproto.introspection.Connection.prototype.setTraffic = function (value) {\n  jspb.Message.setWrapperField(this, 8, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearTraffic = function () {\n  this.setTraffic(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasTraffic = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n/**\n * optional Attributes attribs = 9;\n * @return {?proto.introspection.Connection.Attributes}\n */\n\n\nproto.introspection.Connection.prototype.getAttribs = function () {\n  return (\n    /** @type{?proto.introspection.Connection.Attributes} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection.Attributes, 9)\n  );\n};\n/** @param {?proto.introspection.Connection.Attributes|undefined} value */\n\n\nproto.introspection.Connection.prototype.setAttribs = function (value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearAttribs = function () {\n  this.setAttribs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasAttribs = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint64 latency_ns = 10;\n * @return {number}\n */\n\n\nproto.introspection.Connection.prototype.getLatencyNs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.Connection.prototype.setLatencyNs = function (value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n/**\n * optional StreamList streams = 11;\n * @return {?proto.introspection.StreamList}\n */\n\n\nproto.introspection.Connection.prototype.getStreams = function () {\n  return (\n    /** @type{?proto.introspection.StreamList} */\n    jspb.Message.getWrapperField(this, proto.introspection.StreamList, 11)\n  );\n};\n/** @param {?proto.introspection.StreamList|undefined} value */\n\n\nproto.introspection.Connection.prototype.setStreams = function (value) {\n  jspb.Message.setWrapperField(this, 11, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearStreams = function () {\n  this.setStreams(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasStreams = function () {\n  return jspb.Message.getField(this, 11) != null;\n};\n/**\n * optional bytes conn_id = 16;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Connection.prototype.getConnId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 16, '')\n  );\n};\n/**\n * optional bytes conn_id = 16;\n * This is a type-conversion wrapper around `getConnId()`\n * @return {string}\n */\n\n\nproto.introspection.Connection.prototype.getConnId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getConnId())\n  );\n};\n/**\n * optional bytes conn_id = 16;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getConnId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Connection.prototype.getConnId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getConnId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Connection.prototype.setConnId = function (value) {\n  jspb.Message.setOneofField(this, 16, proto.introspection.Connection.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearConnId = function () {\n  jspb.Message.setOneofField(this, 16, proto.introspection.Connection.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasConnId = function () {\n  return jspb.Message.getField(this, 16) != null;\n};\n/**\n * optional Connection conn = 17;\n * @return {?proto.introspection.Connection}\n */\n\n\nproto.introspection.Connection.prototype.getConn = function () {\n  return (\n    /** @type{?proto.introspection.Connection} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection, 17)\n  );\n};\n/** @param {?proto.introspection.Connection|undefined} value */\n\n\nproto.introspection.Connection.prototype.setConn = function (value) {\n  jspb.Message.setOneofWrapperField(this, 17, proto.introspection.Connection.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Connection.prototype.clearConn = function () {\n  this.setConn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Connection.prototype.hasConn = function () {\n  return jspb.Message.getField(this, 17) != null;\n};\n/**\n * repeated string user_provided_tags = 99;\n * @return {!Array<string>}\n */\n\n\nproto.introspection.Connection.prototype.getUserProvidedTagsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 99)\n  );\n};\n/** @param {!Array<string>} value */\n\n\nproto.introspection.Connection.prototype.setUserProvidedTagsList = function (value) {\n  jspb.Message.setField(this, 99, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.Connection.prototype.addUserProvidedTags = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 99, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.Connection.prototype.clearUserProvidedTagsList = function () {\n  this.setUserProvidedTagsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.Stream.repeatedFields_ = [99];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Stream.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Stream.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Stream} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Stream.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      protocol: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      role: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      traffic: (f = msg.getTraffic()) && proto.introspection.Traffic.toObject(includeInstance, f),\n      conn: (f = msg.getConn()) && proto.introspection.Stream.ConnectionRef.toObject(includeInstance, f),\n      timeline: (f = msg.getTimeline()) && proto.introspection.Stream.Timeline.toObject(includeInstance, f),\n      status: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      latencyNs: jspb.Message.getFieldWithDefault(msg, 16, 0),\n      userProvidedTagsList: (f = jspb.Message.getRepeatedField(msg, 99)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Stream}\n */\n\n\nproto.introspection.Stream.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Stream();\n  return proto.introspection.Stream.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Stream} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Stream}\n */\n\n\nproto.introspection.Stream.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProtocol(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.introspection.Role} */\n        reader.readEnum();\n        msg.setRole(value);\n        break;\n\n      case 4:\n        var value = new proto.introspection.Traffic();\n        reader.readMessage(value, proto.introspection.Traffic.deserializeBinaryFromReader);\n        msg.setTraffic(value);\n        break;\n\n      case 5:\n        var value = new proto.introspection.Stream.ConnectionRef();\n        reader.readMessage(value, proto.introspection.Stream.ConnectionRef.deserializeBinaryFromReader);\n        msg.setConn(value);\n        break;\n\n      case 6:\n        var value = new proto.introspection.Stream.Timeline();\n        reader.readMessage(value, proto.introspection.Stream.Timeline.deserializeBinaryFromReader);\n        msg.setTimeline(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!proto.introspection.Status} */\n        reader.readEnum();\n        msg.setStatus(value);\n        break;\n\n      case 16:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setLatencyNs(value);\n        break;\n\n      case 99:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addUserProvidedTags(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Stream.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Stream} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Stream.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getProtocol();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getRole();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n\n  f = message.getTraffic();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.introspection.Traffic.serializeBinaryToWriter);\n  }\n\n  f = message.getConn();\n\n  if (f != null) {\n    writer.writeMessage(5, f, proto.introspection.Stream.ConnectionRef.serializeBinaryToWriter);\n  }\n\n  f = message.getTimeline();\n\n  if (f != null) {\n    writer.writeMessage(6, f, proto.introspection.Stream.Timeline.serializeBinaryToWriter);\n  }\n\n  f = message.getStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getLatencyNs();\n\n  if (f !== 0) {\n    writer.writeUint64(16, f);\n  }\n\n  f = message.getUserProvidedTagsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(99, f);\n  }\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.introspection.Stream.ConnectionRef.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.introspection.Stream.ConnectionRef.ConnectionCase = {\n  CONNECTION_NOT_SET: 0,\n  CONN: 1,\n  CONN_ID: 2\n};\n/**\n * @return {proto.introspection.Stream.ConnectionRef.ConnectionCase}\n */\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnectionCase = function () {\n  return (\n    /** @type {proto.introspection.Stream.ConnectionRef.ConnectionCase} */\n    jspb.Message.computeOneofCase(this, proto.introspection.Stream.ConnectionRef.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Stream.ConnectionRef.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Stream.ConnectionRef.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Stream.ConnectionRef} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Stream.ConnectionRef.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      conn: (f = msg.getConn()) && proto.introspection.Connection.toObject(includeInstance, f),\n      connId: msg.getConnId_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Stream.ConnectionRef}\n */\n\n\nproto.introspection.Stream.ConnectionRef.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Stream.ConnectionRef();\n  return proto.introspection.Stream.ConnectionRef.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Stream.ConnectionRef} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Stream.ConnectionRef}\n */\n\n\nproto.introspection.Stream.ConnectionRef.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Connection();\n        reader.readMessage(value, proto.introspection.Connection.deserializeBinaryFromReader);\n        msg.setConn(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setConnId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Stream.ConnectionRef.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Stream.ConnectionRef} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Stream.ConnectionRef.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConn();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Connection.serializeBinaryToWriter);\n  }\n\n  f =\n  /** @type {!(string|Uint8Array)} */\n  jspb.Message.getField(message, 2);\n\n  if (f != null) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional Connection conn = 1;\n * @return {?proto.introspection.Connection}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConn = function () {\n  return (\n    /** @type{?proto.introspection.Connection} */\n    jspb.Message.getWrapperField(this, proto.introspection.Connection, 1)\n  );\n};\n/** @param {?proto.introspection.Connection|undefined} value */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.setConn = function (value) {\n  jspb.Message.setOneofWrapperField(this, 1, proto.introspection.Stream.ConnectionRef.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.clearConn = function () {\n  this.setConn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.hasConn = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional bytes conn_id = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/**\n * optional bytes conn_id = 2;\n * This is a type-conversion wrapper around `getConnId()`\n * @return {string}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getConnId())\n  );\n};\n/**\n * optional bytes conn_id = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getConnId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.getConnId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getConnId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.setConnId = function (value) {\n  jspb.Message.setOneofField(this, 2, proto.introspection.Stream.ConnectionRef.oneofGroups_[0], value);\n};\n/**\n * Clears the field making it undefined.\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.clearConnId = function () {\n  jspb.Message.setOneofField(this, 2, proto.introspection.Stream.ConnectionRef.oneofGroups_[0], undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.ConnectionRef.prototype.hasConnId = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Stream.Timeline.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Stream.Timeline.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Stream.Timeline} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Stream.Timeline.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      openTs: (f = msg.getOpenTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      closeTs: (f = msg.getCloseTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Stream.Timeline}\n */\n\n\nproto.introspection.Stream.Timeline.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Stream.Timeline();\n  return proto.introspection.Stream.Timeline.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Stream.Timeline} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Stream.Timeline}\n */\n\n\nproto.introspection.Stream.Timeline.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setOpenTs(value);\n        break;\n\n      case 2:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setCloseTs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Stream.Timeline.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Stream.Timeline} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Stream.Timeline.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOpenTs();\n\n  if (f != null) {\n    writer.writeMessage(1, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getCloseTs();\n\n  if (f != null) {\n    writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional google.protobuf.Timestamp open_ts = 1;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.getOpenTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Stream.Timeline.prototype.setOpenTs = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.Timeline.prototype.clearOpenTs = function () {\n  this.setOpenTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.hasOpenTs = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional google.protobuf.Timestamp close_ts = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.getCloseTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.Stream.Timeline.prototype.setCloseTs = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.Timeline.prototype.clearCloseTs = function () {\n  this.setCloseTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.Timeline.prototype.hasCloseTs = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional bytes id = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.introspection.Stream.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/**\n * optional bytes id = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.introspection.Stream.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Stream.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.Stream.prototype.setId = function (value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string protocol = 2;\n * @return {string}\n */\n\n\nproto.introspection.Stream.prototype.getProtocol = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.Stream.prototype.setProtocol = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional Role role = 3;\n * @return {!proto.introspection.Role}\n */\n\n\nproto.introspection.Stream.prototype.getRole = function () {\n  return (\n    /** @type {!proto.introspection.Role} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {!proto.introspection.Role} value */\n\n\nproto.introspection.Stream.prototype.setRole = function (value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * optional Traffic traffic = 4;\n * @return {?proto.introspection.Traffic}\n */\n\n\nproto.introspection.Stream.prototype.getTraffic = function () {\n  return (\n    /** @type{?proto.introspection.Traffic} */\n    jspb.Message.getWrapperField(this, proto.introspection.Traffic, 4)\n  );\n};\n/** @param {?proto.introspection.Traffic|undefined} value */\n\n\nproto.introspection.Stream.prototype.setTraffic = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.prototype.clearTraffic = function () {\n  this.setTraffic(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.prototype.hasTraffic = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional ConnectionRef conn = 5;\n * @return {?proto.introspection.Stream.ConnectionRef}\n */\n\n\nproto.introspection.Stream.prototype.getConn = function () {\n  return (\n    /** @type{?proto.introspection.Stream.ConnectionRef} */\n    jspb.Message.getWrapperField(this, proto.introspection.Stream.ConnectionRef, 5)\n  );\n};\n/** @param {?proto.introspection.Stream.ConnectionRef|undefined} value */\n\n\nproto.introspection.Stream.prototype.setConn = function (value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.prototype.clearConn = function () {\n  this.setConn(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.prototype.hasConn = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * optional Timeline timeline = 6;\n * @return {?proto.introspection.Stream.Timeline}\n */\n\n\nproto.introspection.Stream.prototype.getTimeline = function () {\n  return (\n    /** @type{?proto.introspection.Stream.Timeline} */\n    jspb.Message.getWrapperField(this, proto.introspection.Stream.Timeline, 6)\n  );\n};\n/** @param {?proto.introspection.Stream.Timeline|undefined} value */\n\n\nproto.introspection.Stream.prototype.setTimeline = function (value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Stream.prototype.clearTimeline = function () {\n  this.setTimeline(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Stream.prototype.hasTimeline = function () {\n  return jspb.Message.getField(this, 6) != null;\n};\n/**\n * optional Status status = 7;\n * @return {!proto.introspection.Status}\n */\n\n\nproto.introspection.Stream.prototype.getStatus = function () {\n  return (\n    /** @type {!proto.introspection.Status} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {!proto.introspection.Status} value */\n\n\nproto.introspection.Stream.prototype.setStatus = function (value) {\n  jspb.Message.setProto3EnumField(this, 7, value);\n};\n/**\n * optional uint64 latency_ns = 16;\n * @return {number}\n */\n\n\nproto.introspection.Stream.prototype.getLatencyNs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 16, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.Stream.prototype.setLatencyNs = function (value) {\n  jspb.Message.setProto3IntField(this, 16, value);\n};\n/**\n * repeated string user_provided_tags = 99;\n * @return {!Array<string>}\n */\n\n\nproto.introspection.Stream.prototype.getUserProvidedTagsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 99)\n  );\n};\n/** @param {!Array<string>} value */\n\n\nproto.introspection.Stream.prototype.setUserProvidedTagsList = function (value) {\n  jspb.Message.setField(this, 99, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.Stream.prototype.addUserProvidedTags = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 99, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.Stream.prototype.clearUserProvidedTagsList = function () {\n  this.setUserProvidedTagsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.DHT.repeatedFields_ = [5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DHT.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DHT.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DHT} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DHT.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      protocol: jspb.Message.getFieldWithDefault(msg, 1, ''),\n      enabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n      startTs: (f = msg.getStartTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      params: (f = msg.getParams()) && proto.introspection.DHT.Params.toObject(includeInstance, f),\n      queryList: jspb.Message.toObjectList(msg.getQueryList(), proto.introspection.DHT.Query.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DHT}\n */\n\n\nproto.introspection.DHT.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DHT();\n  return proto.introspection.DHT.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DHT} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DHT}\n */\n\n\nproto.introspection.DHT.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setProtocol(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setEnabled(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setStartTs(value);\n        break;\n\n      case 4:\n        var value = new proto.introspection.DHT.Params();\n        reader.readMessage(value, proto.introspection.DHT.Params.deserializeBinaryFromReader);\n        msg.setParams(value);\n        break;\n\n      case 5:\n        var value = new proto.introspection.DHT.Query();\n        reader.readMessage(value, proto.introspection.DHT.Query.deserializeBinaryFromReader);\n        msg.addQuery(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DHT.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DHT} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DHT.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProtocol();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getEnabled();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n\n  f = message.getStartTs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getParams();\n\n  if (f != null) {\n    writer.writeMessage(4, f, proto.introspection.DHT.Params.serializeBinaryToWriter);\n  }\n\n  f = message.getQueryList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(5, f, proto.introspection.DHT.Query.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DHT.Params.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DHT.Params.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DHT.Params} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DHT.Params.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      k: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      alpha: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      disjointPaths: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DHT.Params}\n */\n\n\nproto.introspection.DHT.Params.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DHT.Params();\n  return proto.introspection.DHT.Params.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DHT.Params} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DHT.Params}\n */\n\n\nproto.introspection.DHT.Params.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setK(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAlpha(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setDisjointPaths(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.Params.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DHT.Params.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DHT.Params} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DHT.Params.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getK();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getAlpha();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getDisjointPaths();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 k = 1;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Params.prototype.getK = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Params.prototype.setK = function (value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 alpha = 2;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Params.prototype.getAlpha = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Params.prototype.setAlpha = function (value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 disjoint_paths = 3;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Params.prototype.getDisjointPaths = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Params.prototype.setDisjointPaths = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.DHT.Query.repeatedFields_ = [5];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.DHT.Query.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.DHT.Query.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.DHT.Query} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.DHT.Query.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: msg.getId_asB64(),\n      targetPeerId: jspb.Message.getFieldWithDefault(msg, 2, ''),\n      totalTimeMs: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      totalSteps: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      peerIdsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,\n      trigger: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      type: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      result: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      sentTs: (f = msg.getSentTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.DHT.Query}\n */\n\n\nproto.introspection.DHT.Query.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.DHT.Query();\n  return proto.introspection.DHT.Query.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.DHT.Query} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.DHT.Query}\n */\n\n\nproto.introspection.DHT.Query.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTargetPeerId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotalTimeMs(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotalSteps(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addPeerIds(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!proto.introspection.DHT.Query.Trigger} */\n        reader.readEnum();\n        msg.setTrigger(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!proto.introspection.DHT.Query.Type} */\n        reader.readEnum();\n        msg.setType(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {!proto.introspection.DHT.Query.Result} */\n        reader.readEnum();\n        msg.setResult(value);\n        break;\n\n      case 9:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setSentTs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.Query.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.DHT.Query.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.DHT.Query} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.DHT.Query.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getTargetPeerId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getTotalTimeMs();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getTotalSteps();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getPeerIdsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(5, f);\n  }\n\n  f = message.getTrigger();\n\n  if (f !== 0.0) {\n    writer.writeEnum(6, f);\n  }\n\n  f = message.getType();\n\n  if (f !== 0.0) {\n    writer.writeEnum(7, f);\n  }\n\n  f = message.getResult();\n\n  if (f !== 0.0) {\n    writer.writeEnum(8, f);\n  }\n\n  f = message.getSentTs();\n\n  if (f != null) {\n    writer.writeMessage(9, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.introspection.DHT.Query.Trigger = {\n  API: 0,\n  DISCOVERY: 1\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.DHT.Query.Type = {\n  CONTENT: 0,\n  PROVIDER: 1,\n  VALUE: 2\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.DHT.Query.Result = {\n  SUCCESS: 0,\n  ERROR: 1,\n  TIMEOUT: 2,\n  PENDING: 3\n};\n/**\n * optional bytes id = 1;\n * @return {!(string|Uint8Array)}\n */\n\nproto.introspection.DHT.Query.prototype.getId = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/**\n * optional bytes id = 1;\n * This is a type-conversion wrapper around `getId()`\n * @return {string}\n */\n\n\nproto.introspection.DHT.Query.prototype.getId_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getId())\n  );\n};\n/**\n * optional bytes id = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getId()`\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.DHT.Query.prototype.getId_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getId())\n  );\n};\n/** @param {!(string|Uint8Array)} value */\n\n\nproto.introspection.DHT.Query.prototype.setId = function (value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional string target_peer_id = 2;\n * @return {string}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTargetPeerId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.DHT.Query.prototype.setTargetPeerId = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint64 total_time_ms = 3;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTotalTimeMs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Query.prototype.setTotalTimeMs = function (value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 total_steps = 4;\n * @return {number}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTotalSteps = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.DHT.Query.prototype.setTotalSteps = function (value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * repeated string peer_ids = 5;\n * @return {!Array<string>}\n */\n\n\nproto.introspection.DHT.Query.prototype.getPeerIdsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 5)\n  );\n};\n/** @param {!Array<string>} value */\n\n\nproto.introspection.DHT.Query.prototype.setPeerIdsList = function (value) {\n  jspb.Message.setField(this, 5, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n */\n\n\nproto.introspection.DHT.Query.prototype.addPeerIds = function (value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 5, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.DHT.Query.prototype.clearPeerIdsList = function () {\n  this.setPeerIdsList([]);\n};\n/**\n * optional Trigger trigger = 6;\n * @return {!proto.introspection.DHT.Query.Trigger}\n */\n\n\nproto.introspection.DHT.Query.prototype.getTrigger = function () {\n  return (\n    /** @type {!proto.introspection.DHT.Query.Trigger} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/** @param {!proto.introspection.DHT.Query.Trigger} value */\n\n\nproto.introspection.DHT.Query.prototype.setTrigger = function (value) {\n  jspb.Message.setProto3EnumField(this, 6, value);\n};\n/**\n * optional Type type = 7;\n * @return {!proto.introspection.DHT.Query.Type}\n */\n\n\nproto.introspection.DHT.Query.prototype.getType = function () {\n  return (\n    /** @type {!proto.introspection.DHT.Query.Type} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/** @param {!proto.introspection.DHT.Query.Type} value */\n\n\nproto.introspection.DHT.Query.prototype.setType = function (value) {\n  jspb.Message.setProto3EnumField(this, 7, value);\n};\n/**\n * optional Result result = 8;\n * @return {!proto.introspection.DHT.Query.Result}\n */\n\n\nproto.introspection.DHT.Query.prototype.getResult = function () {\n  return (\n    /** @type {!proto.introspection.DHT.Query.Result} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/** @param {!proto.introspection.DHT.Query.Result} value */\n\n\nproto.introspection.DHT.Query.prototype.setResult = function (value) {\n  jspb.Message.setProto3EnumField(this, 8, value);\n};\n/**\n * optional google.protobuf.Timestamp sent_ts = 9;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.DHT.Query.prototype.getSentTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.DHT.Query.prototype.setSentTs = function (value) {\n  jspb.Message.setWrapperField(this, 9, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.DHT.Query.prototype.clearSentTs = function () {\n  this.setSentTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.Query.prototype.hasSentTs = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional string protocol = 1;\n * @return {string}\n */\n\n\nproto.introspection.DHT.prototype.getProtocol = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, '')\n  );\n};\n/** @param {string} value */\n\n\nproto.introspection.DHT.prototype.setProtocol = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bool enabled = 2;\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.prototype.getEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/** @param {boolean} value */\n\n\nproto.introspection.DHT.prototype.setEnabled = function (value) {\n  jspb.Message.setProto3BooleanField(this, 2, value);\n};\n/**\n * optional google.protobuf.Timestamp start_ts = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.DHT.prototype.getStartTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.DHT.prototype.setStartTs = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.DHT.prototype.clearStartTs = function () {\n  this.setStartTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.prototype.hasStartTs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional Params params = 4;\n * @return {?proto.introspection.DHT.Params}\n */\n\n\nproto.introspection.DHT.prototype.getParams = function () {\n  return (\n    /** @type{?proto.introspection.DHT.Params} */\n    jspb.Message.getWrapperField(this, proto.introspection.DHT.Params, 4)\n  );\n};\n/** @param {?proto.introspection.DHT.Params|undefined} value */\n\n\nproto.introspection.DHT.prototype.setParams = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.DHT.prototype.clearParams = function () {\n  this.setParams(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.DHT.prototype.hasParams = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * repeated Query query = 5;\n * @return {!Array<!proto.introspection.DHT.Query>}\n */\n\n\nproto.introspection.DHT.prototype.getQueryList = function () {\n  return (\n    /** @type{!Array<!proto.introspection.DHT.Query>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.introspection.DHT.Query, 5)\n  );\n};\n/** @param {!Array<!proto.introspection.DHT.Query>} value */\n\n\nproto.introspection.DHT.prototype.setQueryList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n/**\n * @param {!proto.introspection.DHT.Query=} opt_value\n * @param {number=} opt_index\n * @return {!proto.introspection.DHT.Query}\n */\n\n\nproto.introspection.DHT.prototype.addQuery = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.introspection.DHT.Query, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.DHT.prototype.clearQueryList = function () {\n  this.setQueryList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.introspection.Subsystems.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.Subsystems.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.Subsystems.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.Subsystems} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.Subsystems.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      connectionsList: jspb.Message.toObjectList(msg.getConnectionsList(), proto.introspection.Connection.toObject, includeInstance),\n      dht: (f = msg.getDht()) && proto.introspection.DHT.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.Subsystems}\n */\n\n\nproto.introspection.Subsystems.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.Subsystems();\n  return proto.introspection.Subsystems.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.Subsystems} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.Subsystems}\n */\n\n\nproto.introspection.Subsystems.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Connection();\n        reader.readMessage(value, proto.introspection.Connection.deserializeBinaryFromReader);\n        msg.addConnections(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.DHT();\n        reader.readMessage(value, proto.introspection.DHT.deserializeBinaryFromReader);\n        msg.setDht(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.Subsystems.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.Subsystems.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.Subsystems} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.Subsystems.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConnectionsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.introspection.Connection.serializeBinaryToWriter);\n  }\n\n  f = message.getDht();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.DHT.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Connection connections = 1;\n * @return {!Array<!proto.introspection.Connection>}\n */\n\n\nproto.introspection.Subsystems.prototype.getConnectionsList = function () {\n  return (\n    /** @type{!Array<!proto.introspection.Connection>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.introspection.Connection, 1)\n  );\n};\n/** @param {!Array<!proto.introspection.Connection>} value */\n\n\nproto.introspection.Subsystems.prototype.setConnectionsList = function (value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.introspection.Connection=} opt_value\n * @param {number=} opt_index\n * @return {!proto.introspection.Connection}\n */\n\n\nproto.introspection.Subsystems.prototype.addConnections = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.introspection.Connection, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n */\n\n\nproto.introspection.Subsystems.prototype.clearConnectionsList = function () {\n  this.setConnectionsList([]);\n};\n/**\n * optional DHT dht = 2;\n * @return {?proto.introspection.DHT}\n */\n\n\nproto.introspection.Subsystems.prototype.getDht = function () {\n  return (\n    /** @type{?proto.introspection.DHT} */\n    jspb.Message.getWrapperField(this, proto.introspection.DHT, 2)\n  );\n};\n/** @param {?proto.introspection.DHT|undefined} value */\n\n\nproto.introspection.Subsystems.prototype.setDht = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.Subsystems.prototype.clearDht = function () {\n  this.setDht(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.Subsystems.prototype.hasDht = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.State.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.State.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.State} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.State.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      subsystems: (f = msg.getSubsystems()) && proto.introspection.Subsystems.toObject(includeInstance, f),\n      traffic: (f = msg.getTraffic()) && proto.introspection.Traffic.toObject(includeInstance, f),\n      instantTs: (f = msg.getInstantTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      startTs: (f = msg.getStartTs()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),\n      snapshotDurationMs: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.State}\n */\n\n\nproto.introspection.State.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.State();\n  return proto.introspection.State.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.State} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.State}\n */\n\n\nproto.introspection.State.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Subsystems();\n        reader.readMessage(value, proto.introspection.Subsystems.deserializeBinaryFromReader);\n        msg.setSubsystems(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.Traffic();\n        reader.readMessage(value, proto.introspection.Traffic.deserializeBinaryFromReader);\n        msg.setTraffic(value);\n        break;\n\n      case 3:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setInstantTs(value);\n        break;\n\n      case 4:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setStartTs(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setSnapshotDurationMs(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.State.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.State.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.State} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.State.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSubsystems();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Subsystems.serializeBinaryToWriter);\n  }\n\n  f = message.getTraffic();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.Traffic.serializeBinaryToWriter);\n  }\n\n  f = message.getInstantTs();\n\n  if (f != null) {\n    writer.writeMessage(3, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getStartTs();\n\n  if (f != null) {\n    writer.writeMessage(4, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n\n  f = message.getSnapshotDurationMs();\n\n  if (f !== 0) {\n    writer.writeUint32(5, f);\n  }\n};\n/**\n * optional Subsystems subsystems = 1;\n * @return {?proto.introspection.Subsystems}\n */\n\n\nproto.introspection.State.prototype.getSubsystems = function () {\n  return (\n    /** @type{?proto.introspection.Subsystems} */\n    jspb.Message.getWrapperField(this, proto.introspection.Subsystems, 1)\n  );\n};\n/** @param {?proto.introspection.Subsystems|undefined} value */\n\n\nproto.introspection.State.prototype.setSubsystems = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearSubsystems = function () {\n  this.setSubsystems(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasSubsystems = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Traffic traffic = 2;\n * @return {?proto.introspection.Traffic}\n */\n\n\nproto.introspection.State.prototype.getTraffic = function () {\n  return (\n    /** @type{?proto.introspection.Traffic} */\n    jspb.Message.getWrapperField(this, proto.introspection.Traffic, 2)\n  );\n};\n/** @param {?proto.introspection.Traffic|undefined} value */\n\n\nproto.introspection.State.prototype.setTraffic = function (value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearTraffic = function () {\n  this.setTraffic(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasTraffic = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional google.protobuf.Timestamp instant_ts = 3;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.State.prototype.getInstantTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.State.prototype.setInstantTs = function (value) {\n  jspb.Message.setWrapperField(this, 3, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearInstantTs = function () {\n  this.setInstantTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasInstantTs = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n/**\n * optional google.protobuf.Timestamp start_ts = 4;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.introspection.State.prototype.getStartTs = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4)\n  );\n};\n/** @param {?proto.google.protobuf.Timestamp|undefined} value */\n\n\nproto.introspection.State.prototype.setStartTs = function (value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.State.prototype.clearStartTs = function () {\n  this.setStartTs(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.State.prototype.hasStartTs = function () {\n  return jspb.Message.getField(this, 4) != null;\n};\n/**\n * optional uint32 snapshot_duration_ms = 5;\n * @return {number}\n */\n\n\nproto.introspection.State.prototype.getSnapshotDurationMs = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/** @param {number} value */\n\n\nproto.introspection.State.prototype.setSnapshotDurationMs = function (value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.introspection.ProtocolDataPacket.oneofGroups_ = [[2, 3]];\n/**\n * @enum {number}\n */\n\nproto.introspection.ProtocolDataPacket.MessageCase = {\n  MESSAGE_NOT_SET: 0,\n  STATE: 2,\n  RUNTIME: 3\n};\n/**\n * @return {proto.introspection.ProtocolDataPacket.MessageCase}\n */\n\nproto.introspection.ProtocolDataPacket.prototype.getMessageCase = function () {\n  return (\n    /** @type {proto.introspection.ProtocolDataPacket.MessageCase} */\n    jspb.Message.computeOneofCase(this, proto.introspection.ProtocolDataPacket.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.ProtocolDataPacket.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.ProtocolDataPacket.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.ProtocolDataPacket} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.ProtocolDataPacket.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: (f = msg.getVersion()) && proto.introspection.Version.toObject(includeInstance, f),\n      state: (f = msg.getState()) && proto.introspection.State.toObject(includeInstance, f),\n      runtime: (f = msg.getRuntime()) && proto.introspection.Runtime.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.ProtocolDataPacket}\n */\n\n\nproto.introspection.ProtocolDataPacket.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.ProtocolDataPacket();\n  return proto.introspection.ProtocolDataPacket.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.ProtocolDataPacket} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.ProtocolDataPacket}\n */\n\n\nproto.introspection.ProtocolDataPacket.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Version();\n        reader.readMessage(value, proto.introspection.Version.deserializeBinaryFromReader);\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value = new proto.introspection.State();\n        reader.readMessage(value, proto.introspection.State.deserializeBinaryFromReader);\n        msg.setState(value);\n        break;\n\n      case 3:\n        var value = new proto.introspection.Runtime();\n        reader.readMessage(value, proto.introspection.Runtime.deserializeBinaryFromReader);\n        msg.setRuntime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.ProtocolDataPacket.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.ProtocolDataPacket} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.ProtocolDataPacket.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Version.serializeBinaryToWriter);\n  }\n\n  f = message.getState();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.introspection.State.serializeBinaryToWriter);\n  }\n\n  f = message.getRuntime();\n\n  if (f != null) {\n    writer.writeMessage(3, f, proto.introspection.Runtime.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Version version = 1;\n * @return {?proto.introspection.Version}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.getVersion = function () {\n  return (\n    /** @type{?proto.introspection.Version} */\n    jspb.Message.getWrapperField(this, proto.introspection.Version, 1)\n  );\n};\n/** @param {?proto.introspection.Version|undefined} value */\n\n\nproto.introspection.ProtocolDataPacket.prototype.setVersion = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.clearVersion = function () {\n  this.setVersion(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.hasVersion = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional State state = 2;\n * @return {?proto.introspection.State}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.getState = function () {\n  return (\n    /** @type{?proto.introspection.State} */\n    jspb.Message.getWrapperField(this, proto.introspection.State, 2)\n  );\n};\n/** @param {?proto.introspection.State|undefined} value */\n\n\nproto.introspection.ProtocolDataPacket.prototype.setState = function (value) {\n  jspb.Message.setOneofWrapperField(this, 2, proto.introspection.ProtocolDataPacket.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.clearState = function () {\n  this.setState(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.hasState = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional Runtime runtime = 3;\n * @return {?proto.introspection.Runtime}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.getRuntime = function () {\n  return (\n    /** @type{?proto.introspection.Runtime} */\n    jspb.Message.getWrapperField(this, proto.introspection.Runtime, 3)\n  );\n};\n/** @param {?proto.introspection.Runtime|undefined} value */\n\n\nproto.introspection.ProtocolDataPacket.prototype.setRuntime = function (value) {\n  jspb.Message.setOneofWrapperField(this, 3, proto.introspection.ProtocolDataPacket.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.clearRuntime = function () {\n  this.setRuntime(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ProtocolDataPacket.prototype.hasRuntime = function () {\n  return jspb.Message.getField(this, 3) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.introspection.ClientSignal.prototype.toObject = function (opt_includeInstance) {\n    return proto.introspection.ClientSignal.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.introspection.ClientSignal} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.introspection.ClientSignal.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      version: (f = msg.getVersion()) && proto.introspection.Version.toObject(includeInstance, f),\n      signal: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      dataSource: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.introspection.ClientSignal}\n */\n\n\nproto.introspection.ClientSignal.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.introspection.ClientSignal();\n  return proto.introspection.ClientSignal.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.introspection.ClientSignal} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.introspection.ClientSignal}\n */\n\n\nproto.introspection.ClientSignal.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.introspection.Version();\n        reader.readMessage(value, proto.introspection.Version.deserializeBinaryFromReader);\n        msg.setVersion(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!proto.introspection.ClientSignal.Signal} */\n        reader.readEnum();\n        msg.setSignal(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!proto.introspection.ClientSignal.DataSource} */\n        reader.readEnum();\n        msg.setDataSource(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.introspection.ClientSignal.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.introspection.ClientSignal.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.introspection.ClientSignal} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.introspection.ClientSignal.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVersion();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.introspection.Version.serializeBinaryToWriter);\n  }\n\n  f = message.getSignal();\n\n  if (f !== 0.0) {\n    writer.writeEnum(2, f);\n  }\n\n  f = message.getDataSource();\n\n  if (f !== 0.0) {\n    writer.writeEnum(3, f);\n  }\n};\n/**\n * @enum {number}\n */\n\n\nproto.introspection.ClientSignal.Signal = {\n  SEND_DATA: 0,\n  START_PUSH_EMITTER: 1,\n  STOP_PUSH_EMITTER: 2,\n  PAUSE_PUSH_EMITTER: 3,\n  UNPAUSE_PUSH_EMITTER: 4\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.ClientSignal.DataSource = {\n  STATE: 0,\n  RUNTIME: 1\n};\n/**\n * optional Version version = 1;\n * @return {?proto.introspection.Version}\n */\n\nproto.introspection.ClientSignal.prototype.getVersion = function () {\n  return (\n    /** @type{?proto.introspection.Version} */\n    jspb.Message.getWrapperField(this, proto.introspection.Version, 1)\n  );\n};\n/** @param {?proto.introspection.Version|undefined} value */\n\n\nproto.introspection.ClientSignal.prototype.setVersion = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.introspection.ClientSignal.prototype.clearVersion = function () {\n  this.setVersion(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.introspection.ClientSignal.prototype.hasVersion = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Signal signal = 2;\n * @return {!proto.introspection.ClientSignal.Signal}\n */\n\n\nproto.introspection.ClientSignal.prototype.getSignal = function () {\n  return (\n    /** @type {!proto.introspection.ClientSignal.Signal} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/** @param {!proto.introspection.ClientSignal.Signal} value */\n\n\nproto.introspection.ClientSignal.prototype.setSignal = function (value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n/**\n * optional DataSource data_source = 3;\n * @return {!proto.introspection.ClientSignal.DataSource}\n */\n\n\nproto.introspection.ClientSignal.prototype.getDataSource = function () {\n  return (\n    /** @type {!proto.introspection.ClientSignal.DataSource} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/** @param {!proto.introspection.ClientSignal.DataSource} value */\n\n\nproto.introspection.ClientSignal.prototype.setDataSource = function (value) {\n  jspb.Message.setProto3EnumField(this, 3, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.introspection.Status = {\n  ACTIVE: 0,\n  CLOSED: 1,\n  OPENING: 2,\n  CLOSING: 3,\n  ERROR: 4\n};\n/**\n * @enum {number}\n */\n\nproto.introspection.Role = {\n  INITIATOR: 0,\n  RESPONDER: 1\n};\ngoog.object.extend(exports, proto.introspection);","'use strict'; // MIT License\n//\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the \"Software\"),\n// to deal in the Software without restriction, including without limitation\n// the rights to use, copy, modify, merge, publish, distribute, sublicense,\n// and/or sell copies of the Software, and to permit persons to whom the Software\n// is furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar OFFSET_BASIS_32 = 2166136261;\n\nfunction fnv1aString(string) {\n  var hash = OFFSET_BASIS_32;\n\n  for (var i = 0; i < string.length; i++) {\n    hash ^= string.charCodeAt(i); // 32-bit FNV prime: 2**24 + 2**8 + 0x93 = 16777619\n    // Using bitshift for accuracy and performance. Numbers in JS suck.\n\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n\n  return hash >>> 0;\n}\n\nfunction fnv1aBuffer(buf) {\n  var hash = OFFSET_BASIS_32;\n\n  for (var i = 0; i < buf.length; i++) {\n    hash ^= buf[i]; // 32-bit FNV prime: 2**24 + 2**8 + 0x93 = 16777619\n    // Using bitshift for accuracy and performance. Numbers in JS suck.\n\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n\n  return hash >>> 0;\n}\n\nfunction fnv1a(input) {\n  if (input instanceof Buffer) {\n    return fnv1aBuffer(input);\n  } else if (typeof input === 'string') {\n    return fnv1aString(input);\n  } else {\n    throw new Error('input must be a string or a Buffer');\n  }\n}\n\nmodule.exports = fnv1a;","'use strict';\n\nvar statusNames = {\n  0: 'ACTIVE',\n  1: 'CLOSED',\n  2: 'OPENING',\n  3: 'CLOSING',\n  4: 'ERROR'\n};\nvar roleNames = {\n  0: 'INITIATOR',\n  1: 'RESPONDER'\n}; // TODO: Get this dynamically from data source\n\nvar transportNames = {\n  0: 'TCP',\n  1: 'UDP',\n  2: 'QUIC',\n  3: 'RDP'\n};\nmodule.exports = {\n  statusNames: statusNames,\n  roleNames: roleNames,\n  transportNames: transportNames\n};","'use strict'; // Convenience functions for extracting data from decoded protobuf\n\nvar _slicedToArray = require(\"/home/runner/work/libp2p-introspection-ui/libp2p-introspection-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/runner/work/libp2p-introspection-ui/libp2p-introspection-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nfunction getAge(time, openTs, closeTs) {\n  if (!openTs) return 0;\n  var endTime = closeTs ? closeTs.getSeconds() : time;\n  return endTime - openTs.getSeconds();\n} // Gets the first (or latest) occurence of each connection that exists in a data set, with optional filter\n\n\nfunction getAllConnections(timepoints) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      filter = _ref.filter,\n      _ref$latest = _ref.latest,\n      latest = _ref$latest === void 0 ? false : _ref$latest;\n\n  var test = function test(testConnection) {\n    return !filter || filter(testConnection);\n  };\n\n  var allConnections = timepoints.reduce(function (previousConns, timepoint) {\n    var newConns = getConnections(timepoint).filter(function (testConn) {\n      return test(testConn) && !previousConns.some(function (existingConn) {\n        return testConn.getId().toString() === existingConn.getId().toString();\n      });\n    });\n    if (!newConns.length) return previousConns;\n    return latest ? [].concat(_toConsumableArray(newConns), _toConsumableArray(previousConns)) : [].concat(_toConsumableArray(previousConns), _toConsumableArray(newConns));\n  }, []);\n  return allConnections;\n}\n\nfunction getSubsystems(timepoint) {\n  if (!timepoint) return null;\n  return timepoint.getSubsystems();\n} // Gets the connections in one timepoint\n\n\nfunction getConnections(timepoint) {\n  var subsystems = getSubsystems(timepoint);\n  return subsystems ? subsystems.getConnectionsList() : [];\n}\n\nfunction getAllStreamsAtTime(timepoint) {\n  if (!timepoint) return [];\n  var connections = getConnections(timepoint); // Returns array of { connection, stream }\n\n  var streams = connections.reduce(function (streams, connection) {\n    return [].concat(_toConsumableArray(streams), _toConsumableArray(connection.getStreams().getStreamsList().map(function (stream) {\n      return {\n        connection: connection,\n        stream: stream\n      };\n    })));\n  }, []);\n  return streams;\n}\n\nfunction getEnumByName(name, obj) {\n  var entry = Object.entries(obj).find(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        _ = _ref3[0],\n        value = _ref3[1];\n\n    return value === name;\n  });\n  if (!entry) throw new Error(\"\\\"\".concat(name, \"\\\" not one of \\\"\").concat(Object.values(obj).join('\", \"'), \"\\\"\"));\n  return parseInt(entry[0]);\n}\n\nfunction getLatestTimepoint(timepoints) {\n  if (!timepoints.length) return null;\n  return timepoints[timepoints.length - 1];\n}\n\nfunction getTime(timepoint, format) {\n  var timestamp = timepoint.getInstantTs().getSeconds();\n  if (!format) return timestamp; // TODO: add date formating options\n}\n\nfunction getTimeIndex(timepoints, time) {\n  var index = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = timepoints[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var timepoint = _step.value;\n      if (getTime(timepoint) === time) return index;\n      index++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}\n\nfunction getTraffic(connection, direction, type) {\n  var byDirection = \"getTraffic\".concat(direction === 'in' ? 'In' : 'Out');\n  var byType = \"getCum\".concat(type === 'bytes' ? 'Bytes' : 'Packets');\n  return connection.getTraffic()[byDirection]()[byType]();\n}\n\nmodule.exports = {\n  getAge: getAge,\n  getAllConnections: getAllConnections,\n  getAllStreamsAtTime: getAllStreamsAtTime,\n  getConnections: getConnections,\n  getEnumByName: getEnumByName,\n  getLatestTimepoint: getLatestTimepoint,\n  getTime: getTime,\n  getTimeIndex: getTimeIndex,\n  getTraffic: getTraffic\n};","'use strict';\n\nmodule.exports = [require(\"\".concat(__dirname, \"/sample.mock\"))];","module.exports = __webpack_public_path__ + \"static/media/sample.10cddc23.mock\";","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { statusNames } from '@libp2p-observer/data'\nimport { Icon } from '@libp2p-observer/sdk'\n\nconst Container = styled.span`\n  display: inline-block;\n  padding: 0 ${({ theme }) => theme.spacing(0.5)};\n  background: ${({ theme, getColor }) => getColor(theme, 0.15)};\n  color: ${({ theme, getColor }) => getColor(theme, 1)};\n  white-space: nowrap;\n  font-size: 8pt;\n  font-weight: 600;\n`\n\nconst ChipText = styled.span`\n  line-height: 1em;\n  display: inline-block;\n  padding: ${({ theme }) => theme.spacing()}\n    ${({ theme }) => theme.spacing(0.5)};\n  vertical-align: middle;\n`\n\nfunction StatusChip({ status }) {\n  const chipMap = {\n    ACTIVE: {\n      icon: 'check',\n      colorKey: 'tertiary',\n      colorIndex: 2,\n    },\n    OPENING: {\n      icon: 'opening',\n      colorKey: 'tertiary',\n      colorIndex: 1,\n    },\n    CLOSING: {\n      icon: 'closing',\n      colorKey: 'highlight',\n      colorIndex: 0,\n    },\n    CLOSED: {\n      icon: 'closed',\n      colorKey: 'highlight',\n      colorIndex: 1,\n    },\n    ERROR: {\n      icon: 'cancel',\n      colorKey: 'contrast',\n      colorIndex: 1,\n    },\n  }\n\n  if (!chipMap[status]) {\n    throw new Error(`Status name \"${status}\" not recognised`)\n  }\n  const { icon, colorKey, colorIndex } = chipMap[status]\n\n  const getColor = (theme, opacity) =>\n    theme.color(colorKey, colorIndex || 0, opacity)\n\n  return (\n    <Container getColor={getColor}>\n      <Icon type={icon} />\n      <ChipText>{status}</ChipText>\n    </Container>\n  )\n}\n\nStatusChip.propTypes = {\n  status: T.oneOf(Object.values(statusNames)),\n}\n\nexport default StatusChip\n","import React from 'react'\nimport T from 'prop-types'\n\nimport StatusChip from './StatusChip'\nimport { PeerId, TimeNumber, DataNumber } from '@libp2p-observer/sdk'\n\nfunction StatusContent({ value }) {\n  return <StatusChip status={value} />\n}\nStatusContent.propTypes = {\n  value: T.string,\n}\n\nfunction PeerIdContent({ value }) {\n  return <PeerId peerId={value} />\n}\nPeerIdContent.propTypes = {\n  value: T.string,\n}\n\nfunction BytesContent({ value, label }) {\n  return (\n    <DataNumber value={value}>\n      {`${value} ${label} bytes during this connection's lifecycle`}\n    </DataNumber>\n  )\n}\nBytesContent.propTypes = {\n  value: T.num,\n  label: T.string,\n}\n\nfunction AgeContent({ value }) {\n  return (\n    <TimeNumber value={value}>\n      {`Connection was open for ${value} miliseconds`}\n    </TimeNumber>\n  )\n}\nAgeContent.propTypes = {\n  value: T.string,\n}\n\nexport { AgeContent, BytesContent, PeerIdContent, StatusContent }\n","import React from 'react'\nimport T from 'prop-types'\nimport { ThemeSetter, DataProvider } from '@libp2p-observer/sdk'\n\nfunction ContextWrappers({ children }) {\n  return (\n    <ThemeSetter>\n      <DataProvider>{children}</DataProvider>\n    </ThemeSetter>\n  )\n}\nContextWrappers.propTypes = {\n  children: T.node,\n}\n\nexport default ContextWrappers\n","import {\n  getAllConnections,\n  getConnections,\n  getTime,\n  getTraffic,\n} from '@libp2p-observer/data'\nimport { validateNumbers } from '@libp2p-observer/sdk'\n\nfunction getTickOffsets(ticks, scale) {\n  const tickGap = ticks[1] - ticks[0]\n\n  const firstTickGap = ticks[0] - scale.domain()[0]\n  const lastTickGap = scale.domain()[1] - ticks[ticks.length - 1]\n\n  const totalGapValues =\n    firstTickGap + tickGap * (ticks.length - 1) + lastTickGap\n\n  const firstTickOffset = firstTickGap / totalGapValues\n  const tickOffset = tickGap / totalGapValues\n\n  const tickOffsets = Array(ticks.length)\n    .fill()\n    .map((_, i) => firstTickOffset + i * tickOffset)\n\n  return tickOffsets\n}\n\nfunction getTrafficChangesByPeer(direction) {\n  // Can't calculate bytes added in first timepoint, so skip where index is 0\n  const keyData = (dataset, keys) =>\n    dataset.slice(1).map(\n      // Get array of objects of mapped values added in each timepoint keyed by peerId\n      (timepoint, previousTimepointIndex) => {\n        const connectionsById = getConnections(timepoint).reduce(\n          (connectionsById, connection) => {\n            connectionsById[connection.getPeerId()] = connection\n            return connectionsById\n          },\n          {}\n        )\n\n        const trafficByPeer = keys.reduce(\n          (trafficByPeer, peerId) => {\n            const connection = connectionsById[peerId]\n\n            let bytes = 0\n\n            if (connection) {\n              bytes = getTraffic(connection, direction, 'bytes')\n\n              // Use only those bytes added in this time point\n              // Can't get bytes added first to previous, so skip it\n              const previousTimepoint = dataset[previousTimepointIndex]\n              const previousConn = getConnections(previousTimepoint).find(\n                conn => conn.getPeerId() === peerId\n              )\n              if (previousConn) {\n                bytes -= getTraffic(previousConn, direction, 'bytes')\n              }\n            }\n\n            trafficByPeer[peerId] = bytes\n            return trafficByPeer\n          },\n          { time: getTime(timepoint) }\n        )\n        validateNumbers(trafficByPeer)\n        return trafficByPeer\n      }\n    )\n  return keyData\n}\n\nfunction getTotalTraffic(connection) {\n  const dataIn = getTraffic(connection, 'in', 'bytes')\n  const dataOut = getTraffic(connection, 'out', 'bytes')\n  validateNumbers(dataIn, dataOut)\n  return dataIn + dataOut\n}\n\nfunction getPeerIds(dataset, sorter, applyFilters) {\n  const allConnections = getAllConnections(dataset)\n  const filteredConnections = allConnections.filter(applyFilters)\n  filteredConnections.sort(sorter)\n  return filteredConnections.map(conn => conn.getPeerId())\n}\n\nexport { getTickOffsets, getTrafficChangesByPeer, getTotalTraffic, getPeerIds }\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { formatDataSize } from '@libp2p-observer/sdk'\nimport { getTickOffsets } from './utils'\n\nconst TicksContainer = styled.div`\n  position: absolute;\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  left: -${({ width }) => width}px;\n  top: 0;\n`\n\nconst TickLabel = styled.label`\n  position: absolute;\n  right: ${({ theme }) => theme.spacing(1)};\n  text-align: right;\n  white-space: nowrap;\n  transform: translateY(\n    ${({ fromSide }) => (fromSide === 'top' ? '-50%' : '50%')}\n  );\n  color: ${({ theme, colorKey }) => theme.color(colorKey)};\n  ${({ theme }) => theme.text('label', 'small')}\n`\n\nconst TickValue = styled.span`\n  font-weight: 600;\n`\n\nconst TickUnit = styled.span`\n  font-weight: 400;\n`\n\nconst AxisLabel = styled.label`\n  display: block;\n  position: absolute;\n  font-weight: 800;\n  text-align: right;\n  transform-origin: top right;\n  transform: rotate(-90deg);\n  width: 100%;\n  text-transform: uppercase;\n  top: -${({ theme }) => theme.spacing(0.5)};\n  padding-top: ${({ theme }) => theme.spacing(1)};\n  right: ${({ width }) => width}px;\n  color: ${({ theme, colorKey }) => theme.color(colorKey)};\n  ${({ theme }) => theme.text('label', 'medium')}\n`\n\nconst nbsp = '\\u00A0'\n\nfunction DataTicks({ scale, height, width, dataDirection, colorKey }) {\n  let ticks = scale.ticks(3)\n  if (ticks.length > 5) {\n    const topTick = ticks[ticks.length - 1]\n    ticks = [0, topTick / 2, topTick]\n  }\n\n  const tickOffsets = getTickOffsets(ticks, scale)\n  const fromSide = dataDirection === 'in' ? 'bottom' : 'top'\n\n  let lowestTickUnitPair = ['', Infinity]\n  const ticksFormatted = ticks.map(tickValue => {\n    const [formattedValue, unit] = formatDataSize(tickValue)\n    if (unit && tickValue < lowestTickUnitPair[1]) {\n      lowestTickUnitPair = [unit, tickValue]\n    }\n    return [formattedValue, unit]\n  })\n\n  return (\n    <TicksContainer height={height} width={width}>\n      <AxisLabel colorKey={colorKey} width={width}>\n        Data {dataDirection}\n      </AxisLabel>\n      {ticksFormatted.map(([tickValue, unit], tickIndex) => (\n        <TickLabel\n          style={{ [fromSide]: `${tickOffsets[tickIndex] * 100}%` }}\n          fromSide={fromSide}\n          key={`TimeTick[${tickIndex}]`}\n          colorKey={colorKey}\n        >\n          <TickValue>{tickValue}</TickValue>\n          {nbsp}\n          <TickUnit>{unit || lowestTickUnitPair[0]}</TickUnit>\n        </TickLabel>\n      ))}\n    </TicksContainer>\n  )\n}\n\nDataTicks.propTypes = {\n  scale: T.func.isRequired,\n  height: T.number.isRequired,\n  width: T.number.isRequired,\n  dataDirection: T.string.isRequired,\n  colorKey: T.string.isRequired,\n}\n\nexport default DataTicks\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { formatTime } from '@libp2p-observer/sdk'\nimport { getTickOffsets } from './utils'\n\nconst TicksContainer = styled.div`\n  position: relative;\n  height: 18px;\n  width: 100%;\n`\n\nconst TickLabel = styled.label`\n  position: absolute;\n  text-align: center;\n  transform: translateX(-50%);\n  white-space: nowrap;\n  ${({ theme }) => theme.text('label', 'small')}\n`\n\nfunction TimeTicks({ scale, width }) {\n  const ticks = scale.ticks(Math.round(width / 120))\n  const tickOffsets = getTickOffsets(ticks, scale)\n\n  return (\n    <TicksContainer>\n      {ticks.map((tick, tickIndex) => (\n        <TickLabel\n          style={{ left: `${tickOffsets[tickIndex] * 100}%` }}\n          key={`TimeTick[${tickIndex}]`}\n        >\n          {formatTime(tick)}\n        </TickLabel>\n      ))}\n    </TicksContainer>\n  )\n}\n\nTimeTicks.propTypes = {\n  scale: T.func.isRequired,\n  width: T.number.isRequired,\n}\n\nexport default TimeTicks\n","import React, { useContext } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { SetterContext, PeerContext, useAreaChart } from '@libp2p-observer/sdk'\n\nimport DataTicks from './DataTicks'\nimport TimeTicks from './TimeTicks'\n\nconst height = 52\n\nconst Container = styled.div`\n  position: relative;\n  padding: 0;\n`\n\nconst StyledSvg = styled.svg`\n  width: 100%;\n  height: ${height}px;\n  background: ${({ theme }) => theme.color('contrast', 1)};\n`\n\nconst StyledPath = styled.path`\n  fill: ${({ theme, colorKey, opacity, isHighlighted }) => {\n    if (isHighlighted) return theme.color('background', 1)\n    return theme.color(colorKey, 0, opacity)\n  }};\n`\n\nfunction TimelinePaths({\n  width,\n  dataDirection,\n  colorKey,\n  xScale,\n  yScale,\n  stackedData,\n  leftGutter,\n}) {\n  const globalPeerId = useContext(PeerContext)\n  const { setPeerId } = useContext(SetterContext)\n  const flip = dataDirection === 'out'\n\n  const pathDefs = useAreaChart({\n    stackedData,\n    height,\n    width,\n    xScale,\n    yScale,\n    flip,\n  })\n\n  return (\n    <Container>\n      <DataTicks\n        scale={yScale}\n        width={leftGutter}\n        height={height}\n        dataDirection={dataDirection}\n        colorKey={colorKey}\n      />\n      <StyledSvg height={height}>\n        {pathDefs &&\n          pathDefs.map(({ pathDef, peerId }, index) => {\n            const isHighlighted = peerId === globalPeerId\n\n            function mouseEnterHandler() {\n              if (peerId !== globalPeerId) setPeerId(peerId)\n            }\n            function mouseLeaveHandler() {\n              if (globalPeerId) setPeerId(null)\n            }\n\n            const key = `${peerId}_paths`\n            return (\n              <StyledPath\n                key={key}\n                d={pathDef}\n                name={peerId}\n                onMouseEnter={mouseEnterHandler}\n                onMouseLeave={mouseLeaveHandler}\n                colorKey={colorKey}\n                isHighlighted={isHighlighted}\n                opacity={\n                  (index % 2 ? 0.6 : 0.7) +\n                  (index / (pathDefs.length + 1)) * 0.3\n                }\n              />\n            )\n          })}\n      </StyledSvg>\n      {dataDirection === 'in' && <TimeTicks scale={xScale} width={width} />}\n    </Container>\n  )\n}\n\nTimelinePaths.propTypes = {\n  width: T.number.isRequired,\n  dataDirection: T.string.isRequired,\n  colorKey: T.string.isRequired,\n  flip: T.bool,\n  xScale: T.func.isRequired,\n  yScale: T.func.isRequired,\n  stackedData: T.array.isRequired,\n  leftGutter: T.number.isRequired,\n}\n\nexport default TimelinePaths\n","import React, { useContext, useRef } from 'react'\nimport T from 'prop-types'\nimport styled, { withTheme } from 'styled-components'\nimport { Formik } from 'formik'\n\nimport {\n  formatTime,\n  DataContext,\n  SetterContext,\n  Slider,\n  TimeContext,\n} from '@libp2p-observer/sdk'\n\nimport { getTime } from '@libp2p-observer/data'\n\nconst FormWrapper = styled.div`\n  height: inherit;\n`\n\nconst Container = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  width: 100%;\n`\nconst FirstSection = styled.div`\n  background: none;\n  border-radius: none;\n  pointer-events: none;\n`\nconst Control = styled.div`\n  background-color: ${({ theme }) => theme.color('highlight', 0, 0.5)};\n  outline: 2px solid ${({ theme }) => theme.color('highlight', 0, 0.3)};\n  border: none;\n  border-radius: 0;\n  height: 100%;\n  margin-top: 0;\n  top: 0;\n  z-index: 3;\n  // Position between data points\n  margin-left: ${({ width }) => width / 2}px;\n`\nconst InactiveSection = styled.div`\n  background-color: ${({ theme }) => theme.color('contrast', 0, 0.8)};\n  z-index: 2;\n`\nconst NumberFieldsWrapper = styled.div`\n  display: none;\n`\n\nconst TooltipContent = styled.div`\n  font-weight: 600;\n  font-size: 8pt;\n  font-family: plex-sans, sans-serif;\n  color: ${({ theme }) => theme.color('text', 3)};\n  border-radius: ${({ theme }) => theme.spacing()};\n  padding: ${({ theme }) => theme.spacing(0.5)}\n    ${({ theme }) => theme.spacing(1)};\n`\n\nconst TooltipPositioner = styled.div`\n  top: ${({ theme }) => theme.spacing(-1)};\n  bottom: unset;\n`\n\nfunction TimeSlider({ width, override = {}, theme }) {\n  const containerRef = useRef()\n\n  const dataset = useContext(DataContext)\n  const timepoint = useContext(TimeContext)\n  const { setTimepoint } = useContext(SetterContext)\n\n  const timeIndex = dataset.indexOf(timepoint)\n  const controlWidth = width / dataset.length\n\n  const handleChange = stepIndex => setTimepoint(dataset[stepIndex])\n\n  const sliderOverrides = Object.assign(\n    {\n      Container,\n      FirstSection,\n      InactiveSection,\n      Control,\n      NumberFieldsWrapper,\n    },\n    override\n  )\n\n  const initialValues = { index: timeIndex }\n\n  const tooltipProps = {\n    fixOn: 'always',\n    colorKey: 'highlight',\n    override: {\n      Content: TooltipContent,\n      Positioner: TooltipPositioner,\n    },\n    containerRef,\n    tolerance: parseInt(theme.spacing(2)),\n    content: formatTime(getTime(timepoint)),\n  }\n\n  return (\n    <FormWrapper ref={containerRef}>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={values => {\n          handleChange(values.index)\n        }}\n      >\n        {({ values, setFieldValue, submitForm }) => (\n          <Slider\n            onChange={submitForm}\n            values={values}\n            setFieldValue={setFieldValue}\n            max={dataset.length - 1}\n            controlWidth={controlWidth}\n            override={sliderOverrides}\n            width={width}\n            tooltipProps={tooltipProps}\n          />\n        )}\n      </Formik>\n    </FormWrapper>\n  )\n}\n\nTimeSlider.propTypes = {\n  width: T.number,\n  override: T.object,\n  theme: T.object.isRequired,\n}\n\nexport default withTheme(TimeSlider)\n","import React, { forwardRef } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { withResizeDetector } from 'react-resize-detector'\n\nimport { useStackedData, getNumericSorter } from '@libp2p-observer/sdk'\n\nimport { getTrafficChangesByPeer, getTotalTraffic, getPeerIds } from './utils'\nimport TimelinePaths from './TimelinePaths'\nimport TimeSlider from './TimeSlider'\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.color('contrast')};\n  position: relative;\n  padding: ${({ theme }) => theme.spacing()} 0;\n  color: ${({ theme }) => theme.color('text', 3)};\n  margin-left: ${({ leftGutter }) => leftGutter}px;\n  height: 100%;\n`\n\nconst TimelineInner = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: ${({ theme }) => theme.spacing()};\n  left: 0;\n`\n\nconst BarWrapper = styled.div`\n  position: relative;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  ${({ onClick }) => onClick && 'cursor: pointer;'}\n`\nconst PathsContainer = styled.div`\n  position: relative;\n  user-select: none;\n`\n\nfunction Timeline({ width = 700, leftGutter }) {\n  const { stackedData, xScale, yScale: yScaleIn } = useStackedData({\n    keyData: getTrafficChangesByPeer('in'),\n    getKeys: getPeerIds,\n    getSorter: getNumericSorter,\n    mapSorter: getTotalTraffic,\n  })\n\n  const { stackedData: stackedDataOut, yScale: yScaleOut } = useStackedData({\n    keyData: getTrafficChangesByPeer('out'),\n    getKeys: getPeerIds,\n    getSorter: getNumericSorter,\n    mapSorter: getTotalTraffic,\n  })\n\n  // Make sure both data in and out use the same scale\n  const yScaleInMax = yScaleIn.domain()[1]\n  const yScaleOutMax = yScaleOut.domain()[1]\n  const yScale = yScaleInMax > yScaleOutMax ? yScaleIn : yScaleOut\n\n  // Extend the yScale so that 3 tick labels fit nicely\n  yScale.nice(3)\n\n  // Inject timeline graphic into slider bar so that both can be interacted with\n  const Bar = forwardRef(({ controlWidth, onClick, children }, ref) => (\n    <BarWrapper controlWidth={controlWidth} onClick={onClick} ref={ref}>\n      <TimelineInner>\n        <PathsContainer>\n          <TimelinePaths\n            dataDirection=\"in\"\n            width={width}\n            colorKey=\"primary\"\n            stackedData={stackedData}\n            xScale={xScale}\n            yScale={yScale}\n            leftGutter={leftGutter}\n          />\n        </PathsContainer>\n        <PathsContainer>\n          <TimelinePaths\n            dataDirection=\"out\"\n            width={width}\n            colorKey=\"secondary\"\n            stackedData={stackedDataOut}\n            xScale={xScale}\n            yScale={yScale}\n            leftGutter={leftGutter}\n          />\n        </PathsContainer>\n      </TimelineInner>\n      {children}\n    </BarWrapper>\n  ))\n  Bar.propTypes = {\n    controlWidth: T.number.isRequired,\n    onClick: T.func.isRequired,\n    children: T.node,\n  }\n\n  return (\n    <Container leftGutter={leftGutter}>\n      <TimeSlider width={width - leftGutter} override={{ Bar }} />\n    </Container>\n  )\n}\n\nTimeline.propTypes = {\n  width: T.number, // Set by withResizeDetector\n  leftGutter: T.number.isRequired,\n}\n\nexport default withResizeDetector(Timeline)\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Icon } from '@libp2p-observer/sdk'\n\nconst Container = styled.div`\n  display: flex;\n  background: ${({ theme }) => theme.color('contrast', 1)};\n  cursor: pointer;\n  ${({ theme }) => theme.text('label', 'small')}\n`\n\nconst IconButton = styled.button`\n  background: ${({ theme }) => theme.color('background')};\n  margin-right: ${({ theme }) => theme.spacing(1)};\n  color: ${({ theme }) => theme.color('highlight')};\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  position: relative;\n  z-index: 2;\n`\n\nconst ButtonText = styled.span`\n  flex-grow: 1;\n  background: ${({ theme }) => theme.color('contrast', 2)};\n  border-radius: ${({ theme }) => theme.spacing()};\n  color: ${({ theme }) => theme.color('text', 3)};\n  padding-top: ${({ theme }) => theme.spacing(0.5)};\n  padding-bottom: ${({ theme }) => theme.spacing(0.5)};\n  padding-left: ${({ theme }) => theme.spacing(2.5)};\n  padding-right: ${({ theme }) => theme.spacing(1)};\n  margin-left: ${({ theme }) => theme.spacing(-2.5)};\n  margin-top: ${({ theme }) => theme.spacing(0.5)};\n  margin-bottom: ${({ theme }) => theme.spacing(0.5)};\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  ${({ theme, isHighlighted }) =>\n    isHighlighted &&\n    `\n    background: ${theme.color('background')};\n    color: ${theme.color('highlight', 1)};\n  `}\n`\n\nfunction DataTypeControl({ metadata }) {\n  const [isHighlighted, setHighlighted] = useState(false)\n\n  if (!metadata) return ''\n\n  const { type, name } = metadata\n\n  const iconNames = {\n    sample: 'cloud',\n    upload: 'doc',\n  }\n\n  const iconType = isHighlighted ? 'back' : iconNames[type]\n\n  // TODO: When implementing live ws mode:\n  //  - Make icon pulse gently while live\n  //  - Show \"pause\" icon when paused\n  return (\n    <Container\n      onMouseEnter={() => setHighlighted(true)}\n      onMouseLeave={() => setHighlighted(false)}\n    >\n      <IconButton isHighlighted={isHighlighted}>\n        <Icon type={iconType} />\n      </IconButton>\n      <ButtonText isHighlighted={isHighlighted}>\n        {isHighlighted ? 'Change data source' : name}\n      </ButtonText>\n    </Container>\n  )\n}\n\nDataTypeControl.propTypes = {\n  metadata: T.object,\n}\n\nexport default DataTypeControl\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { DataContext, Icon, RootNodeProvider } from '@libp2p-observer/sdk'\nimport Timeline from './Timeline/Timeline'\nimport DataTypeControl from './DataTypeControl'\n\nconst leftGutter = 72\n\nconst Container = styled.div`\n  background: ${({ theme }) => theme.color('contrast', 0)};\n  padding: ${({ theme }) => theme.spacing()};\n  display: flex;\n  width: 100%;\n`\n\nconst DataPanel = styled.div`\n  width: 160px;\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme }) => theme.color('contrast', 1)};\n`\n\nconst TimePanel = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  padding-right: ${({ theme }) => theme.spacing()};\n`\n\nconst DataPanelItem = styled.button`\n  display: block;\n  font-weight: 600;\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.color('text', 3, 0.8)};\n  padding: ${({ theme }) => theme.spacing(0.5)};\n  text-align: left;\n  cursor: pointer;\n  ${({ theme }) => theme.text('label', 'small')} :hover {\n    background: ${({ theme }) => theme.color('contrast', 2)};\n  }\n  margin: 2px 0;\n`\n\nconst IconContainer = styled.span`\n  margin-left: ${({ theme }) => theme.spacing(0.5)};\n  margin-right: ${({ theme }) => theme.spacing(0.5)};\n`\n\nfunction ControlPanel() {\n  const dataset = useContext(DataContext)\n  if (!dataset || !dataset.length) return ''\n\n  return (\n    <Container>\n      <RootNodeProvider>\n        <DataPanel>\n          <DataTypeControl metadata={dataset.metadata} />\n\n          <DataPanelItem>\n            <IconContainer>\n              <Icon type=\"filter\" />\n            </IconContainer>\n            0 filters applied\n          </DataPanelItem>\n          <DataPanelItem>\n            <IconContainer>\n              <Icon type=\"doc\" />\n            </IconContainer>\n            Export data\n          </DataPanelItem>\n          <DataPanelItem>Peer Id:</DataPanelItem>\n          <DataPanelItem>\n            <IconContainer>\n              <Icon type=\"forward\" />\n            </IconContainer>\n            About this peer\n          </DataPanelItem>\n        </DataPanel>\n        <TimePanel>\n          <Timeline leftGutter={leftGutter} />\n        </TimePanel>\n      </RootNodeProvider>\n    </Container>\n  )\n}\n\nexport default ControlPanel\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport {\n  DataProvider,\n  ThemeSetter,\n  applySampleData,\n  RootNodeProvider,\n} from '@libp2p-observer/sdk'\nimport samples from '@libp2p-observer/samples'\n\nimport ControlPanel from '../components/ControlPanel'\n\nconst Page = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\nconst Content = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n  overflow-y: scroll;\n  width: calc(100% - 16px);\n  padding-right: 8px;\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 8px;\n    height: 8px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n`\n\n// Standalone shell for demoing one component e.g. for staging in Storybook\nfunction DemoShell({ children }) {\n  const [mockData, setMockData] = useState(null)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const onDataLoadStart = () => setIsLoading(true)\n  const onDataLoadComplete = data => {\n    setIsLoading(false)\n    setMockData(data)\n  }\n\n  if (!mockData && !isLoading) {\n    applySampleData(samples[0], onDataLoadStart, onDataLoadComplete)\n  }\n\n  return !mockData ? (\n    'Loading sample data...'\n  ) : (\n    <ThemeSetter>\n      <DataProvider initialData={mockData}>\n        <Page>\n          <Content>\n            <RootNodeProvider>{children}</RootNodeProvider>\n          </Content>\n          <ControlPanel />\n        </Page>\n      </DataProvider>\n    </ThemeSetter>\n  )\n}\n\nDemoShell.propTypes = {\n  children: T.node,\n}\n\nexport default DemoShell\n","import React, { useContext } from 'react'\nimport T from 'prop-types'\nimport { DataTableRow, PeerContext, SetterContext } from '@libp2p-observer/sdk'\n\nfunction ConnectionsTableRow({ rowContentProps, columnDefs }) {\n  const globalPeerId = useContext(PeerContext)\n  const { setPeerId } = useContext(SetterContext)\n\n  const peerIdRow = rowContentProps.find(row => row.columnName === 'peerId')\n  const peerId = peerIdRow ? peerIdRow.value : null\n\n  function mouseEnterHandler() {\n    if (peerId !== globalPeerId) setPeerId(peerId)\n  }\n  function mouseLeaveHandler() {\n    if (globalPeerId) setPeerId(null)\n  }\n\n  return (\n    <DataTableRow\n      rowContentProps={rowContentProps}\n      columnDefs={columnDefs}\n      onMouseEnter={mouseEnterHandler}\n      onMouseLeave={mouseLeaveHandler}\n      highlighted={peerId === globalPeerId}\n    />\n  )\n}\n\nConnectionsTableRow.propTypes = {\n  rowContentProps: T.array.isRequired,\n  columnDefs: T.array.isRequired,\n}\n\nexport default ConnectionsTableRow\n","import React, { useContext } from 'react'\n\nimport { getConnections } from '@libp2p-observer/data'\nimport { DataTable, TimeContext, useTabularData } from '@libp2p-observer/sdk'\n\nimport ConnectionsTableRow from './ConnectionsTableRow'\nimport connectionsColumnDefs from '../definitions/connectionsColumns'\n\nfunction ConnectionsTable() {\n  const timepoint = useContext(TimeContext)\n\n  const {\n    columnDefs,\n    tableContentProps,\n    sortColumn,\n    setSortColumn,\n    sortDirection,\n    setSortDirection,\n  } = useTabularData({\n    columns: connectionsColumnDefs,\n    data: getConnections(timepoint),\n    defaultSort: 'status',\n  })\n\n  return (\n    <DataTable\n      tableContentProps={tableContentProps}\n      columnDefs={columnDefs}\n      sortColumn={sortColumn}\n      setSortColumn={setSortColumn}\n      sortDirection={sortDirection}\n      setSortDirection={setSortDirection}\n      override={{ DataTableRow: ConnectionsTableRow }}\n    />\n  )\n}\n\nexport default ConnectionsTable\n","export default \"Interactive datatable showing connections at a point in time, including:\\n - Peer ID\\n - Traffic in and out\\n - Streams per connection\\n - Age (time open)\\n - Status (active, closed...)\";","import Component from './components/ConnectionsTable'\nimport description from './description.md'\nimport screenshot from './screenshot.png'\n\nconst name = 'Connections table'\nconst tags = ['connections', 'streams', 'traffic', 'age']\n\nexport { Component, description, name, tags, screenshot }\n","import { validateComponentFields } from './utils'\n\nimport * as connectionsTable from '@libp2p-observer/connections-table'\n\nconst approvedViz = [\n  validateComponentFields(connectionsTable),\n  //  validateComponentFields(streamsTable),\n]\n\nexport default approvedViz\n","function validateComponentFields(componentBundle) {\n  const { name, Component, description, tags, screenshot } = componentBundle\n\n  if (!name || typeof name !== 'string')\n    throw new Error(`Invalid component name \"${name}\" (${typeof name})`)\n  if (!Component || typeof Component !== 'function')\n    throw new Error(\n      `Invalid Component renderer for ${name} (${typeof Component})`\n    )\n  if (!description || typeof description !== 'string')\n    throw new Error(\n      `Invalid component description \"${description}\" for ${name} (${typeof description})`\n    )\n  if (!tags || !Array.isArray(tags))\n    throw new Error(`Invalid component tags for ${name} (${typeof tags})`)\n\n  return {\n    name,\n    Component,\n    description,\n    tags,\n    screenshot,\n  }\n}\n\nexport { validateComponentFields }\n","import React from 'react'\nimport T from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport styled from 'styled-components'\n\nconst CatalogueCard = styled.div`\n  cursor: pointer;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.color('background')};\n  width: calc(100% - ${({ theme }) => theme.spacing(4)});\n  @media (min-width: 480px) {\n    width: calc(50% - ${({ theme }) => theme.spacing(4)});\n  }\n  @media (min-width: 960px) {\n    width: calc(33% - ${({ theme }) => theme.spacing(4)});\n  }\n  @media (min-width: 1480px) {\n    width: calc(25% - ${({ theme }) => theme.spacing(4)});\n  }\n  margin: ${({ theme }) => `${theme.spacing(2)}`};\n  box-shadow: ${({ theme: { color, spacing } }) =>\n    `0 0 ${spacing(2)} ${color('contrast', 0, 0.2)}`};\n  ${({ theme, isSelected }) =>\n    isSelected && `border: 4px solid ${theme.color('primary')};`}\n`\n\nconst CardContent = styled.div`\n  padding: 0 ${({ theme }) => `${theme.spacing(2)} ${theme.spacing(2)}`};\n  flex-grow: 1;\n`\n\nconst Tag = styled.li`\n  margin: ${({ theme }) => `${theme.spacing(0.5)}`};\n  padding: ${({ theme }) => `${theme.spacing(0.5)}`};\n  list-style: none;\n  display: inline-block;\n  ${({ theme }) => theme.text('label', 'medium', theme.color('text', 0, 0.8))}\n  font-weight: 700;\n`\n\nconst TagList = styled.ul`\n  padding: 0 ${({ theme }) => `${theme.spacing(2)} ${theme.spacing(2)}`};\n  margin: ${({ theme }) => `${theme.spacing()}`};\n  padding: 0;\n`\n\nconst StyledImg = styled.img`\n  width: 100%;\n`\n\nconst StyledHeader = styled.h3`\n  position: absolute;\n  top: ${({ theme }) => theme.spacing()};\n  left: ${({ theme }) => theme.spacing()};\n`\n\nconst StyledHeaderInner = styled.span`\n  padding: ${({ theme }) => theme.spacing()};\n  display: inline-block;\n  background: ${({ theme }) => theme.color('contrast', 1, 0.8)};\n  color: ${({ theme }) => theme.color('text', 3)};\n  line-height: 1em;\n`\n\nfunction CatalogueItem({\n  isSelected,\n  name,\n  description,\n  tags,\n  handleSelect,\n  screenshot,\n}) {\n  return (\n    <CatalogueCard onClick={handleSelect} isSelected={isSelected}>\n      <StyledImg src={screenshot} />\n      <StyledHeader>\n        <StyledHeaderInner>{name}</StyledHeaderInner>\n      </StyledHeader>\n      <CardContent>\n        <ReactMarkdown source={description} />\n      </CardContent>\n      <TagList>\n        {tags.map(tag => (\n          <Tag key={tag}>{tag}</Tag>\n        ))}\n      </TagList>\n    </CatalogueCard>\n  )\n}\n\nCatalogueItem.propTypes = {\n  isSelected: T.bool,\n  name: T.string,\n  description: T.string, // Markdown string from .md file and webpack raw-loader\n  tags: T.array,\n  handleSelect: T.func,\n  screenshot: T.any,\n}\n\nexport default CatalogueItem\n","import React, { useState, useContext } from 'react'\nimport styled from 'styled-components'\n\nimport {\n  UploadDataButton,\n  SampleDataButton,\n  SetterContext,\n} from '@libp2p-observer/sdk'\nimport samples from '@libp2p-observer/samples'\n\nconst TabsWrapper = styled.div`\n  display: flex;\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing()} 0`};\n  font-weight: 700;\n`\n\nconst SelectedTab = styled.div`\n  line-height: 1em;\n  display: flex;\n  align-items: center;\n  width: 50%;\n  margin: ${({ theme }) => `${theme.spacing()} ${theme.spacing()} 0`};\n  background: ${({ theme }) => theme.color('primary')};\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(2)}`};\n  border-radius: 6px 6px 0 0;\n`\n\nconst UnselectedTab = styled.div`\n  line-height: 1em;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  width: 25%;\n  margin: ${({ theme }) => `${theme.spacing()} ${theme.spacing()} 0`};\n  background: ${({ theme }) => theme.color('secondary', 1)};\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(2)}`};\n  color: ${({ theme }) => theme.color('text', 3)};\n  border-radius: 6px 6px 0 0;\n`\n\nconst ButtonWrapper = styled.span`\n  display: inline-block;\n  position: relative;\n  flex-grow: 1;\n  text-align: right;\n`\n\nfunction HeaderTabs() {\n  const [selectedTab, setSelectedTab] = useState(1)\n  const { dispatchDataset } = useContext(SetterContext)\n\n  const changeTab = tabIndex => {\n    dispatchDataset({ action: 'remove' })\n    setSelectedTab(tabIndex)\n  }\n\n  const SampleDataTab =\n    selectedTab === 1 ? (\n      <SelectedTab>\n        <label>Use sample data:</label>\n        <ButtonWrapper>\n          <SampleDataButton\n            title=\"Apply example data sample\"\n            samplePath={samples[0]}\n          />\n        </ButtonWrapper>\n      </SelectedTab>\n    ) : (\n      <UnselectedTab onClick={() => changeTab(1)}>\n        Use sample data\n      </UnselectedTab>\n    )\n\n  const UploadDataTab =\n    selectedTab === 2 ? (\n      <SelectedTab>\n        <label>Upload data:</label>\n        <ButtonWrapper>\n          <UploadDataButton title=\"Choose protobuf data file\" />\n        </ButtonWrapper>\n      </SelectedTab>\n    ) : (\n      <UnselectedTab onClick={() => changeTab(2)}>Upload data</UnselectedTab>\n    )\n\n  const ConnectWebsocketTab =\n    selectedTab === 3 ? (\n      <SelectedTab>\n        <label>Connect websocket:</label>\n        <ButtonWrapper>\n          <UploadDataButton title=\"Enter websocket URL\" />\n        </ButtonWrapper>\n      </SelectedTab>\n    ) : (\n      <UnselectedTab onClick={() => changeTab(3)}>\n        Connect websocket\n      </UnselectedTab>\n    )\n\n  return (\n    <TabsWrapper>\n      {SampleDataTab}\n      {UploadDataTab}\n      {ConnectWebsocketTab}\n    </TabsWrapper>\n  )\n}\n\nexport default HeaderTabs\n","import React from 'react'\nimport T from 'prop-types'\n\nfunction SelectedComponent({ viz: { Component } }) {\n  // Wrap dynamically-selected function component in static\n  // function component so there's a stable base for react hooks\n  return <Component />\n}\n\nSelectedComponent.propTypes = {\n  viz: T.shape({\n    Component: T.elementType,\n  }),\n}\n\nexport default SelectedComponent\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { RootNodeProvider } from '@libp2p-observer/sdk'\nimport { ControlPanel } from '@libp2p-observer/shell'\n\nimport approvedViz from '../definitions/approvedViz'\nimport CatalogueItem from './CatalogueItem'\nimport HeaderTabs from './HeaderTabs'\nimport SelectedComponent from './SelectedComponent'\n\nconst HEADER_HEIGHT = '67px'\n\nconst Container = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\n\nconst Main = styled.div`\n  background-color: ${({ theme }) => theme.color('background')};\n  overflow-y: scroll;\n  flex-grow: 1;\n  flex-shrink: 1;\n`\n\nconst CatalogueBkg = styled.div`\n  display: flex;\n`\n\nconst Header = styled.div`\n  z-index: 50;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: ${HEADER_HEIGHT};\n  background: ${({ theme }) => theme.color('contrast')};\n  border-bottom: ${({ theme }) =>\n    `${theme.spacing()} solid ${theme.color('primary')}`};\n`\n\nfunction Page() {\n  const [selected, setSelected] = useState(null)\n\n  return (\n    <Container>\n      <Header>\n        <HeaderTabs />\n      </Header>\n      <Main>\n        {selected !== null && (\n          <RootNodeProvider>\n            <SelectedComponent viz={approvedViz[selected]} />\n          </RootNodeProvider>\n        )}\n        <RootNodeProvider>\n          <CatalogueBkg>\n            {approvedViz.map(\n              ({ name, description, tags, screenshot }, index) => (\n                <CatalogueItem\n                  key={name}\n                  name={name}\n                  description={description}\n                  tags={tags}\n                  screenshot={screenshot}\n                  handleSelect={() =>\n                    setSelected(index === selected ? null : index)\n                  }\n                  isSelected={selected === index}\n                />\n              )\n            )}\n          </CatalogueBkg>\n        </RootNodeProvider>\n      </Main>\n      <ControlPanel />\n    </Container>\n  )\n}\n\nexport default Page\n","import React from 'react'\n\nimport ContextWrappers from './components/ContextWrappers'\nimport Page from './components/Page'\n\nfunction App() {\n  return (\n    <ContextWrappers>\n      <Page />\n    </ContextWrappers>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","'use strict';\n\nvar samples = require('./samples');\n\nmodule.exports = samples;","import React, { useState, useReducer, useRef, createContext } from 'react'\nimport T from 'prop-types'\n\nimport { getLatestTimepoint } from '@libp2p-observer/data'\n\nconst DataContext = createContext()\nconst RuntimeContext = createContext()\nconst TimeContext = createContext()\nconst PeerContext = createContext()\nconst SetterContext = createContext()\n\nfunction updateData(oldData, { action, data }) {\n  switch (action) {\n    case 'append':\n      return appendToDataSet(data, oldData)\n    case 'replace':\n      return replaceDataSet(data)\n    case 'remove':\n      return null\n    default:\n      throw new Error(`Action \"${action}\" not valid`)\n  }\n}\n\nfunction appendToDataSet(newData, oldData) {\n  // TODO: Update protobuf, then check peer Id matches\n  // If not, replace dataset\n  // Else, see if this timestamp already exists\n  // If it does, replace. Else, append\n  return [...oldData, ...newData]\n}\n\nfunction replaceDataSet(data) {\n  // E.g. after uploading a new file or connecting to a new source\n  return data\n}\n\nfunction DataProvider({ initialData = null, initialTime, children }) {\n  // This is structured to avoid re-renders disrupting user interactions e.g. unfocusing input\n  const [dataset, dispatchDataset] = useReducer(updateData, initialData)\n  const [peerId, setPeerId] = useState(null)\n\n  if (dataset && !initialTime) initialTime = getLatestTimepoint(dataset.states)\n  const [timepoint, setTimepoint] = useState(initialTime)\n\n  // Bundle setters and make bundle persist, as defining this in normal function flow\n  // causes context `value` to see a new object each run, causing re-renders every time\n  const dataSetters = useRef({\n    dispatchDataset,\n    setTimepoint,\n    setPeerId,\n  })\n\n  const states = dataset ? dataset.states : []\n  const runtime = dataset ? dataset.runtime : {}\n\n  // Select a timepoint after a new dataset is added\n  if (states.length && (!timepoint || !states.includes(timepoint))) {\n    const latestTimepoint = getLatestTimepoint(states)\n\n    if (states.includes(latestTimepoint)) {\n      setTimepoint(latestTimepoint)\n    } else {\n      // Should be unreachable but if a bug is introduced, could cause an infinite rerender if allowed\n      throw new Error('Selected a timepoint not in the current dataset')\n    }\n  }\n\n  // Separate getters and setters so that components can set a context value without\n  // then rerendering themselves because their useContext hook consumes that value\n  return (\n    <DataContext.Provider value={states}>\n      <RuntimeContext.Provider value={runtime}>\n        <TimeContext.Provider value={timepoint}>\n          <PeerContext.Provider value={peerId}>\n            <SetterContext.Provider value={dataSetters.current}>\n              {children}\n            </SetterContext.Provider>\n          </PeerContext.Provider>\n        </TimeContext.Provider>\n      </RuntimeContext.Provider>\n    </DataContext.Provider>\n  )\n}\n\nDataProvider.propTypes = {\n  initialData: T.object,\n  initialTime: T.number,\n  children: T.node.isRequired,\n}\n\nexport {\n  DataProvider,\n  DataContext,\n  RuntimeContext,\n  TimeContext,\n  PeerContext,\n  SetterContext,\n}\n","import React, { createContext, useEffect, useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nconst RootNodeContext = createContext()\n\nconst Container = styled.div`\n  width: inherit;\n  height: inherit;\n  display: inherit;\n  flex-direction: inherit;\n`\n\nfunction RootNodeProvider({ children }) {\n  const rootNodeRef = useRef()\n\n  // Re-render listeners when ref is available\n  const [refState, setRefState] = useState({})\n  useEffect(() => {\n    if (rootNodeRef.current && !refState.current) setRefState(rootNodeRef)\n  })\n\n  return (\n    <Container ref={rootNodeRef}>\n      <RootNodeContext.Provider value={refState}>\n        {children}\n      </RootNodeContext.Provider>\n    </Container>\n  )\n}\n\nRootNodeProvider.propTypes = {\n  children: T.node.isRequired,\n}\n\nexport { RootNodeContext, RootNodeProvider }\n","import nexa_light from './fonts/Nexa-Light.otf'\nimport nexa_bold from './fonts/Nexa-Bold.otf'\n\nimport plexSans_extraLight from './fonts/IBMPlexSans-ExtraLight.otf'\nimport plexSans_light from './fonts/IBMPlexSans-Light.otf'\nimport plexSans_regular from './fonts/IBMPlexSans-Regular.otf'\nimport plexSans_text from './fonts/IBMPlexSans-Text.otf'\nimport plexSans_medium from './fonts/IBMPlexSans-Medium.otf'\nimport plexSans_semiBold from './fonts/IBMPlexSans-SemiBold.otf'\nimport plexSans_bold from './fonts/IBMPlexSans-Bold.otf'\n\nimport plexMono_light from './fonts/IBMPlexMono-Light.otf'\nimport plexMono_text from './fonts/IBMPlexMono-Text.otf'\nimport plexMono_semiBold from './fonts/IBMPlexMono-SemiBold.otf'\n\nfunction getFontFace({ font, file, weight = 400, format = 'opentype' }) {\n  return `\n    @font-face {\n      src: url('${file}') format('${format}');\n      font-family: ${font};\n      font-weight: ${weight};\n    }\n  `\n}\n\nexport default [\n  // Use Nexa for headings and paragraph text\n  getFontFace({\n    font: 'nexa',\n    file: nexa_light,\n  }),\n  getFontFace({\n    font: 'nexa',\n    file: nexa_bold,\n    weight: 700,\n  }),\n\n  // Use plex-sans for small labels and table content\n  // Use weights to communicate magnitude at a glance\n  // e.g. 7 gb bolder than 70 mb which is bolder than 700 kb\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_extraLight,\n    weight: 200,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_light,\n    weight: 300,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_regular,\n    weight: 400,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_text,\n    weight: 500,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_medium,\n    weight: 600,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_semiBold,\n    weight: 700,\n  }),\n  getFontFace({\n    font: 'plex-sans',\n    file: plexSans_bold,\n    weight: 800,\n  }),\n  // Use plex-mono for code and copy-paste snippets like hash ids\n  getFontFace({\n    font: 'plex-mono',\n    file: plexMono_light,\n    weight: 300,\n  }),\n  getFontFace({\n    font: 'plex-mono',\n    file: plexMono_text,\n    weight: 500,\n  }),\n  getFontFace({\n    font: 'plex-mono',\n    file: plexMono_semiBold,\n    weight: 700,\n  }),\n]\n","const palette = {\n  background: [\n    // white / pale beige / pale grey\n    '255, 255, 255',\n    '241, 242, 240',\n    '220, 228, 234',\n  ],\n  contrast: [\n    // near-black / dark purple / purple\n    '20, 22, 45',\n    '78, 23, 91',\n    '121, 27, 137',\n  ],\n  text: [\n    // black / grey / white\n    '0, 0, 0',\n    '93, 94, 96',\n    '128, 130, 133',\n    '255, 255, 255',\n  ],\n  primary: [\n    // yellow / orange\n    '252, 189, 32',\n    '232, 137, 0',\n  ],\n  secondary: [\n    // cyan / blue\n    '112, 208, 224',\n    '32, 155, 198',\n  ],\n  tertiary: [\n    // green\n    '196, 209, 18',\n    '159, 176, 0',\n    '0, 99, 109',\n  ],\n  highlight: [\n    // magenta / crimson\n    '209, 14, 102',\n    '163, 26, 75',\n  ],\n}\n\nconst color = (col, val = 0, alpha) => {\n  // For example, `theme.color('secondary', 1, 0.5)` for translucent blue\n  const rgb = palette[col][val]\n  return alpha ? `rgba(${rgb}, ${alpha})` : `rgb(${rgb})`\n}\n\nconst spacing = (num = 1) => `${num * 8}px`\n\nconst typography = {\n  default: `\n    font-family: plex-sans, sans-serif;\n    line-height: 1.6em;\n  `,\n  body: {\n    small: `\n      font-size: 9pt;\n    `,\n    medium: `\n      font-size: 12pt;\n    `,\n    large: `\n      font-size: 16pt;\n    `,\n  },\n  label: {\n    small: `\n      font-size: 8pt;\n      line-height: 1em;\n    `,\n    medium: `\n      font-size: 10pt;\n      line-height: 1em;\n    `,\n    large: `\n      font-size: 12pt;\n      line-height: 1em;\n    `,\n  },\n  heading: {\n    small: `\n      font-size: 12pt;\n      margin: ${spacing()} 0;\n      font-weight: bold;\n    `,\n    medium: `\n      font-size: 16pt;\n      margin: ${spacing(2)} 0 ${spacing()};\n    `,\n    large: `\n      font-size: 24pt;\n      margin: ${spacing(2)} 0 ${spacing()};\n      font-weight: bold;\n    `,\n  },\n}\n\nconst text = (elem, size, rgb) => {\n  // TODO: see if styled-components has a convenient way to merge overrides\n  // css`` doesn't work here: adds commas breaking CSS rules\n  return `\n    ${typography.default}\n    ${elem && size ? typography[elem][size] : ''}\n    ${rgb ? `color: ${rgb};` : ''}\n  `\n}\n\nconst tableCell = `\n  ${text('label', 'medium')}\n  padding-top: ${spacing()};\n  padding-bottom: ${spacing()};\n  padding-left: ${spacing(3)};\n  padding-right: ${spacing(2)};\n  text-align: right;\n`\n\nexport default { color, spacing, text, styles: { tableCell } }\n","import React, { useContext } from 'react'\nimport T from 'prop-types'\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\n\nimport fontFaces from '../../theme/fontFaces'\nimport theme from '../../theme/theme.js'\n\nfunction ThemeSetter({ children }) {\n  // Ensure we don't add global styles twice\n  if (useContext(ThemeProvider)) {\n    throw new Error(\n      'ThemeWrapper cannot be nested inside another ThemeProvider or itself'\n    )\n  }\n\n  const GlobalFontFaceStyles = createGlobalStyle`\n    ${fontFaces.join('')}\n  `\n\n  // TODO: make line height smarter\n  const GlobalDefaults = createGlobalStyle`\n    * {\n      box-sizing: border-box;\n      line-height: 1.6em;\n    }\n    body {\n      font-family: 'plex-sans, sans-serif';\n    }\n    p, li, h1, h2, h3, h4, h5, h6 {\n      color: ${({ theme }) => theme.color('text', 1)};\n    }\n  `\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalFontFaceStyles />\n      <GlobalDefaults />\n      {children}\n    </ThemeProvider>\n  )\n}\n\nThemeSetter.propTypes = {\n  children: T.node,\n}\n\nexport default ThemeSetter\n","// Attribution:\n// Sort, Filter, Down and Up icons by Ryo Sato from the Noun Project\n\n// TODO: request the LibP2P icon set be expanded for these things\nimport asc from './icons/Asc'\nimport desc from './icons/Desc'\nimport sort from './icons/Sort'\n\n// Protocol Labs own icons\nimport cancel from './icons/Cancel'\nimport check from './icons/Check'\nimport uncheck from './icons/Uncheck'\n\n// Created based on Protocol Labs icons\nimport filter from './icons/Filter'\nimport back from './icons/Back'\nimport forward from './icons/Forward'\nimport doc from './icons/Doc'\nimport cloud from './icons/Cloud'\nimport closed from './icons/Closed'\nimport closing from './icons/Closing'\nimport opening from './icons/Opening'\n\n// Export an object of url paths; importer picks path by key\nexport default {\n  asc,\n  desc,\n  sort,\n  cancel,\n  check,\n  uncheck,\n  filter,\n  back,\n  forward,\n  doc,\n  cloud,\n  closed,\n  closing,\n  opening,\n}\n","import React from 'react'\n\nconst SvgAsc = props => (\n  <svg\n    viewBox=\"16 16 70 70\"\n    fill=\"currentColor\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M51.494 35.157l4.41 4.409a1.5 1.5 0 102.121-2.121l-6.965-6.964a1.5 1.5 0 00-2.12 0l-6.957 6.956a1.5 1.5 0 102.121 2.121l4.39-4.389v33.367a1.503 1.503 0 001.5 1.5 1.503 1.503 0 001.5-1.5V35.157z\" />\n  </svg>\n)\n\nexport default SvgAsc\n","import React from 'react'\n\nconst SvgDesc = props => (\n  <svg\n    viewBox=\"16 16 70 70\"\n    fill=\"currentColor\"\n    strokeLinejoin=\"round\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M48.506 64.843l-4.41-4.41a1.5 1.5 0 10-2.121 2.121l6.965 6.965a1.5 1.5 0 002.12 0l6.957-6.956a1.5 1.5 0 10-2.121-2.121l-4.39 4.389V31.464a1.503 1.503 0 00-1.5-1.5 1.503 1.503 0 00-1.5 1.5v33.379z\" />\n  </svg>\n)\n\nexport default SvgDesc\n","import React from 'react'\n\nconst SvgSort = props => (\n  <svg\n    viewBox=\"14 14 74 74\"\n    fill=\"currentColor\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M56.491 64.878l-4.409-4.409a1.5 1.5 0 10-2.121 2.121l6.964 6.964a1.5 1.5 0 002.121 0l6.956-6.956a1.5 1.5 0 10-2.121-2.121l-4.39 4.389V41.499a1.503 1.503 0 00-1.5-1.5 1.503 1.503 0 00-1.5 1.5v23.379zm-13.06-29.763l4.409 4.408a1.5 1.5 0 102.121-2.121l-6.963-6.964a1.502 1.502 0 00-2.122 0l-6.956 6.956a1.5 1.5 0 102.122 2.122l4.389-4.39v23.367a1.498 1.498 0 001.5 1.5 1.5 1.5 0 001.5-1.5V35.115z\" />\n  </svg>\n)\n\nexport default SvgSort\n","import React from 'react'\n\nconst SvgCancel = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <g id=\"cancel_svg__Layer_36\" data-name=\"Layer 36\">\n      <path\n        d=\"M48.31 18.82a29.49 29.49 0 11-29.49 29.49 29.52 29.52 0 0129.49-29.49m0-4a33.49 33.49 0 1033.48 33.49 33.48 33.48 0 00-33.48-33.49z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeMiterlimit={10}\n        strokeWidth={4}\n        d=\"M59.21 37.13l-21.8 21.54M37.41 37.13l21.8 21.54\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SvgCancel\n","import React from 'react'\n\nconst SvgCheck = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <g data-name=\"Layer 34\">\n      <path\n        d=\"M48 19a29 29 0 11-29 29 29 29 0 0129-29m0-4a33 33 0 1033 33 33 33 0 00-33-33z\"\n        fill=\"currentColor\"\n      />\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeMiterlimit={10}\n        strokeWidth={4}\n        d=\"M35.32 46.81l8.73 11.46 16.63-20.54\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SvgCheck\n","import React from 'react'\n\nconst SvgUncheck = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <defs>\n      <style />\n    </defs>\n    <path\n      d=\"M48 19a29 29 0 11-29 29 29 29 0 0129-29m0-4a33 33 0 1033 33 33 33 0 00-33-33z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SvgUncheck\n","import React from 'react'\n\nconst SvgFilter = props => (\n  <svg\n    viewBox=\"8 8 84 84\"\n    fill=\"currentColor\"\n    strokeMiterlimit={1.414}\n    {...props}\n  >\n    <path d=\"M34.15 64a7.507 7.507 0 017.35-6 7.507 7.507 0 017.35 6H72a1.5 1.5 0 010 3H48.85a7.507 7.507 0 01-7.35 6 7.507 7.507 0 01-7.35-6H28a1.5 1.5 0 010-3h6.15zm7.35 6a4.505 4.505 0 01-4.5-4.5c0-2.481 2.019-4.5 4.5-4.5s4.5 2.019 4.5 4.5-2.019 4.5-4.5 4.5zm9.65-21a7.507 7.507 0 017.35-6 7.507 7.507 0 017.35 6H72a1.5 1.5 0 010 3h-6.15a7.507 7.507 0 01-7.35 6 7.507 7.507 0 01-7.35-6H28a1.5 1.5 0 010-3h23.15zm7.35 6a4.505 4.505 0 01-4.5-4.5c0-2.481 2.019-4.5 4.5-4.5s4.5 2.019 4.5 4.5-2.019 4.5-4.5 4.5zM34.15 34a7.507 7.507 0 017.35-6 7.507 7.507 0 017.35 6H72a1.5 1.5 0 010 3H48.85a7.507 7.507 0 01-7.35 6 7.507 7.507 0 01-7.35-6H28a1.5 1.5 0 010-3h6.15zm7.35 6a4.505 4.505 0 01-4.5-4.5c0-2.481 2.019-4.5 4.5-4.5s4.5 2.019 4.5 4.5-2.019 4.5-4.5 4.5z\" />\n  </svg>\n)\n\nexport default SvgFilter\n","import React from 'react'\n\nconst SvgBack = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M18.933 24.716a.85.85 0 00.601-1.451l-7.264-7.263 7.264-7.267a.85.85 0 00-1.201-1.202l-7.866 7.868a.852.852 0 00.001 1.203l7.865 7.864a.846.846 0 00.6.248z\"\n    />\n  </svg>\n)\n\nexport default SvgBack\n","import React from 'react'\n\nconst SvgForward = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M13.067 24.716a.85.85 0 01-.601-1.451l7.264-7.263-7.264-7.267a.85.85 0 111.202-1.202l7.866 7.868a.852.852 0 01-.001 1.203l-7.865 7.864a.85.85 0 01-.601.248z\"\n    />\n  </svg>\n)\n\nexport default SvgForward\n","import React from 'react'\n\nconst SvgDoc = props => (\n  <svg viewBox=\"0 0 96 96\" {...props}>\n    <defs>\n      <style>\n        {\n          '.doc_svg__cls-2{fill:none;stroke:currentColor;stroke-miterlimit:10;stroke-width:4px}'\n        }\n      </style>\n    </defs>\n    <g id=\"doc_svg__Layer_25\" data-name=\"Layer 25\">\n      <path\n        d=\"M66.53 18.76a8 8 0 018 8v42.48a8 8 0 01-8 8H29.47a8 8 0 01-8-8V26.76a8 8 0 018-8h37.06m0-4H29.47a12 12 0 00-12 12v42.48a12 12 0 0012 12h37.06a12 12 0 0012-12V26.76a12 12 0 00-12-12z\"\n        fill=\"currentColor\"\n      />\n      <path\n        className=\"doc_svg__cls-2\"\n        d=\"M30.94 32.81h34.12M30.94 45h34.12M30.94 57.2h34.12\"\n      />\n    </g>\n  </svg>\n)\n\nexport default SvgDoc\n","import React from 'react'\n\nconst SvgCloud = props => (\n  <svg viewBox=\"0 0 96.62 96.62\" {...props}>\n    <path\n      d=\"M72.84 44.9a9.67 9.67 0 00-4.57 1.1 10.88 10.88 0 00.06-1.14 10.7 10.7 0 00-10.57-10.8A10.45 10.45 0 0049.64 38a13.31 13.31 0 00-12.25-8.31A13.46 13.46 0 0024.1 42.58a11.35 11.35 0 00-9.83 11.35c0 11.65 10 13.05 10.52 13.05H72.7c3.47 0 9.35-5.53 9.35-11.18s-3.69-10.9-9.21-10.9z\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeMiterlimit={10}\n      strokeWidth={4}\n      data-name=\"Layer 40\"\n    />\n  </svg>\n)\n\nexport default SvgCloud\n","import React from 'react'\n\nconst SvgClosed = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M16 7.387a8.612 8.612 0 018.612 8.615c0 4.752-3.854 8.606-8.612 8.606-4.756 0-8.61-3.854-8.61-8.606A8.61 8.61 0 0116 7.387m0-1.188c-5.412 0-9.8 4.389-9.8 9.803 0 5.41 4.388 9.799 9.8 9.799 5.413 0 9.801-4.389 9.801-9.799 0-5.414-4.389-9.803-9.801-9.803z\"\n    />\n    <path fill=\"currentColor\" d=\"M10.654 15.287H21.27v1.425H10.654z\" />\n  </svg>\n)\n\nexport default SvgClosed\n","import React from 'react'\n\nconst SvgClosing = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M17.109 25.748h-.756v-1.402h.654l.652-.102.213 1.389-.763.115zm-3.879-.338l-.797-.254-.628-.318.628-1.26.584.293.624.193-.411 1.346zm7.727-.91l-.83-1.135 1.139-.832.842 1.127-1.151.84zM9.142 23.064l-.953-1.059 1.047-.943.94 1.047-1.034.955zm15.106-1.826l-1.217-.707.697-1.197 1.207.631-.335.668-.352.605zM6.483 18.381l-.224-.67 1.353-.383.248.76.146.686-1.373.296-.15-.689m19.257-1.61l-1.406-.037V15.33l1.406-.02v1.461zm-18.052-1.98l-1.359-.352.172-.781.221-.668 1.335.443-.223.674-.146.684zm1.547-3.756l-1.059-.928.955-1.061 1.044.943-.94 1.046zm3.034-2.578l-.412-1.342.627-.191.58-.293.631 1.256-.755.363-.671.207zm4.87-2.108h.701l-.082 1.404-.818-.012-.698-.098.199-1.393.698.099M10.731 15.345H21.21v1.407H10.731zM20.885 7.567l.709.445.528.465-.922 1.064-.492-.43-.557-.343zM24.26 10.858l.66 1.264-1.249.652-.65-1.249z\"\n    />\n  </svg>\n)\n\nexport default SvgClosing\n","import React from 'react'\n\nconst SvgOpening = props => (\n  <svg viewBox=\"0 0 32 32\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M14.796 20.212l-3.1-4.074 1.117-.85 2.017 2.647 4.311-5.325 1.093.883zM17.109 25.751h-.755v-1.408h.654l.652-.1.213 1.393-.764.115zm-3.878-.344l-.797-.254-.628-.314.628-1.26.584.291.624.193-.411 1.344zm7.726-.91l-.83-1.135 1.139-.83.842 1.127-1.151.838zM9.142 23.063l-.953-1.059 1.047-.941.94 1.045-1.034.955zm15.106-1.826l-1.217-.709.697-1.195 1.207.633-.335.664-.352.607zm-17.615-2.17l-.149-.687.688-.148-.688.146-.224-.668 1.353-.385.248.76.146.689-1.374.293zm19.107-2.296l-1.406-.037v-1.406l1.406-.02v1.463zM7.689 14.79l-1.359-.353.172-.779.221-.666 1.335.443-.223.668-.146.687zm16.04-2.025l-.344-.59.6-.369.627-.314-.627.314.631-.314.305.611-1.192.662zM9.236 11.032l-1.059-.93.955-1.052 1.044.938-.94 1.044zm12.061-1.486l-.576-.379.377-.598.412-.568-.412.568.416-.564.561.402-.778 1.139zm-9.028-1.09l-.412-1.344.627-.193.58-.291.631 1.26-.754.361-.672.207zm5.489-.705l-.818-.01-.698-.098.199-1.395.698.1-.102.693.102-.693h.701l-.082 1.403z\"\n    />\n  </svg>\n)\n\nexport default SvgOpening\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport icons from '../theme/icons'\n\nconst Container = styled.span`\n  display: inline-block;\n  vertical-align: middle;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size}px;\n\n  ${({ theme, active }) => active && `color: ${theme.color('highlight')};`}\n\n  ${({ theme, disabled }) =>\n    disabled &&\n    `\n      color: ${theme.color('text', 3)};\n  `}\n  ${({ theme, offset }) => offset && `margin-right: -${theme.spacing(2)};`}\n  ${({ onClick, theme, disabled }) =>\n    onClick &&\n    !disabled &&\n    `\n    cursor: pointer;\n    &:hover {\n      backgroundColor: ${theme.color('background', 1, 0.3)};\n    }\n  `}\n`\n\nfunction Icon({ type, onClick, active, disabled, size = 20 }) {\n  const IconSvg = icons[type]\n  if (!IconSvg) throw new Error(`No icon found named \"${type}\"`)\n\n  return (\n    <Container\n      onClick={disabled ? null : onClick}\n      active={active}\n      disabled={disabled}\n      size={size}\n    >\n      <IconSvg />\n    </Container>\n  )\n}\n\nIcon.propTypes = {\n  type: T.string.isRequired,\n  onClick: T.func,\n  active: T.bool,\n  disabled: T.bool,\n  offset: T.bool,\n  size: T.number,\n}\n\nexport default Icon\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { Field } from 'formik'\n\nimport Icon from '../../Icon'\n\nfunction areAllChecked(values) {\n  return Object.values(values).every(value => value)\n}\n\nasync function toggleAll(values, fieldNames, setFieldValue, onChange) {\n  // tick everything, unless everything is already ticked, then tick nothing\n  const newValue = !areAllChecked(values)\n  await Promise.all(fieldNames.map(name => setFieldValue(name, newValue)))\n  onChange()\n}\n\nasync function toggleField(values, name, setFieldValue, onChange) {\n  await setFieldValue(name, !values[name])\n  onChange()\n}\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst StyledHeader = styled.div`\n  border: 1px solid ${({ theme }) => theme.color('background', 2)};\n  font-weight: 900;\n`\n\nconst StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  display: flex;\n`\n\nconst StyledListItem = styled.li`\n  margin: 0 ${({ theme }) => theme.spacing(0.5)};\n  padding: 0;\n  list-style: none;\n`\n\nconst StyledToggleButton = styled.button`\n  cursor: pointer;\n  border: none;\n  background: ${({ theme }) => theme.color('background', 0)};\n  width: 100%;\n  text-align: left;\n  font-weight: ${({ checked }) => (checked ? 600 : 300)};\n  color: ${({ theme, checked }) =>\n    theme.color(checked ? 'tertiary' : 'text', 'mid')};\n  :focus {\n    outline: none;\n  }\n  :hover {\n    background: ${({ theme }) => theme.color('background', 2, 0.5)};\n  }\n`\n\nfunction CheckboxList({\n  title,\n  fieldNames,\n  setFieldValue,\n  onChange,\n  values,\n  override = {},\n}) {\n  return (\n    <Container as={override.Container}>\n      <StyledHeader as={override.StyledHeader}>\n        <StyledToggleButton\n          onClick={() => toggleAll(values, fieldNames, setFieldValue, onChange)}\n          as={override.StyledToggleButton}\n        >\n          <Field type=\"hidden\" name=\"set-all\" value={areAllChecked(values)} />\n          <Icon type={areAllChecked(values) ? 'check' : 'uncheck'} />\n          {title}\n        </StyledToggleButton>\n      </StyledHeader>\n      <StyledList as={override.StyledList}>\n        {fieldNames.map(name => (\n          <StyledListItem key={name} as={override.StyledListItem}>\n            <StyledToggleButton\n              onClick={() => toggleField(values, name, setFieldValue, onChange)}\n              checked={values[name]}\n              as={override.StyledToggleButton}\n            >\n              <Field type=\"hidden\" name={name} value={values[name]} />\n              <Icon type={values[name] ? 'check' : 'uncheck'} />\n              {name}\n            </StyledToggleButton>\n          </StyledListItem>\n        ))}\n      </StyledList>\n    </Container>\n  )\n}\n\nCheckboxList.propTypes = {\n  fieldNames: T.arrayOf(T.string).isRequired,\n  title: T.string.isRequired,\n  setFieldValue: T.func.isRequired,\n  onChange: T.func.isRequired,\n  values: T.object.isRequired,\n  override: T.object,\n}\n\nexport default CheckboxList\n","import React, { useLayoutEffect, useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nfunction getInvertedDirection(direction) {\n  const directionInverse = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left',\n  }\n  return directionInverse[direction]\n}\n\nfunction getTickBorderColor(direction, color) {\n  const invertedDirection = getInvertedDirection(direction)\n  return `border-${invertedDirection}-color: ${color};`\n}\n\nfunction getPosition(direction, mainPosition) {\n  const isVertical = ['top', 'bottom'].includes(direction)\n  const centredSide = isVertical ? 'left' : 'top'\n\n  const centredAxis = isVertical ? 'X' : 'Y'\n\n  return `\n    ${direction}: ${mainPosition};\n    ${centredSide}: 50%;\n    transform: translate${centredAxis}(-50%);\n  `\n}\n\nfunction getTickPosition(direction, tickSize) {\n  return getPosition(direction, `-${tickSize * 2}px`)\n}\n\nfunction getBoxShadow(theme, weight) {\n  return `box-shadow: 0 ${theme.spacing(0.5)} ${theme.spacing()} ${theme.color(\n    'contrast',\n    0,\n    weight\n  )};`\n}\n\nfunction updateOffset(positionerRef, tickRef, containerRef, tolerance) {\n  if (!positionerRef.current || !tickRef.current || !containerRef.current)\n    return\n\n  const elemRect = positionerRef.current.getBoundingClientRect()\n  const boundsRect = containerRef.current.getBoundingClientRect()\n\n  const { marginLeft, marginTop } = positionerRef.current.style\n  const currentLeft = parseFloat(marginLeft)\n  const currentTop = parseFloat(marginTop)\n\n  const offsets = {\n    top: Math.min(0, elemRect.top - boundsRect.top - currentTop + tolerance),\n    left: Math.min(\n      0,\n      elemRect.left - boundsRect.left - currentLeft + tolerance\n    ),\n    right: Math.max(\n      0,\n      elemRect.right - boundsRect.right - currentLeft - tolerance\n    ),\n    bottom: Math.max(\n      0,\n      elemRect.bottom - boundsRect.bottom - currentTop - tolerance\n    ),\n  }\n\n  // Don't apply contradictory offsets if a big tooltip spans both edges of a small view\n  if (!(offsets.left && offsets.right)) {\n    const offset = offsets.left || offsets.right || 0\n    positionerRef.current.style.marginLeft = 0 - offset + 'px'\n    tickRef.current.style.marginLeft = offset + 'px'\n  }\n\n  if (!(offsets.top && offsets.bottom)) {\n    const offset = offsets.top || offsets.bottom || 0\n    positionerRef.current.style.marginTop = 0 - offset + 'px'\n    tickRef.current.style.marginTop = offset + 'px'\n  }\n}\n\nconst Target = styled.span`\n  position: relative;\n  display: inline-block;\n  ${({ clickToFix, isFixed, theme }) =>\n    clickToFix &&\n    `\n    cursor: pointer;\n    ${isFixed && getBoxShadow(theme, 0.2)}\n  `}\n`\n\nconst Positioner = styled.div`\n  z-index: 15;\n  position: absolute;\n  ${({ direction, tickSize, offsets }) =>\n    getPosition(direction, `calc(100% - ${tickSize}px)`, offsets)}\n\n  // Give a little space that tolerates small mouseouts around the tick shape\n  ${({ direction, tickSize }) =>\n    `border-${direction}: ${tickSize * 2}px solid transparent`};\n`\n\nconst Content = styled.div`\n  text-align: left;\n  padding: ${({ theme }) => `${theme.spacing()} ${theme.spacing(2)}`};\n  background: ${({ theme, getColor }) => getColor(theme)};\n  ${({ theme, isFixed }) => getBoxShadow(theme, isFixed ? 0.5 : 0.3)}\n`\n\nconst Tick = styled.div`\n  position: absolute;\n  height: 0;\n  width: 0;\n  border-style: solid;\n  border-width: ${({ tickSize }) => tickSize}px;\n  border-color: transparent;\n  z-index: 3;\n  ${({ direction, theme, getColor }) =>\n    getTickBorderColor(direction, getColor(theme))}\n  ${({ direction, tickSize, offsets }) =>\n    getTickPosition(direction, tickSize, offsets)}\n`\n\nconst sideOptions = ['top', 'right', 'bottom', 'left']\nconst fixOnOptions = ['click', 'always', 'never']\n\nfunction Tooltip({\n  children,\n  tickSize = 8,\n  colorKey = 'background',\n  colorIndex = 0,\n  side = sideOptions[0],\n  fixOn = fixOnOptions[0],\n  content,\n  tolerance = 0,\n  containerRef = {},\n  override = {},\n}) {\n  const clickToFix = fixOn === 'click'\n  const alwaysFix = fixOn === 'always'\n  const [isFixed, setIsFixed] = useState(alwaysFix)\n  const [isShowing, setIsShowing] = useState(false)\n\n  const positionerRef = useRef()\n  const tickRef = useRef()\n  useLayoutEffect(() =>\n    updateOffset(positionerRef, tickRef, containerRef, tolerance)\n  )\n\n  if (!content) return <Target>{children}</Target>\n\n  const show = () => setIsShowing(true)\n  const hide = () => setIsShowing(false)\n  const toggleFix = () => setIsFixed(!isFixed)\n  const stopPropagation = e => e.stopPropagation()\n\n  const direction = getInvertedDirection(side)\n  const getColor = theme => theme.color(colorKey, colorIndex)\n\n  return (\n    <Target\n      onMouseEnter={show}\n      onMouseLeave={hide}\n      onClick={clickToFix ? toggleFix : null}\n      clickToFix={clickToFix}\n      isFixed={isFixed}\n      as={override.Target}\n    >\n      {children}\n      {(isFixed || isShowing) && (\n        <Positioner\n          style={{ marginLeft: 0, marginTop: 0 }}\n          onClick={clickToFix ? stopPropagation : null}\n          direction={direction}\n          tickSize={tickSize}\n          ref={positionerRef}\n          as={override.Positioner}\n        >\n          <Tick\n            direction={direction}\n            tickSize={tickSize}\n            getColor={getColor}\n            ref={tickRef}\n            as={override.Tick}\n          />\n          <Content getColor={getColor} isFixed={isFixed} as={override.Content}>\n            {content}\n          </Content>\n        </Positioner>\n      )}\n    </Target>\n  )\n}\n\nTooltip.propTypes = {\n  children: T.node.isRequired,\n  tickSize: T.number,\n  colorKey: T.string,\n  colorIndex: T.index,\n  side: T.oneOf(sideOptions),\n  fixOn: T.oneOf(fixOnOptions),\n  content: T.node,\n  tolerance: T.number,\n  override: T.object,\n  containerRef: T.object,\n}\n\nexport default Tooltip\n","import React, { useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { Field } from 'formik'\n\nimport Icon from '../../Icon'\nimport Tooltip from '../../Tooltip'\n\nconst CONTROL_WIDTH = 16\nconst BAR_HEIGHT = 12\nconst WIDTH = 340\n\nconst Container = styled.div`\n  padding: ${({ theme }) => `${theme.spacing(3)} ${theme.spacing(2)} 0`};\n  user-select: none;\n  width: ${({ width }) => width}px;\n`\n\nconst Bar = styled.div`\n  background: ${({ theme }) => theme.color('background')};\n  border-radius: ${({ theme }) => theme.spacing()};\n  border: 2px solid ${({ theme }) => theme.color('background', 2)};\n  height: ${BAR_HEIGHT}px;\n  display: flex;\n  position: relative;\n  cursor: pointer;\n`\n\nconst ActiveSection = styled.div`\n  flex-grow: 1;\n  background: ${({ theme }) => theme.color('primary', 1)};\n  height: 100%;\n  border-radius: ${({ theme }) => theme.spacing()};\n  user-select: none;\n`\nconst InactiveSection = styled.div`\n  height: 100%;\n  user-select: none;\n`\n\nconst Control = styled.div`\n  position: absolute;\n  width: ${({ width }) => width}px;\n  height: ${({ width }) => width}px;\n  margin-top: -${BAR_HEIGHT / 2}px;\n  border-radius: ${({ width, isLower, isUpper }) =>\n    `${!isUpper ? `${width}px ` : '0 '} ${\n      !isLower ? `${width}px ${width}px ` : '0 0 '\n    } ${!isUpper ? `${width}px` : '0'}`};\n  border: 2px solid ${({ theme }) => theme.color('background', 2)};\n  background: ${({ theme }) => theme.color('primary')};\n  text-align: center;\n  box-shadow: 0px 1px 2px ${({ theme }) => theme.color('contrast', 0, 0.5)};\n  cursor: col-resize;\n  ${({ isLower }) => isLower && `margin-left: 2px;`}\n  ${({ isUpper, width }) => isUpper && `margin-left: ${width - 2}px;`}\n`\n\nconst NumberFieldsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: ${({ theme }) => theme.spacing()};\n  margin-top: ${({ theme }) => theme.spacing()};\n`\n\nconst NumberInput = styled.input`\n  font-family: 'plex-mono';\n  background: ${({ theme }) => theme.color('background', 1)};\n  padding: ${({ theme }) =>\n    `${theme.spacing(0.5)} 0 ${theme.spacing(0.5)} ${theme.spacing(8)}`};\n  font-weight: 400;\n  color: ${({ theme, isDefault }) =>\n    theme.color(isDefault ? 'text' : 'highlight', 1)};\n  :focus {\n    font-weight: 800;\n  }\n`\n\nconst NumberLabelWrapper = styled.span`\n  display: inline-block;\n  position: relative;\n`\n\nconst NumberLabel = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  padding: ${({ theme }) => theme.spacing(0.5)};\n`\n\nfunction getMouseX(event, containerRef) {\n  return (\n    event.nativeEvent.clientX -\n    containerRef.current.getBoundingClientRect().left\n  )\n}\n\nfunction getMousePosition(mouseX, width) {\n  return mouseX / width\n}\n\nfunction getStepPosition(stepIndex, min, max, steps) {\n  const stepIndexWithinMin = Math.max(stepIndex, min)\n  if (!stepIndexWithinMin) return 0\n  return Math.min(stepIndexWithinMin, max) / steps\n}\n\nfunction getStepIndex(position, steps) {\n  const nearestStepIndex = Math.round(steps * position)\n  return nearestStepIndex\n}\n\nfunction getNearestFieldName(\n  mousePosition,\n  position,\n  upperPosition,\n  fieldNames\n) {\n  const lowerDistance = Math.abs(mousePosition - position)\n  const upperDistance = Math.abs(mousePosition - upperPosition)\n  const fieldIndex = lowerDistance < upperDistance ? 0 : 1\n\n  return fieldNames[fieldIndex]\n}\n\nfunction Slider({\n  min = 0,\n  max,\n  steps,\n  stepInterval = 1,\n  onChange,\n  fieldNames = ['index'],\n  values,\n  setFieldValue,\n  controlWidth = CONTROL_WIDTH,\n  width = WIDTH,\n  override = {},\n  tooltipProps = {},\n}) {\n  /**\n   *** Props, validation, settings\n   **/\n\n  if (fieldNames.length > 2) {\n    throw new Error(\n      `Slider supports up to 2 fields, received ${fieldNames.length}`\n    )\n  }\n  // If isRange, Slider has two control points, showing range between them, for example:\n  // isRange === true    |------<====>---| values = { min: 7, max: 12 }\n  // isRange === false   |======>--------| values = { index: 7 }\n  const isRange = fieldNames.length === 2\n\n  if (!steps) {\n    // e.g. if highest value is 4.3 mb, stepInterval every 500kb => 9 steps, max is 4.5 mb\n    steps = Math.ceil(max / stepInterval)\n    max = steps * stepInterval\n  }\n\n  /**\n   *** Hooks, state, `position` and `stepIndex`\n   **/\n\n  const containerRef = useRef()\n  const lowerInputRef = useRef()\n  const upperInputRef = useRef()\n\n  const [fieldIsSliding, setFieldSliding] = useState('')\n\n  // Statefully store temporarily-invalid input while a user types,\n  // e.g. if the lower end of a range is \"5\", the upper end is \"12\",\n  // store the (invalid) \"1\" when user deletes \"2\" while typing \"14\"\n  const [lowerNumberInput, setLowerNumberInput] = useState(null)\n  const [upperNumberInput, setUpperNumberInput] = useState(null)\n\n  // If a `value` has no defined number, use the current default based on min/max, so it changes if min/max change\n  const lowerStepIndex =\n    typeof values[fieldNames[0]] === 'number'\n      ? values[fieldNames[0]]\n      : isRange\n      ? min\n      : max\n  const upperStepIndex =\n    isRange &&\n    (typeof values[fieldNames[1]] === 'number' ? values[fieldNames[1]] : max)\n\n  // Position is a decimal number >=0 <=1 representing the % distance along the slider\n  const lowerPosition = getStepPosition(lowerStepIndex, min, max, steps)\n  const upperPosition = isRange\n    ? getStepPosition(upperStepIndex, min, max, steps)\n    : null\n\n  const getValidatedIndex = (stepIndex, fieldName) => {\n    const isLower = isRange && fieldName === fieldNames[0]\n    if (isLower) {\n      if (stepIndex <= min) return ['', false] // Follows `min` if it changes\n      if (stepIndex >= upperStepIndex) return [upperStepIndex, false] // Don't cross over\n      return [stepIndex, true]\n    }\n\n    if (stepIndex >= max) return ['', false] // Follows `max` if it changes\n    if (isRange && stepIndex <= lowerStepIndex) return [lowerStepIndex, false] // Don't cross over\n    return [stepIndex, true]\n  }\n\n  /**\n   *** User interaction handlers\n   **/\n\n  const slideStart = (event, fieldName) => {\n    event.stopPropagation()\n    setFieldSliding(fieldName)\n  }\n  const slideEnd = () => {\n    setFieldSliding('')\n  }\n  const handleMouseMove = (event, fieldName = fieldIsSliding) => {\n    if (!fieldName) return\n    const mouseX = getMouseX(event, containerRef)\n    const position = getMousePosition(mouseX, width)\n\n    const stepIndex = getStepIndex(position, steps)\n    handleChange(stepIndex, fieldName)\n  }\n  const handleClick = async event => {\n    let fieldName = fieldNames[0]\n    if (isRange) {\n      const mouseX = getMouseX(event, containerRef)\n      const mousePosition = getMousePosition(mouseX, width)\n      fieldName = getNearestFieldName(\n        mousePosition,\n        lowerPosition,\n        upperPosition,\n        fieldNames\n      )\n    }\n    handleMouseMove(event, fieldName)\n  }\n  const handleNumberInput = (event, fieldName) => {\n    const stepIndex = parseInt(event.target.value)\n    if (isNaN(stepIndex)) {\n      updateNumberInput(fieldName, '')\n    } else {\n      handleChange(stepIndex, fieldName)\n    }\n  }\n  const handleChange = (stepIndex, fieldName) => {\n    const [newValue, wasValid] = getValidatedIndex(stepIndex, fieldName)\n    updateFieldValue(fieldName, newValue)\n\n    // If stepIndex was invalid, allow number input to keep it while user types\n    const numberInputValue = wasValid ? null : stepIndex\n    updateNumberInput(fieldName, numberInputValue)\n  }\n  const updateFieldValue = async (fieldName, stepIndex) => {\n    if (stepIndex !== values[fieldName]) {\n      await setFieldValue(fieldName, stepIndex)\n      onChange()\n    }\n  }\n  const updateNumberInput = (fieldName, stepIndex) => {\n    const isUpper = isRange && fieldName === 'max'\n    const setNumberInput = isUpper ? setUpperNumberInput : setLowerNumberInput\n    const numberInputRef = isUpper ? upperInputRef : lowerInputRef\n\n    const isInFocus = document.activeElement === numberInputRef.current\n\n    // Only set number input state while input is in focus\n    setNumberInput(isInFocus ? stepIndex : null)\n  }\n\n  /**\n   *** Styling and inline style calculation\n   **/\n\n  const belowPercent = `${Math.round(lowerPosition * 100)}%`\n  const abovePercent = `${Math.round(\n    (1 - (isRange ? upperPosition : lowerPosition)) * 100\n  )}%`\n\n  const controlOffset = `calc(${belowPercent} - ${controlWidth}px)`\n  const upperControlOffset =\n    isRange && `calc(${Math.round(upperPosition * 100)}% - ${controlWidth}px)`\n\n  const FirstSection = isRange ? InactiveSection : ActiveSection\n\n  return (\n    <Container\n      onMouseUp={slideEnd}\n      onMouseLeave={slideEnd}\n      onMouseMove={handleMouseMove}\n      width={width}\n      controlWidth={controlWidth}\n      as={override.Container}\n    >\n      <Bar\n        onClick={handleClick}\n        controlWidth={controlWidth}\n        as={override.Bar}\n        ref={containerRef}\n      >\n        <FirstSection\n          style={{ width: belowPercent }}\n          as={override.FirstSection}\n        />\n        <Tooltip {...tooltipProps}>\n          <Control\n            style={{ left: controlOffset }}\n            width={controlWidth}\n            onMouseDown={event => slideStart(event, fieldNames[0])}\n            isLower={isRange}\n            as={override.Control}\n          >\n            <Field\n              type=\"hidden\"\n              name={fieldNames[0]}\n              value={values[fieldNames[0]]}\n            />\n          </Control>\n        </Tooltip>\n        {isRange && (\n          <>\n            <ActiveSection as={override.ActiveSection} />\n            <Tooltip {...tooltipProps}>\n              <Control\n                style={{ left: upperControlOffset }}\n                width={controlWidth}\n                onMouseDown={event => slideStart(event, fieldNames[1])}\n                isUpper={isRange}\n                as={override.Control}\n              >\n                <Field\n                  type=\"hidden\"\n                  name={fieldNames[1]}\n                  value={values[fieldNames[1]]}\n                />\n              </Control>\n            </Tooltip>\n          </>\n        )}\n        <InactiveSection\n          style={{ width: abovePercent }}\n          as={override.InactiveSection}\n        />\n      </Bar>\n      <NumberFieldsWrapper as={override.NumberFieldsWrapper}>\n        <NumberLabelWrapper as={override.NumberLabelWrapper}>\n          {isRange && <NumberLabel as={override.NumberLabel}>Min:</NumberLabel>}\n          <NumberInput\n            type=\"number\"\n            ref={lowerInputRef}\n            step={stepInterval}\n            isDefault={typeof values[fieldNames[0]] !== 'number'}\n            min={min}\n            max={max}\n            value={\n              lowerNumberInput !== null ? lowerNumberInput : lowerStepIndex\n            }\n            onChange={event => handleNumberInput(event, fieldNames[0])}\n            onBlur={() => updateNumberInput(fieldNames[0], null)}\n            as={override.NumberInput}\n          />\n          <Icon\n            type=\"cancel\"\n            onClick={() => updateFieldValue(fieldNames[0], '')}\n            active={typeof values[fieldNames[0]] === 'number'}\n            disabled={typeof values[fieldNames[0]] !== 'number'}\n          />\n        </NumberLabelWrapper>\n        {isRange && (\n          <NumberLabelWrapper as={override.NumberLabelWrapper}>\n            <NumberLabel as={override.NumberLabel}>Max:</NumberLabel>\n            <NumberInput\n              type=\"number\"\n              ref={upperInputRef}\n              step={stepInterval}\n              isDefault={typeof values[fieldNames[1]] !== 'number'}\n              min={min}\n              max={max}\n              value={\n                upperNumberInput !== null ? upperNumberInput : upperStepIndex\n              }\n              onChange={event => handleNumberInput(event, fieldNames[1])}\n              onBlur={() => updateNumberInput(fieldNames[1], null)}\n              as={override.NumberInput}\n            />\n            <Icon\n              type=\"cancel\"\n              onClick={() => updateFieldValue(fieldNames[1], '')}\n              active={typeof values[fieldNames[1]] === 'number'}\n              disabled={typeof values[fieldNames[1]] !== 'number'}\n            />\n          </NumberLabelWrapper>\n        )}\n      </NumberFieldsWrapper>\n    </Container>\n  )\n}\n\nSlider.propTypes = {\n  onChange: T.func.isRequired,\n  values: T.object.isRequired,\n  setFieldValue: T.func.isRequired,\n  fieldNames: T.array,\n  min: T.number,\n  max: T.number,\n  steps: T.number,\n  stepInterval: T.number,\n  controlWidth: T.number,\n  width: T.number,\n  override: T.object,\n  tooltipProps: T.object,\n}\n\nexport default Slider\n","import styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  padding: ${({ theme }) => `${theme.spacing(0.5)} ${theme.spacing()}`};\n  position: relative;\n  z-index: 5;\n  cursor: pointer;\n  font-weight: bold;\n  &:focus {\n    outline: none;\n  }\n  ${({ theme, isActive }) => {\n    return `\n      background: ${theme.color(isActive ? 'highlight' : 'background')};\n      border: 1px solid ${theme.color('highlight')};\n      color: ${theme.color(isActive ? 'text' : 'highlight', isActive ? 2 : 0)};\n    `\n  }}\n`\n\nexport default StyledButton\n","// Temporary function for temp tooltip placeholder - flattens jsx-ified template strings\n// Remove this as soon as it's not needed\nfunction childrenToString(children) {\n  if (typeof children === 'string') return children\n  if (Array.isArray(children)) return children.join('')\n  if (!children) return ''\n}\n\nfunction copyToClipboard(text) {\n  // TODO: expand this and include a toast notice on success\n  navigator.clipboard.writeText(text)\n}\n\n// d3 data processors can fail very late if NaN or similar creep in.\n// Use this to fail early in memoised or non-perf-intensive functions.\nfunction validateNumbers(obj) {\n  const errors = Object.entries(obj).reduce(\n    (errors, [key, num]) =>\n      isNaN(num)\n        ? [...errors, `${key} is not numeric, is ${typeof num}: ${num}`]\n        : errors,\n    []\n  )\n\n  if (errors.length) throw new Error(errors.join('\\n\\n '))\n}\n\nexport { childrenToString, copyToClipboard, validateNumbers }\n","import { parseArrayBuffer } from '@libp2p-observer/data'\n\nfunction uploadDataFile(file, onUploadStart, onDataLoaded) {\n  if (!file) return\n  const reader = new FileReader()\n\n  // TODO: On integration with live output, share logic parsing file chunk by chunk\n  reader.onload = e => {\n    const metadata = {\n      type: 'upload',\n      name: file.name,\n    }\n\n    processUploadedData(\n      event.currentTarget.result,\n      file,\n      onDataLoaded,\n      metadata\n    )\n  }\n\n  reader.readAsArrayBuffer(file)\n  if (onUploadStart) onUploadStart(file)\n}\n\nasync function applySampleData(samplePath, onUploadStart, onDataLoaded) {\n  if (onUploadStart) onUploadStart()\n\n  const response = await fetch(samplePath)\n\n  if (!response.ok) {\n    const { status, statusText, url } = response\n    throw new Error(`${status} \"${statusText}\" fetching data from ${url}`)\n  }\n\n  const arrbuf = await response.arrayBuffer()\n\n  const metadata = {\n    type: 'sample',\n    name: 'Sample data',\n  }\n\n  processUploadedData(arrbuf, response, onDataLoaded, metadata)\n}\n\nfunction processUploadedData(arrayBuf, file, onDataLoaded, metadata) {\n  const data = parseArrayBuffer(arrayBuf)\n\n  if (metadata && data.states) data.states.metadata = metadata\n\n  if (onDataLoaded) onDataLoaded(data, file)\n}\n\nexport { uploadDataFile, processUploadedData, applySampleData }\n","function formatNumber(num, units, sigFigures = 3) {\n  const [unit, divider] =\n    units.find(([_, divider]) => num >= divider) || units[units.length - 1]\n\n  const value = num / divider\n  const formattedValue = sigFigures ? value.toPrecision(sigFigures) : value\n\n  return [formattedValue, unit]\n}\n\nfunction formatDataSize(num) {\n  if (num === 0) return ['0']\n\n  const units = [\n    ['pb', 1e15],\n    ['tb', 1e12],\n    ['gb', 1e9],\n    ['mb', 1e6],\n    ['kb', 1e3],\n    ['bytes', 1],\n  ]\n  return formatNumber(num, units)\n}\n\nfunction formatTime(timestamp) {\n  const time = new Date(timestamp)\n  const hr = padZero(time.getHours())\n  const min = padZero(time.getMinutes())\n  const sec = padZero(time.getSeconds())\n  return `${hr}:${min}:${sec}`\n}\n\nfunction padZero(num) {\n  return num.toLocaleString(undefined, { minimumIntegerDigits: 2 })\n}\n\nexport { formatDataSize, formatNumber, formatTime, padZero }\n","import React, { useContext, useState } from 'react'\nimport T from 'prop-types'\n\nimport { applySampleData } from '../../utils'\nimport { DataContext, SetterContext } from '@libp2p-observer/sdk'\n\nimport StyledButton from './StyledButton'\n\nfunction SampleDataButton({ title, samplePath }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const { dispatchDataset } = useContext(SetterContext)\n  const dataset = useContext(DataContext)\n\n  function handleButtonPress() {\n    if (dataset.isSample) {\n      dispatchDataset({\n        action: 'remove',\n      })\n      return\n    }\n\n    applySampleData(samplePath, handleUploadStart, handleDataLoaded)\n  }\n\n  function handleUploadStart() {\n    setIsLoading(true)\n  }\n\n  function handleDataLoaded(data) {\n    data.isSample = true\n\n    dispatchDataset({\n      action: 'replace',\n      data,\n    })\n    setIsLoading(false)\n  }\n\n  const buttonText =\n    (isLoading && 'Loading...') ||\n    (dataset.isSample && 'Remove sample') ||\n    title\n\n  return (\n    <StyledButton\n      onClick={handleButtonPress}\n      isActive={isLoading || dataset.isSample}\n    >\n      {buttonText}\n    </StyledButton>\n  )\n}\n\nSampleDataButton.propTypes = {\n  title: T.string.isRequired,\n  samplePath: T.string.isRequired,\n}\n\nexport default SampleDataButton\n","import React, { useContext, useRef, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { uploadDataFile } from '../../utils'\nimport { SetterContext } from '../context/DataProvider'\n\nimport StyledButton from './StyledButton'\n\nconst FileButton = styled(StyledButton)`\n  position: relative;\n  z-index: 5;\n`\nconst NativeFileInput = styled.input`\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n`\nconst RelativeSpan = styled.span`\n  position: relative;\n`\n\nfunction getButtonText(isLoading, fileName, title) {\n  if (isLoading) return 'Loading...'\n  return fileName ? `Replace file '${fileName}'` : title\n}\n\nfunction UploadDataButton({ title }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const { dispatchDataset } = useContext(SetterContext)\n  const fileInputRef = useRef()\n\n  function handleClick() {\n    fileInputRef.current.click()\n  }\n\n  function handleUpload(event) {\n    const file = event.target.files[0]\n    uploadDataFile(file, handleUploadStart, handleDataLoaded)\n  }\n\n  function handleUploadStart() {\n    setIsLoading(true)\n  }\n\n  function handleDataLoaded(data, file) {\n    dispatchDataset({\n      action: 'replace',\n      data,\n    })\n    setIsLoading(false)\n    setFileName(file.name)\n  }\n\n  const buttonText = getButtonText(isLoading, fileName, title)\n\n  return (\n    <RelativeSpan>\n      <FileButton onClick={handleClick}>{buttonText}</FileButton>\n      <NativeFileInput\n        ref={fileInputRef}\n        type=\"file\"\n        name=\"file\"\n        onChange={handleUpload}\n      />\n    </RelativeSpan>\n  )\n}\n\nUploadDataButton.propTypes = {\n  title: T.string.isRequired,\n}\n\nexport default UploadDataButton\n","import styled from 'styled-components'\n\n// TODO: develop these placeholders further\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`\n\nconst TableRow = styled.tr`\n  border-bottom: 2px solid ${({ theme }) => theme.color('background', 1)};\n  ${({ highlighted, theme }) =>\n    highlighted\n      ? `background-color: ${theme.color('background', 2, 0.5)};`\n      : ''}\n`\n\nconst TableHead = styled.th`\n  ${({ theme }) => theme.styles.tableCell}\n  padding-right: 0;\n  font-family: plex-sans;\n  font-weight: 600;\n  border-bottom: 1px solid ${({ theme }) => theme.color('background', 2)};\n  background-color: ${({ theme }) => theme.color('secondary', 1, 0.2)};\n  color: ${({ theme }) => theme.color('text', 0, 0.6)};\n  text-transform: uppercase;\n  white-space: nowrap;\n`\n\nconst TableCell = styled.td`\n  ${({ theme }) => theme.styles.tableCell}\n  font-size: 9pt;\n  padding-right: ${({ theme }) => theme.spacing(4)};\n  font-weight: 400;\n  font-family: plex-sans;\n  color: ${({ theme }) => theme.color('text', 1)};\n  ${({ align }) => align && `text-align: ${align};`}\n`\n\n// Provide unstyled styled-components so users can provide overrides using `as`\nconst THead = styled.thead``\nconst THeadRow = styled.tr``\nconst TBody = styled.tbody``\n\nexport { Table, TableRow, TableHead, TableCell, THead, THeadRow, TBody }\n","import React, { useMemo } from 'react'\nimport T from 'prop-types'\n\nimport { TableRow, TableCell } from './styledTable'\n\nfunction DataTableRow({ rowContentProps, columnDefs, ...rowProps }) {\n  // Don't re-render all cells (often expensive) when only row props change\n  const prerenderedCells = useMemo(\n    () => (\n      <>\n        {columnDefs.map(\n          ({ renderContent, name, cellProps = {} }, cellIndex) => {\n            return (\n              <TableCell key={name} {...cellProps}>\n                {renderContent(rowContentProps[cellIndex])}\n              </TableCell>\n            )\n          }\n        )}\n      </>\n    ),\n    [rowContentProps, columnDefs]\n  )\n\n  return <TableRow {...rowProps}>{prerenderedCells}</TableRow>\n}\n\nDataTableRow.propTypes = {\n  rowContentProps: T.array.isRequired,\n  columnDefs: T.array.isRequired,\n}\n\nexport default DataTableRow\n","import React, { useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\nimport { Formik } from 'formik'\nimport isEqual from 'lodash.isequal'\n\nimport Icon from '../Icon'\n\nconst Container = styled.span`\n  display: inline-block;\n  position: relative;\n`\n\nconst AccordionContent = styled.div`\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n  position: absolute;\n  top: 100%;\n  right: -${({ theme }) => theme.spacing()};\n  padding: ${({ theme }) => theme.spacing()};\n  background: ${({ theme }) => theme.color('background', 1, 0.8)};\n  z-index: 20;\n`\n\nfunction FilterButton({\n  addFilter,\n  removeFilter,\n  FilterUi,\n  initialFieldValues,\n  mapValues,\n  filterUiProps,\n  name,\n}) {\n  const [isOpen, setIsOpen] = useState(false)\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  const initialValues = Object.fromEntries(initialFieldValues)\n\n  const handleChange = newValues => {\n    if (isEqual(initialValues, newValues)) {\n      removeFilter()\n    } else {\n      addFilter(newValues)\n    }\n  }\n\n  const fieldNames = [...initialFieldValues.keys()]\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values, { setSubmitting }) => {\n        handleChange(values)\n        setSubmitting(false)\n      }}\n      enableReinitialize\n    >\n      {({ values, setFieldValue, submitForm, dirty }) => (\n        <Container>\n          <Icon type=\"filter\" onClick={toggleOpen} active={dirty} offset />\n          <AccordionContent isOpen={isOpen}>\n            <FilterUi\n              // 'Hard' enableReinitialize: remount when initialValues changes\n              // key={JSON.stringify(initialValues)}\n              onChange={submitForm}\n              values={values}\n              setFieldValue={setFieldValue}\n              fieldNames={fieldNames}\n              title={name}\n              {...filterUiProps}\n            />\n          </AccordionContent>\n        </Container>\n      )}\n    </Formik>\n  )\n}\n\nFilterButton.propTypes = {\n  addFilter: T.func.isRequired,\n  removeFilter: T.func.isRequired,\n  FilterUi: T.elementType.isRequired,\n  initialFieldValues: T.instanceOf(Map),\n  mapValues: T.func,\n  filterUiProps: T.object,\n  name: T.string,\n}\n\nexport default FilterButton\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { TableHead } from './styledTable'\nimport FilterButton from '../input/FilterButton'\nimport Icon from '../Icon'\n\nconst ButtonsTray = styled.span`\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  margin-left: ${({ theme }) => theme.spacing(2)};\n`\n\nfunction getSortType(isSortable, isSorted, sortDirection) {\n  if (!isSortable) return null\n  if (!isSorted) return 'sort'\n  return sortDirection\n}\n\nfunction DataTableHead({\n  columnDef,\n  cellIndex,\n  sortColumn,\n  setSortColumn,\n  sortDirection,\n  setSortDirection,\n  ...props\n}) {\n  const isSortable = !!columnDef.sort\n  const isSorted = isSortable && sortColumn === columnDef.name\n  const isFilterable = !!columnDef.filter\n\n  const sortIconType = getSortType(isSortable, isSorted, sortDirection)\n\n  const sortIconAction = () => {\n    if (sortIconType === 'sort') {\n      setSortColumn(columnDef.name)\n      const defaultSortDirection = columnDef.sort.defaultDirection\n      if (sortDirection !== defaultSortDirection)\n        setSortDirection(defaultSortDirection)\n      return\n    }\n    setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')\n  }\n\n  return (\n    <TableHead\n      key={columnDef.name}\n      sortable={isSortable}\n      sortDirection={isSorted ? sortDirection : null}\n      filterable={isFilterable}\n      {...props}\n    >\n      {columnDef.header}\n      <ButtonsTray>\n        {isSortable && (\n          <>\n            <Icon\n              type={sortIconType}\n              active={sortIconType !== 'sort'}\n              onClick={() => sortIconAction()}\n              offset\n            />\n          </>\n        )}\n        {isFilterable && (\n          <>\n            <FilterButton {...columnDef.filter} />\n          </>\n        )}\n      </ButtonsTray>\n    </TableHead>\n  )\n}\n\nDataTableHead.propTypes = {\n  columnDef: T.object.isRequired,\n  cellIndex: T.number.isRequired,\n  sortColumn: T.string,\n  setSortColumn: T.func,\n  sortDirection: T.string,\n  setSortDirection: T.func,\n  filters: T.array,\n}\n\nexport default DataTableHead\n","import React from 'react'\nimport T from 'prop-types'\n\nimport DefaultDataTableRow from './DataTableRow'\nimport DefaultDataTableHead from './DataTableHead'\nimport { Table, THead, THeadRow, TBody } from './styledTable'\n\nfunction DataTable({\n  tableContentProps,\n  columnDefs,\n  sortColumn,\n  setSortColumn,\n  sortDirection,\n  setSortDirection,\n  override = {},\n}) {\n  const DataTableRow = override.DataTableRow || DefaultDataTableRow\n  const DataTableHead = override.DataTableHead || DefaultDataTableHead\n  return (\n    <Table as={override.TableHead}>\n      <THead as={override.THead}>\n        <THeadRow as={override.THeadRow}>\n          {columnDefs.map((columnDef, cellIndex) => (\n            <DataTableHead\n              key={columnDef.name}\n              columnDef={columnDef}\n              cellIndex={cellIndex}\n              sortColumn={sortColumn}\n              setSortColumn={setSortColumn}\n              sortDirection={sortDirection}\n              setSortDirection={setSortDirection}\n            />\n          ))}\n        </THeadRow>\n      </THead>\n      <TBody as={override.TBody}>\n        {tableContentProps.map((rowContentProps, rowIndex) => (\n          <DataTableRow\n            key={`row_${rowIndex}`}\n            rowContentProps={rowContentProps}\n            columnDefs={columnDefs}\n          />\n        ))}\n      </TBody>\n    </Table>\n  )\n}\n\nDataTable.propTypes = {\n  tableContentProps: T.array.isRequired,\n  columnDefs: T.array.isRequired,\n  TableRow: T.any,\n  TableHead: T.any,\n  sortColumn: T.string,\n  setSortColumn: T.func,\n  sortDirection: T.string,\n  setSortDirection: T.func,\n  override: T.object,\n}\n\nexport default DataTable\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport { formatDataSize } from '../../utils/formats'\n\nconst NumWrapper = styled.span`\n  font-family: 'plex-mono';\n  white-space: nowrap;\n`\n\nconst Unit = styled.span`\n  // Use cell right padding for units, aligning with icons\n  margin-right: -${({ theme }) => theme.spacing()};\n  padding-left: ${({ theme }) => theme.spacing()};\n  font-family: 'plex-sans';\n  font-weight: 300;\n  font-size: 90%;\n  width: ${({ theme }) => theme.spacing(4)};\n  display: inline-block;\n  text-align: left;\n`\n\nfunction FormatedNumber({ value, unit = '' }) {\n  if (parseInt(value) === 0) {\n    return (\n      <NumWrapper>\n        {0}\n        <Unit />\n      </NumWrapper>\n    )\n  }\n\n  return (\n    <NumWrapper>\n      {value}\n      <Unit>{unit}</Unit>\n    </NumWrapper>\n  )\n}\n\nFormatedNumber.propTypes = {\n  value: T.oneOfType([T.number, T.string]).isRequired,\n  unit: T.string,\n}\n\nfunction TimeNumber({ value }) {\n  return <FormatedNumber value={value} unit=\"s\" />\n}\n\nTimeNumber.propTypes = {\n  value: T.number.isRequired,\n}\n\nfunction DataNumber({ value }) {\n  const [formattedValue, unit] = formatDataSize(value)\n  return <FormatedNumber value={formattedValue} unit={unit} />\n}\n\nDataNumber.propTypes = {\n  value: T.number.isRequired,\n}\n\nexport { TimeNumber, DataNumber }\n","import React, { useContext, useState } from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport Tooltip from '../Tooltip'\nimport StyledButton from '../input/StyledButton'\nimport { RootNodeContext } from '../context/RootNodeProvider'\nimport { copyToClipboard } from '../../utils/helpers'\n\nconst SegmentedPeerId = styled.div`\n  padding-top: ${({ theme }) => theme.spacing()};\n  font-family: plex-mono;\n  font-size: 9pt;\n`\n\nconst Positioner = styled.div`\n  top: -${({ theme }) => theme.spacing(2)};\n  transform: none;\n`\n\nconst Tick = styled.div`\n  top: ${({ theme }) => theme.spacing(3)};\n`\n\nfunction PeerIdTooltip({ peerId, children }) {\n  const [isCopied, setIsCopied] = useState(false)\n  const rootNodeRef = useContext(RootNodeContext)\n\n  const segmentsCount = 4\n  const segmentsLength = Math.round(peerId.length / segmentsCount) // Usually 64 / 4 = 16\n  const peerIdSegments = []\n  let i = 0\n  while (i < segmentsCount) {\n    const segment = peerId.slice(segmentsLength * i, segmentsLength * (i + 1))\n    peerIdSegments.push(<span key={`segment-${i}`}>{segment}</span>)\n    i++\n    if (i < segmentsCount) peerIdSegments.push(<wbr key={`break-${i}`} />)\n  }\n\n  const copyPeerId = () => {\n    copyToClipboard(peerId)\n    setIsCopied(true)\n    setTimeout(() => setIsCopied(false), 1750)\n  }\n\n  const copyButtonText = isCopied\n    ? `COPIED \"${peerId.slice(0, 4)}…\"`\n    : 'COPY PEER ID'\n\n  return (\n    <Tooltip\n      side=\"right\"\n      containerRef={rootNodeRef}\n      override={{ Positioner, Tick }}\n      content={\n        <>\n          <StyledButton isActive={isCopied} onClick={copyPeerId}>\n            {copyButtonText}\n          </StyledButton>\n          <SegmentedPeerId>{peerIdSegments}</SegmentedPeerId>\n        </>\n      }\n    >\n      {children}\n    </Tooltip>\n  )\n}\n\nPeerIdTooltip.propTypes = {\n  peerId: T.string.isRequired,\n  children: T.node,\n}\n\nexport default PeerIdTooltip\n","import React from 'react'\nimport T from 'prop-types'\nimport styled from 'styled-components'\n\nimport PeerIdTooltip from './PeerIdTooltip'\n\nconst TruncatedPeerId = styled.span`\n  font-family: plex-mono;\n  display: inline-block;\n`\n\nfunction PeerId({ peerId }) {\n  const truncationLength = 5\n  const truncatedId = peerId.slice(peerId.length - truncationLength)\n\n  return (\n    <PeerIdTooltip peerId={peerId} truncationLength={truncationLength}>\n      <TruncatedPeerId>{'…' + truncatedId}</TruncatedPeerId>\n    </PeerIdTooltip>\n  )\n}\n\nPeerId.propTypes = {\n  peerId: T.string,\n  children: T.node,\n  onClick: T.func,\n}\n\nexport default PeerId\n","import { useReducer, useCallback } from 'react'\nimport T from 'prop-types'\n\nfunction updateFilters(filters, { action, name, doFilter, mapFilter, values }) {\n  switch (action) {\n    case 'update':\n      return updateValues(filters, name, values)\n    case 'add':\n      return addFilter(filters, { name, doFilter, mapFilter, values })\n    case 'remove':\n      return removeFilter(filters, name)\n    default:\n      throw new Error(`Unrecognised action \"${action}\" for updateFilters`)\n  }\n}\n\nfunction updateValues(filters, name, values) {\n  const existingFilter = filters.find(filter => filter.name === name)\n  if (!existingFilter)\n    throw new Error(\n      `No filter named \"${name}\", only \"${filters\n        .map(filter => filter.name)\n        .join('\", \"')}\"`\n    )\n\n  // Return same array reference => nothing updates\n  if (existingFilter.values === values) return filters\n\n  existingFilter.values = values\n  // Return different array reference => hook updates\n  return [...filters]\n}\n\nfunction addFilter(filters, newFilter) {\n  if (filters.some(filter => filter.name === newFilter.name)) {\n    return updateValues(filters, newFilter.name, newFilter.values)\n  }\n\n  return [...filters, newFilter]\n}\n\nfunction removeFilter(filters, filterName) {\n  const filterIndex = filters.findIndex(filter => filter.name === filterName)\n  if (filterIndex === -1) return filters\n\n  filters.splice(filterIndex, 1)\n  return [...filters]\n}\n\nfunction useFilter(initialFilters) {\n  const [filters, dispatchFilters] = useReducer(updateFilters, initialFilters)\n\n  const applyFilters = useCallback(\n    datum => {\n      if (!filters.length) return true\n      return filters.every(\n        ({ doFilter, values, mapFilter = d => d }) =>\n          !values || doFilter(mapFilter(datum), values)\n      )\n    },\n    [filters]\n  )\n\n  return { applyFilters, dispatchFilters, filters }\n}\n\nuseFilter.propTypes = {\n  initialFilters: T.arrayOf(\n    T.shape({\n      name: T.string.isRequired,\n      doFilter: T.func.isRequired,\n      initialValues: T.any,\n      mapFilter: T.func,\n    })\n  ).isRequired,\n  mapFilter: T.func,\n}\n\nexport default useFilter\n","import { useState } from 'react'\nimport T from 'prop-types'\n\nfunction validateDirection(sortDirection, directionOptions) {\n  // null disables sorter\n  if (!sortDirection) return\n\n  const directionOptionKeys = directionOptions.map(option => option[0])\n\n  if (!directionOptionKeys.includes(sortDirection)) {\n    throw new Error(\n      `Sort direction ${sortDirection} not one of \"${directionOptionKeys.join(\n        '\", \"'\n      )}\"`\n    )\n  }\n}\n\nfunction makeSorter(sortDirection, getSorter, mapSorter) {\n  if (!sortDirection) return () => {}\n  if (!mapSorter) return getSorter(sortDirection)\n  const sorter = getSorter(sortDirection)\n  return (a, b) => sorter(mapSorter(a), mapSorter(b))\n}\n\nfunction noopSorter() {\n  return 0\n}\n\nconst defaultOptions = [\n  ['asc', 'ascending'],\n  ['desc', 'descending'],\n]\n\nfunction useSorter({\n  getSorter,\n  mapSorter,\n  defaultDirection,\n  directionOptions = defaultOptions,\n  disabled = false,\n}) {\n  const [sortDirection, setSortDirection] = useState(defaultDirection || null)\n\n  if (disabled || !getSorter)\n    return { noopSorter, sortDirection, setSortDirection }\n\n  validateDirection(sortDirection, directionOptions)\n  const sorter = makeSorter(sortDirection, getSorter, mapSorter)\n\n  return {\n    sorter,\n    sortDirection,\n    setSortDirection,\n  }\n}\n\nuseSorter.propTypes = {\n  data: T.array.isRequired,\n  getSorter: T.func.isRequired,\n  mapSorter: T.func,\n  defaultDirection: T.string,\n  directionOptions: T.arrayOf([\n    T.arrayOf([\n      T.string, // direction name\n      T.string, // optional user-facing direction label\n      T.node, // optional icon\n    ]),\n  ]),\n  disabled: T.bool,\n}\n\nexport default useSorter\n","import { useContext, useMemo } from 'react'\n\nimport useSorter from '../hooks/useSorter'\nimport useFilter from '../hooks/useFilter'\nimport { DataContext } from '../components/context/DataProvider'\n\nimport { scaleLinear, scaleTime, stack } from 'd3'\n\nimport { validateNumbers } from '../utils/helpers'\n\nfunction getMaxAreaPeak(stackedData) {\n  return stackedData.reduce(\n    (maxOverall, timeDatum) =>\n      Math.max(\n        maxOverall,\n        timeDatum.reduce(\n          (maxHere, [, upperAreaPoint]) => Math.max(maxHere, upperAreaPoint),\n          0\n        )\n      ),\n    0\n  )\n}\n\nfunction getKeyedData(dataset, sorter, applyFilters, getKeys, keyData) {\n  const keys = getKeys(dataset, sorter, applyFilters)\n\n  // Returns array of objects with a numeric value for each key\n  // and a property for the x-axis value.\n  const keyedData = keyData(dataset, keys)\n\n  return { keys, keyedData }\n}\n\nfunction stackData(keyedData, keys) {\n  const dataStacker = stack().keys(keys)\n\n  const stackedData = dataStacker(keyedData)\n\n  const maxY = getMaxAreaPeak(stackedData)\n\n  // Assumes all stacked data will be by timepoint - if not will need more options\n  const xScale = scaleTime()\n  // Scaling from dataset[0] leaves a gap of the width of 1 datapoint\n  const minX = keyedData[0].time\n  const maxX = keyedData[keyedData.length - 1].time\n\n  const yScale = scaleLinear()\n\n  validateNumbers({\n    maxY,\n    minX,\n    maxX,\n  })\n\n  xScale.domain([minX, maxX])\n  yScale.domain([0, maxY])\n\n  return {\n    stackedData,\n    xScale,\n    yScale,\n  }\n}\n\nfunction useStackedData({\n  getKeys,\n  keyData,\n  getSorter,\n  mapSorter,\n  defaultDirection = '',\n}) {\n  const dataset = useContext(DataContext)\n\n  const { sorter, setSortDirection } = useSorter({\n    getSorter,\n    mapSorter: mapSorter,\n    defaultDirection: 'desc',\n  })\n\n  const { applyFilters, dispatchFilters } = useFilter([])\n\n  const { keys, keyedData } = useMemo(\n    () => getKeyedData(dataset, sorter, applyFilters, getKeys, keyData),\n    [dataset, sorter, applyFilters, getKeys, keyData]\n  )\n\n  // If we need to optimise this further for live data, can compare new data to\n  // max peak, key new datapoints individually and append if it's not greater than the peak\n  const { stackedData, xScale, yScale } = useMemo(\n    () => stackData(keyedData, keys),\n    [keyedData, keys]\n  )\n\n  return {\n    stackedData,\n    xScale,\n    yScale,\n    setSortDirection,\n    dispatchFilters,\n  }\n}\n\nuseStackedData.propTypes = {}\n\nexport default useStackedData\n","import React, { useContext, useMemo, useState } from 'react'\nimport T from 'prop-types'\n\nimport useSorter from '../hooks/useSorter'\nimport useFilter from '../hooks/useFilter'\nimport { TimeContext } from '../components/context/DataProvider'\n\nfunction mapSorterToColumn(colName, columnDefs) {\n  const sortColumnIndex = columnDefs.findIndex(col => col.name === colName)\n  return row => row[sortColumnIndex].value\n}\n\nfunction getTableContentProps(data, columnDefs, timepoint) {\n  return data.map((datum, rowIndex) =>\n    columnDefs.map((columnDef, columnIndex) => ({\n      ...columnDef.getProps(datum, timepoint),\n      rowIndex,\n      columnIndex,\n      columnName: columnDef.name,\n    }))\n  )\n}\n\nfunction applyColumnDefaults(columns) {\n  return columns.map(column =>\n    Object.assign(\n      {},\n      {\n        header: column.name,\n        getProps: datum => ({ value: datum[column.name] }),\n        renderContent: DefaultRenderer,\n      },\n      column\n    )\n  )\n}\n\nfunction applyCalculations(columns, rawContentProps) {\n  return columns.map((column, columnIndex) => {\n    if (!column.calculate) return column\n    const columnProps = rawContentProps.map(row => row[columnIndex])\n\n    const calculated = Object.entries(column.calculate).reduce(\n      (calculated, [key, doCalc]) => {\n        calculated[key] = doCalc(columnProps)\n        return calculated\n      },\n      {}\n    )\n\n    return Object.assign({}, column, calculated)\n  })\n}\n\nfunction DefaultRenderer({ value }) {\n  return <>{value}</>\n}\nDefaultRenderer.propTypes = {\n  value: T.any,\n}\n\nfunction getInitialSortDef(sortColumn, columnDefs) {\n  const sortDef =\n    sortColumn && columnDefs.find(col => col.name === sortColumn).sort\n  if (!sortDef) return { disabled: true }\n\n  return {\n    ...sortDef,\n    mapSorter: mapSorterToColumn(sortColumn, columnDefs),\n  }\n}\n\nfunction useTabularData({ columns, data, defaultSort, defaultFilter }) {\n  const [sortColumn, setSortColumn] = useState(defaultSort)\n  const timepoint = useContext(TimeContext)\n\n  const columnsWithDefaults = applyColumnDefaults(columns)\n\n  const rawContentProps = useMemo(() => {\n    return getTableContentProps(data, columnsWithDefaults, timepoint)\n  }, [data, columnsWithDefaults, timepoint])\n\n  const columnDefs = applyCalculations(columnsWithDefaults, rawContentProps)\n\n  const { sorter, sortDirection, setSortDirection } = useSorter(\n    getInitialSortDef(sortColumn, columnDefs)\n  )\n\n  const { applyFilters, dispatchFilters } = useFilter([])\n\n  // Give each filterable column functions to update its column's filter values\n  columnDefs.forEach(col => {\n    if (!col.filter || !!col.filter.updateValues) return\n\n    col.filter.updateValues = values =>\n      dispatchFilters({\n        action: 'update',\n        name: col.filter.name,\n        values,\n      })\n\n    col.filter.addFilter = values =>\n      dispatchFilters({\n        action: 'add',\n        name: col.filter.name,\n        doFilter: col.filter.doFilter,\n        values,\n        mapFilter: row =>\n          row.find(({ columnName }) => columnName === col.name).value,\n      })\n\n    col.filter.removeFilter = () =>\n      dispatchFilters({\n        action: 'remove',\n        name: col.filter.name,\n      })\n  })\n\n  const tableContentProps = useMemo(() => {\n    const filteredContentProps = rawContentProps.filter(applyFilters)\n    filteredContentProps.sort(sorter)\n    return filteredContentProps\n  }, [rawContentProps, sorter, applyFilters])\n\n  return {\n    columnDefs,\n    tableContentProps,\n    sortColumn,\n    setSortColumn,\n    sortDirection,\n    setSortDirection,\n  }\n}\n\nuseTabularData.propTypes = {\n  columns: T.arrayOf(\n    T.shape({\n      name: T.string.required,\n      header: T.node,\n      getProps: T.func,\n      renderContent: T.elementType,\n      sort: T.shape({\n        sorter: T.func,\n        defaultDirection: T.string,\n        directionOptions: T.instanceOf(Map),\n      }),\n      filter: T.shape({\n        doFilter: T.func.isRequired,\n        initialValues: T.any,\n        filterUi: T.node,\n        updateValues: T.func,\n      }),\n    })\n  ).isRequired,\n  data: T.arrayOf(T.object).isRequired,\n  defaultSort: T.string,\n  defaultFilter: T.obj,\n}\n\nexport default useTabularData\n","import { useMemo } from 'react'\nimport T from 'prop-types'\nimport { area } from 'd3'\n\nfunction scaleAreaChart(height, width, xScale, yScale, flip) {\n  xScale.range([0, width])\n  yScale.range(flip ? [0, height] : [height, 0])\n\n  const areaMaker = area()\n    .x(d => xScale(d.data.time))\n    .y0(d => yScale(d[0]))\n    .y1(d => yScale(d[1]))\n\n  return areaMaker\n}\n\nfunction getPathDefs(stackedData, areaMaker) {\n  const pathDefs = stackedData.map(datum => ({\n    pathDef: areaMaker(datum),\n    peerId: datum.key,\n  }))\n\n  return pathDefs\n}\n\nfunction useAreaChart({\n  height,\n  width,\n  stackedData,\n  xScale,\n  yScale,\n  flip = false,\n}) {\n  // Both steps are potentially very expensive if applied to large,\n  // rapidly changing data sets, so don't rescale unless needed\n\n  const areaMaker = useMemo(\n    () => scaleAreaChart(height, width, xScale, yScale, flip),\n    [height, width, xScale, yScale, flip]\n  )\n\n  const pathDefs = useMemo(() => getPathDefs(stackedData, areaMaker), [\n    stackedData,\n    areaMaker,\n  ])\n\n  return pathDefs\n}\n\nuseAreaChart.propTypes = {\n  height: T.number.isRequired,\n  width: T.number.isRequired,\n  stackedData: T.array.isRequired,\n  xScale: T.func.isRequired,\n  yScale: T.func.isRequired,\n}\n\nexport default useAreaChart\n","import CheckboxList from '../components/input/fields/CheckboxList'\n\nconst defaultFilter = (targetValue, values) => {\n  return !!values[targetValue]\n}\nconst DefaultUi = CheckboxList\n\nfunction getListFilter({\n  options,\n  defaultValue = true,\n  name = 'Filter from list',\n  doFilter = defaultFilter,\n  FilterUi = DefaultUi,\n}) {\n  if (!options || !Array.isArray(options))\n    throw new Error(\n      `listFilter requires an array of options, got ${typeof options}`\n    )\n\n  const initialFieldValues = new Map(\n    options.map(option => [option, defaultValue])\n  )\n\n  return {\n    name,\n    doFilter,\n    FilterUi,\n    initialFieldValues,\n  }\n}\n\nexport default getListFilter\n","import Slider from '../components/input/fields/Slider'\n\nconst defaultFilter = (targetValue, values) => {\n  // If a value is null, that end of the rnage is unset, so allow all\n  if (typeof values['min'] === 'number' && targetValue < values['min'])\n    return false\n  if (typeof values['max'] === 'number' && targetValue > values['max'])\n    return false\n  return true\n}\nconst DefaultUi = Slider\n\nfunction getRangeFilter({\n  steps,\n  min = 0,\n  max = 0,\n  name = 'Filter by range',\n  doFilter = defaultFilter,\n  FilterUi = DefaultUi,\n}) {\n  // Use empty strings for null values so form elements don't become uncontrolled\n  const initialFieldValues = new Map([\n    ['min', ''],\n    ['max', ''],\n  ])\n\n  return {\n    name,\n    doFilter,\n    FilterUi,\n    initialFieldValues,\n    filterUiProps: {\n      min,\n      max,\n      steps,\n    },\n  }\n}\n\nexport default getRangeFilter\n","function getNumericSorter(direction) {\n  const numericSorter = (a, b) => (direction === 'asc' ? a - b : b - a)\n  return numericSorter\n}\n\nexport default getNumericSorter\n","function getStringSorter(direction) {\n  const caselessSorter = Intl.Collator('en').compare\n  const stringSorter = (a, b) => {\n    const sortNum = caselessSorter(a, b)\n    return direction === 'asc' ? sortNum : sortNum * -1\n  }\n  return stringSorter\n}\n\nexport default getStringSorter\n","export * from './components'\nexport * from './hooks'\nexport * from './filters'\nexport * from './sorters'\nexport * from './utils'\n","'use strict';\n\nvar _defineProperty = require(\"/home/runner/work/libp2p-introspection-ui/libp2p-introspection-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar binary = require('./lib/binary');\n\nvar enums = require('./lib/enums');\n\nvar helpers = require('./lib/helpers');\n\nmodule.exports = _objectSpread({}, binary, {}, enums, {}, helpers);","module.exports = __webpack_public_path__ + \"static/media/screenshot.3a5301f8.png\";","module.exports = __webpack_public_path__ + \"static/media/Nexa-Light.5c6f5c99.otf\";","module.exports = __webpack_public_path__ + \"static/media/Nexa-Bold.254370af.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-ExtraLight.2c560953.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Light.074e5648.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Regular.177a43ac.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Text.9ac3a2a3.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Medium.74982386.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-SemiBold.1f4b8be3.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexSans-Bold.b7601880.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexMono-Light.f9679767.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexMono-Text.3ca905f2.otf\";","module.exports = __webpack_public_path__ + \"static/media/IBMPlexMono-SemiBold.dbf7ec0b.otf\";","import {\n  getAge,\n  getTime,\n  getTraffic,\n  statusNames,\n  transportNames,\n} from '@libp2p-observer/data'\nimport {\n  getStringSorter,\n  getNumericSorter,\n  getRangeFilter,\n} from '@libp2p-observer/sdk'\n\nimport {\n  AgeContent,\n  BytesContent,\n  PeerIdContent,\n  StatusContent,\n} from '../components/cellContent'\n\nimport * as statusSorter from '../utils/statusSorter'\nimport statusFilter from '../utils/statusFilter'\n\nfunction getMaxValue(column) {\n  return column.reduce((max, { value }) => Math.max(max, value), 0)\n}\n\nconst stringSorter = {\n  getSorter: getStringSorter,\n  defaultDirection: 'asc',\n}\n\nconst numericSorter = {\n  getSorter: getNumericSorter,\n  defaultDirection: 'desc',\n}\n\nconst peerIdCol = {\n  name: 'peerId',\n  header: 'Peer ID',\n  getProps: connection => ({ value: connection.getPeerId() }),\n  renderContent: PeerIdContent,\n  sort: stringSorter,\n}\n\nconst dataInCol = {\n  name: 'data-in',\n  header: 'Data in',\n  getProps: connection => ({\n    value: getTraffic(connection, 'in', 'bytes'),\n    label: 'inbound',\n  }),\n  renderContent: BytesContent,\n  sort: numericSorter,\n}\n\nconst dataOutCol = {\n  name: 'data-out',\n  header: 'Data out',\n  getProps: connection => ({\n    value: getTraffic(connection, 'out', 'bytes'),\n    label: 'outbound',\n  }),\n  renderContent: BytesContent,\n  sort: numericSorter,\n}\n\nconst ageCol = {\n  name: 'age',\n  header: 'Time open',\n  getProps: (connection, timepoint) => {\n    const time = getTime(timepoint)\n    const openTs = connection.getTimeline().getOpenTs()\n    const closeTs = connection.getTimeline().getCloseTs()\n    const age = getAge(time, openTs, closeTs)\n    return { value: age }\n  },\n  renderContent: AgeContent,\n  sort: numericSorter,\n}\n\nconst streamsCol = {\n  name: 'streams',\n  getProps: connection => ({\n    value: connection.getStreams().getStreamsList().length,\n  }),\n  sort: numericSorter,\n  calculate: {\n    filter: column =>\n      getRangeFilter({\n        min: 0,\n        max: getMaxValue(column),\n        name: 'Filter number of streams',\n      }),\n  },\n}\n\nconst transportCol = {\n  name: 'transport',\n  getProps: connection => {\n    const transportIdBin = connection.getTransportId()\n    const transportIdInt = Buffer.from(transportIdBin).readUIntLE(\n      0,\n      transportIdBin.length\n    )\n    return { value: transportNames[transportIdInt] }\n  },\n  sort: stringSorter,\n}\n\nconst statusCol = {\n  name: 'status',\n  getProps: connection => ({ value: statusNames[connection.getStatus()] }),\n  cellProps: { align: 'left' },\n  renderContent: StatusContent,\n  sort: statusSorter,\n  filter: statusFilter,\n}\n\n// Define column order\n\nconst columns = [\n  statusCol,\n  peerIdCol,\n  dataInCol,\n  dataOutCol,\n  ageCol,\n  streamsCol,\n  transportCol,\n]\n\nexport default columns\n","const defaultDirection = 'asc'\n\nconst directionOptions = [\n  ['asc', 'Open first'],\n  ['desc', 'Closed first'],\n]\n\nconst openFirstOrder = ['ACTIVE', 'OPENING', 'CLOSING', 'CLOSED', 'ERROR']\nconst closedFirstOrder = ['CLOSED', 'CLOSING', 'ERROR', 'ACTIVE', 'OPENING']\n\nfunction getSorter(direction) {\n  const statusSorter = (a, b) => {\n    if (a === b) return 0\n    const statusOrder = direction === 'asc' ? openFirstOrder : closedFirstOrder\n    const sortNum = statusOrder.indexOf(a) > statusOrder.indexOf(b) ? 1 : -1\n    return sortNum\n  }\n  return statusSorter\n}\n\nexport { defaultDirection, directionOptions, getSorter }\n","import { getListFilter } from '@libp2p-observer/sdk'\nimport { statusNames } from '@libp2p-observer/data'\n\nconst statusNamesList = Object.values(statusNames)\n\nconst statusFilter = getListFilter({\n  name: 'Filter by status',\n  options: statusNamesList,\n})\n\nexport default statusFilter\n"],"sourceRoot":""}